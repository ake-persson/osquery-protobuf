// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/hardware_event.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Hardware (PCI/USB/HID) events from UDEV or IOKit.
type HardwareEvent struct {
	// Remove
	Action string `protobuf:"bytes,1,opt,name=action,proto3" json:"action"`
	// Local device path assigned (optional)
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path"`
	// Type of hardware and hardware event
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`
	// Driver claiming the device
	Driver string `protobuf:"bytes,4,opt,name=driver,proto3" json:"driver"`
	// Hardware device vendor
	Vendor string `protobuf:"bytes,5,opt,name=vendor,proto3" json:"vendor"`
	// Hex encoded Hardware vendor identifier
	VendorId string `protobuf:"bytes,6,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id"`
	// Hardware device model
	Model string `protobuf:"bytes,7,opt,name=model,proto3" json:"model"`
	// Hex encoded Hardware model identifier
	ModelId string `protobuf:"bytes,8,opt,name=model_id,json=modelId,proto3" json:"model_id"`
	// Device serial (optional)
	Serial string `protobuf:"bytes,9,opt,name=serial,proto3" json:"serial"`
	// Device revision (optional)
	Revision string `protobuf:"bytes,10,opt,name=revision,proto3" json:"revision"`
	// Time of hardware event
	Time int64 `protobuf:"varint,11,opt,name=time,proto3" json:"time"`
	// Event ID
	Eid                  string   `protobuf:"bytes,12,opt,name=eid,proto3" json:"eid"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HardwareEvent) Reset()         { *m = HardwareEvent{} }
func (m *HardwareEvent) String() string { return proto.CompactTextString(m) }
func (*HardwareEvent) ProtoMessage()    {}
func (*HardwareEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b08f1da43b59b84, []int{0}
}

func (m *HardwareEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HardwareEvent.Unmarshal(m, b)
}
func (m *HardwareEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HardwareEvent.Marshal(b, m, deterministic)
}
func (m *HardwareEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HardwareEvent.Merge(m, src)
}
func (m *HardwareEvent) XXX_Size() int {
	return xxx_messageInfo_HardwareEvent.Size(m)
}
func (m *HardwareEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_HardwareEvent.DiscardUnknown(m)
}

var xxx_messageInfo_HardwareEvent proto.InternalMessageInfo

func (m *HardwareEvent) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *HardwareEvent) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *HardwareEvent) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *HardwareEvent) GetDriver() string {
	if m != nil {
		return m.Driver
	}
	return ""
}

func (m *HardwareEvent) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *HardwareEvent) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *HardwareEvent) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *HardwareEvent) GetModelId() string {
	if m != nil {
		return m.ModelId
	}
	return ""
}

func (m *HardwareEvent) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

func (m *HardwareEvent) GetRevision() string {
	if m != nil {
		return m.Revision
	}
	return ""
}

func (m *HardwareEvent) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *HardwareEvent) GetEid() string {
	if m != nil {
		return m.Eid
	}
	return ""
}

func init() {
	proto.RegisterType((*HardwareEvent)(nil), "schemas.HardwareEvent")
}

func init() { proto.RegisterFile("pb/hardware_event.proto", fileDescriptor_0b08f1da43b59b84) }

var fileDescriptor_0b08f1da43b59b84 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x90, 0xcf, 0x4a, 0x03, 0x31,
	0x10, 0x87, 0x69, 0xb7, 0xdd, 0x3f, 0x51, 0x41, 0x82, 0x68, 0xd4, 0x4b, 0xf1, 0xd4, 0x8b, 0x5d,
	0x51, 0xd0, 0x83, 0x37, 0x41, 0xb0, 0xd7, 0x1e, 0xbd, 0x94, 0xec, 0x66, 0xec, 0x86, 0x76, 0x37,
	0x31, 0xc9, 0xae, 0xf4, 0x89, 0x7c, 0x4d, 0xc9, 0xcc, 0x7a, 0xfb, 0x7d, 0xdf, 0xcc, 0x30, 0xcc,
	0xb0, 0x2b, 0x5b, 0x95, 0x8d, 0x74, 0xea, 0x47, 0x3a, 0xd8, 0xc2, 0x00, 0x5d, 0x58, 0x59, 0x67,
	0x82, 0xe1, 0x99, 0xaf, 0x1b, 0x68, 0xa5, 0xbf, 0xfb, 0x9d, 0xb2, 0xb3, 0x8f, 0xb1, 0xe3, 0x3d,
	0x36, 0xf0, 0x4b, 0x96, 0xca, 0x3a, 0x68, 0xd3, 0x89, 0xc9, 0x62, 0xb2, 0x2c, 0x36, 0x23, 0x71,
	0xce, 0x66, 0x56, 0x86, 0x46, 0x4c, 0xd1, 0x62, 0x8e, 0x2e, 0x1c, 0x2d, 0x88, 0x84, 0x5c, 0xcc,
	0x71, 0x5e, 0x39, 0x3d, 0x80, 0x13, 0x33, 0x9a, 0x27, 0x8a, 0x7e, 0x80, 0x4e, 0x19, 0x27, 0xe6,
	0xe4, 0x89, 0xf8, 0x2d, 0x2b, 0x28, 0x6d, 0xb5, 0x12, 0x29, 0x96, 0x72, 0x12, 0x6b, 0xc5, 0x2f,
	0xd8, 0xbc, 0x35, 0x0a, 0x0e, 0x22, 0xc3, 0x02, 0x01, 0xbf, 0x66, 0x39, 0x86, 0x38, 0x91, 0x63,
	0x21, 0x43, 0x5e, 0xab, 0xb8, 0xc5, 0x83, 0xd3, 0xf2, 0x20, 0x0a, 0xda, 0x42, 0xc4, 0x6f, 0x58,
	0xee, 0x60, 0xd0, 0x3e, 0xde, 0xc5, 0x68, 0xc9, 0x3f, 0xe3, 0x15, 0xba, 0x05, 0x71, 0xb2, 0x98,
	0x2c, 0x93, 0x0d, 0x66, 0x7e, 0xce, 0x12, 0xd0, 0x4a, 0x9c, 0x62, 0x6b, 0x8c, 0x6f, 0x8f, 0x9f,
	0x0f, 0x3b, 0x1d, 0x9a, 0xbe, 0x5a, 0xd5, 0xa6, 0x2d, 0x5b, 0x5d, 0xef, 0xc1, 0xbe, 0x3c, 0x97,
	0xc6, 0x7f, 0xf7, 0xe0, 0x8e, 0xf7, 0xf8, 0xd7, 0xaa, 0xff, 0x2a, 0xed, 0x7e, 0xf7, 0x3a, 0x7e,
	0xb7, 0x4a, 0xd1, 0x3e, 0xfd, 0x05, 0x00, 0x00, 0xff, 0xff, 0x3c, 0xdf, 0xe8, 0x45, 0x88, 0x01,
	0x00, 0x00,
}
