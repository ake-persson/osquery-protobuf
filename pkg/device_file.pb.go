// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/device_file.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Similar to the file table, but use TSK and allow block address access.
type DeviceFile struct {
	// Name portion of file path
	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename"`
	// Filesystem inode number
	Inode int64 `protobuf:"varint,2,opt,name=inode,proto3" json:"inode"`
	// Owning user ID
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid"`
	// Owning group ID
	Gid int64 `protobuf:"varint,4,opt,name=gid,proto3" json:"gid"`
	// Permission bits
	Mode string `protobuf:"bytes,5,opt,name=mode,proto3" json:"mode"`
	// Size of file in bytes
	Size int64 `protobuf:"varint,6,opt,name=size,proto3" json:"size"`
	// Block size of filesystem
	BlockSize int32 `protobuf:"varint,7,opt,name=block_size,json=blockSize,proto3" json:"block_size"`
	// Last access time
	Atime int64 `protobuf:"varint,8,opt,name=atime,proto3" json:"atime"`
	// Last modification time
	Mtime int64 `protobuf:"varint,9,opt,name=mtime,proto3" json:"mtime"`
	// Creation time
	Ctime int64 `protobuf:"varint,10,opt,name=ctime,proto3" json:"ctime"`
	// Number of hard links
	HardLinks int32 `protobuf:"varint,11,opt,name=hard_links,json=hardLinks,proto3" json:"hard_links"`
	// File status
	Type                 string   `protobuf:"bytes,12,opt,name=type,proto3" json:"type"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceFile) Reset()         { *m = DeviceFile{} }
func (m *DeviceFile) String() string { return proto.CompactTextString(m) }
func (*DeviceFile) ProtoMessage()    {}
func (*DeviceFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_b7e387557caa11a3, []int{0}
}

func (m *DeviceFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceFile.Unmarshal(m, b)
}
func (m *DeviceFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceFile.Marshal(b, m, deterministic)
}
func (m *DeviceFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceFile.Merge(m, src)
}
func (m *DeviceFile) XXX_Size() int {
	return xxx_messageInfo_DeviceFile.Size(m)
}
func (m *DeviceFile) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceFile.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceFile proto.InternalMessageInfo

func (m *DeviceFile) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *DeviceFile) GetInode() int64 {
	if m != nil {
		return m.Inode
	}
	return 0
}

func (m *DeviceFile) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *DeviceFile) GetGid() int64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *DeviceFile) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *DeviceFile) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *DeviceFile) GetBlockSize() int32 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *DeviceFile) GetAtime() int64 {
	if m != nil {
		return m.Atime
	}
	return 0
}

func (m *DeviceFile) GetMtime() int64 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func (m *DeviceFile) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *DeviceFile) GetHardLinks() int32 {
	if m != nil {
		return m.HardLinks
	}
	return 0
}

func (m *DeviceFile) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func init() {
	proto.RegisterType((*DeviceFile)(nil), "schemas.DeviceFile")
}

func init() { proto.RegisterFile("pb/device_file.proto", fileDescriptor_b7e387557caa11a3) }

var fileDescriptor_b7e387557caa11a3 = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0xd0, 0x3f, 0x4f, 0xb4, 0x40,
	0x10, 0x06, 0xf0, 0x70, 0x77, 0xdc, 0x1d, 0xfb, 0xbe, 0x85, 0xd9, 0x50, 0x6c, 0x4c, 0x4c, 0x88,
	0x15, 0x8d, 0x87, 0xd1, 0x44, 0x0b, 0x3b, 0x63, 0xac, 0xac, 0xb0, 0xb3, 0x21, 0xb0, 0x3b, 0x07,
	0x13, 0x58, 0x16, 0xf9, 0x63, 0x72, 0x7e, 0x18, 0x3f, 0xab, 0x99, 0x59, 0xb5, 0x7b, 0x9e, 0xdf,
	0x2c, 0xec, 0x64, 0x45, 0x3c, 0x54, 0x99, 0x81, 0x0f, 0xd4, 0x50, 0x1c, 0xb1, 0x83, 0xc3, 0x30,
	0xba, 0xd9, 0xc9, 0xdd, 0xa4, 0x1b, 0xb0, 0xe5, 0x74, 0xf9, 0xb5, 0x12, 0xe2, 0x89, 0xc7, 0xcf,
	0xd8, 0x81, 0x3c, 0x17, 0x7b, 0x3a, 0xd5, 0x97, 0x16, 0x54, 0x90, 0x04, 0x69, 0x94, 0xff, 0x75,
	0x19, 0x8b, 0x10, 0x7b, 0x67, 0x40, 0xad, 0x92, 0x20, 0x5d, 0xe7, 0xbe, 0xc8, 0x33, 0xb1, 0x5e,
	0xd0, 0xa8, 0x35, 0x1b, 0x45, 0x92, 0x1a, 0x8d, 0xda, 0x78, 0xa9, 0xd1, 0x48, 0x29, 0x36, 0x96,
	0x3e, 0x0c, 0xf9, 0x8f, 0x9c, 0xc9, 0x26, 0xfc, 0x04, 0xb5, 0xe5, 0x63, 0x9c, 0xe5, 0x85, 0x10,
	0x55, 0xe7, 0x74, 0x5b, 0xf0, 0x64, 0x97, 0x04, 0x69, 0x98, 0x47, 0x2c, 0xaf, 0x34, 0x8e, 0x45,
	0x58, 0xce, 0x68, 0x41, 0xed, 0xfd, 0x02, 0x5c, 0x48, 0x2d, 0x6b, 0xe4, 0xd5, 0xfe, 0xaa, 0x66,
	0x15, 0x5e, 0xb9, 0xd0, 0x05, 0x4d, 0x39, 0x9a, 0xa2, 0xc3, 0xbe, 0x9d, 0xd4, 0x3f, 0x7f, 0x01,
	0xc9, 0x0b, 0x01, 0xed, 0x34, 0x9f, 0x06, 0x50, 0xff, 0xfd, 0x9e, 0x94, 0x1f, 0x6f, 0xde, 0xae,
	0x6b, 0x9c, 0x9b, 0xa5, 0x3a, 0x68, 0x67, 0x33, 0x8b, 0xba, 0x85, 0xe1, 0xfe, 0x2e, 0x73, 0xd3,
	0xfb, 0x02, 0xe3, 0xe9, 0x8a, 0x9f, 0xb3, 0x5a, 0x8e, 0xd9, 0xd0, 0xd6, 0x0f, 0x3f, 0x8f, 0x5a,
	0x6d, 0x59, 0x6f, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xee, 0xb5, 0x20, 0x1d, 0x7c, 0x01, 0x00,
	0x00,
}
