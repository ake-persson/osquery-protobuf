// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/connectivity.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Provides the overall system's network state.
type Connectivity struct {
	// True if the all interfaces are not connected to any network
	Disconnected int32 `protobuf:"varint,1,opt,name=disconnected,proto3" json:"disconnected"`
	// True if any interface is connected via IPv4
	Ipv4NoTraffic int32 `protobuf:"varint,2,opt,name=ipv4_no_traffic,json=ipv4NoTraffic,proto3" json:"ipv4_no_traffic"`
	// True if any interface is connected via IPv6
	Ipv6NoTraffic int32 `protobuf:"varint,3,opt,name=ipv6_no_traffic,json=ipv6NoTraffic,proto3" json:"ipv6_no_traffic"`
	// True if any interface is connected to the local subnet via IPv4
	Ipv4Subnet int32 `protobuf:"varint,4,opt,name=ipv4_subnet,json=ipv4Subnet,proto3" json:"ipv4_subnet"`
	// True if any interface is connected to a routed network via IPv4
	Ipv4LocalNetwork int32 `protobuf:"varint,5,opt,name=ipv4_local_network,json=ipv4LocalNetwork,proto3" json:"ipv4_local_network"`
	// True if any interface is connected to the Internet via IPv4
	Ipv4Internet int32 `protobuf:"varint,6,opt,name=ipv4_internet,json=ipv4Internet,proto3" json:"ipv4_internet"`
	// True if any interface is connected to the local subnet via IPv6
	Ipv6Subnet int32 `protobuf:"varint,7,opt,name=ipv6_subnet,json=ipv6Subnet,proto3" json:"ipv6_subnet"`
	// True if any interface is connected to a routed network via IPv6
	Ipv6LocalNetwork int32 `protobuf:"varint,8,opt,name=ipv6_local_network,json=ipv6LocalNetwork,proto3" json:"ipv6_local_network"`
	// True if any interface is connected to the Internet via IPv6
	Ipv6Internet         int32    `protobuf:"varint,9,opt,name=ipv6_internet,json=ipv6Internet,proto3" json:"ipv6_internet"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connectivity) Reset()         { *m = Connectivity{} }
func (m *Connectivity) String() string { return proto.CompactTextString(m) }
func (*Connectivity) ProtoMessage()    {}
func (*Connectivity) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cd80569746bc3c9, []int{0}
}

func (m *Connectivity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connectivity.Unmarshal(m, b)
}
func (m *Connectivity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connectivity.Marshal(b, m, deterministic)
}
func (m *Connectivity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connectivity.Merge(m, src)
}
func (m *Connectivity) XXX_Size() int {
	return xxx_messageInfo_Connectivity.Size(m)
}
func (m *Connectivity) XXX_DiscardUnknown() {
	xxx_messageInfo_Connectivity.DiscardUnknown(m)
}

var xxx_messageInfo_Connectivity proto.InternalMessageInfo

func (m *Connectivity) GetDisconnected() int32 {
	if m != nil {
		return m.Disconnected
	}
	return 0
}

func (m *Connectivity) GetIpv4NoTraffic() int32 {
	if m != nil {
		return m.Ipv4NoTraffic
	}
	return 0
}

func (m *Connectivity) GetIpv6NoTraffic() int32 {
	if m != nil {
		return m.Ipv6NoTraffic
	}
	return 0
}

func (m *Connectivity) GetIpv4Subnet() int32 {
	if m != nil {
		return m.Ipv4Subnet
	}
	return 0
}

func (m *Connectivity) GetIpv4LocalNetwork() int32 {
	if m != nil {
		return m.Ipv4LocalNetwork
	}
	return 0
}

func (m *Connectivity) GetIpv4Internet() int32 {
	if m != nil {
		return m.Ipv4Internet
	}
	return 0
}

func (m *Connectivity) GetIpv6Subnet() int32 {
	if m != nil {
		return m.Ipv6Subnet
	}
	return 0
}

func (m *Connectivity) GetIpv6LocalNetwork() int32 {
	if m != nil {
		return m.Ipv6LocalNetwork
	}
	return 0
}

func (m *Connectivity) GetIpv6Internet() int32 {
	if m != nil {
		return m.Ipv6Internet
	}
	return 0
}

func init() {
	proto.RegisterType((*Connectivity)(nil), "schemas.Connectivity")
}

func init() { proto.RegisterFile("pb/connectivity.proto", fileDescriptor_6cd80569746bc3c9) }

var fileDescriptor_6cd80569746bc3c9 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0x80, 0xd9, 0x74, 0x9b, 0xc6, 0x89, 0x12, 0x10, 0x7a, 0x53, 0x26, 0x88, 0x07, 0x5d, 0x45,
	0x25, 0x1e, 0xbc, 0xe9, 0x49, 0x90, 0x1d, 0xd4, 0x93, 0x97, 0xb2, 0x64, 0xe9, 0x16, 0xba, 0xe6,
	0xc5, 0x24, 0x9d, 0xec, 0x2f, 0xfb, 0x2b, 0x24, 0xaf, 0x59, 0xb7, 0x89, 0xd7, 0xef, 0x7d, 0x7d,
	0x5f, 0xc3, 0x23, 0x27, 0x86, 0xa7, 0x02, 0xb4, 0x96, 0xc2, 0xab, 0x85, 0xf2, 0xcb, 0xa1, 0xb1,
	0xe0, 0x81, 0xf6, 0x9c, 0x98, 0xc9, 0x72, 0xec, 0x06, 0x3f, 0x6d, 0xd2, 0x7f, 0xde, 0x98, 0xd3,
	0x01, 0xe9, 0x4f, 0x94, 0x8b, 0x9f, 0xc8, 0x49, 0xd2, 0x3a, 0x6b, 0x5d, 0x76, 0xde, 0xb6, 0x18,
	0xbd, 0x20, 0x47, 0xca, 0x2c, 0xee, 0x33, 0x0d, 0x99, 0xb7, 0xe3, 0x3c, 0x57, 0x22, 0x69, 0xa3,
	0x76, 0x18, 0xf0, 0x08, 0x3e, 0x6a, 0x18, 0x3d, 0xb6, 0xe9, 0xed, 0x34, 0x1e, 0x5b, 0x7b, 0xa7,
	0xe4, 0x00, 0xf7, 0xb9, 0x8a, 0x6b, 0xe9, 0x93, 0x5d, 0x74, 0x48, 0x40, 0xef, 0x48, 0xe8, 0x15,
	0xa1, 0x28, 0xcc, 0x41, 0x8c, 0xe7, 0x99, 0x96, 0xfe, 0x1b, 0x6c, 0x91, 0x74, 0xd0, 0x3b, 0x0e,
	0x93, 0xd7, 0x30, 0x18, 0xd5, 0x9c, 0x9e, 0x13, 0xfc, 0x8f, 0x4c, 0x69, 0x2f, 0x6d, 0x58, 0xd8,
	0xad, 0xdf, 0x10, 0xe0, 0x4b, 0x64, 0xb1, 0xc9, 0x56, 0xcd, 0x5e, 0xd3, 0x64, 0x5b, 0x4d, 0xf6,
	0xa7, 0xb9, 0xd7, 0x34, 0xd9, 0x3f, 0x4d, 0xb6, 0x6e, 0xee, 0x37, 0x4d, 0xb6, 0x6a, 0x3e, 0xdd,
	0x7e, 0xde, 0x4c, 0x95, 0x9f, 0x55, 0x7c, 0x28, 0xa0, 0x4c, 0x4b, 0x25, 0x0a, 0x69, 0x1e, 0x58,
	0x0a, 0xee, 0xab, 0x92, 0x76, 0x79, 0x8d, 0xa7, 0xe1, 0x55, 0x9e, 0x9a, 0x62, 0xfa, 0x18, 0x0f,
	0xc4, 0xbb, 0x48, 0xef, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0xfa, 0xa2, 0xee, 0xf6, 0xc9, 0x01,
	0x00, 0x00,
}
