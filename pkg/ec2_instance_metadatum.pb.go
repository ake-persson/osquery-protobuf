// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/ec2_instance_metadatum.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// EC2 instance metadata.
type Ec2InstanceMetadatum struct {
	// EC2 instance ID
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id"`
	// EC2 instance type
	InstanceType string `protobuf:"bytes,2,opt,name=instance_type,json=instanceType,proto3" json:"instance_type"`
	// Hardware architecture of this EC2 instance
	Architecture string `protobuf:"bytes,3,opt,name=architecture,proto3" json:"architecture"`
	// AWS region in which this instance launched
	Region string `protobuf:"bytes,4,opt,name=region,proto3" json:"region"`
	// Availability zone in which this instance launched
	AvailabilityZone string `protobuf:"bytes,5,opt,name=availability_zone,json=availabilityZone,proto3" json:"availability_zone"`
	// Private IPv4 DNS hostname of the first interface of this instance
	LocalHostname string `protobuf:"bytes,6,opt,name=local_hostname,json=localHostname,proto3" json:"local_hostname"`
	// Private IPv4 address of the first interface of this instance
	LocalIpv4 string `protobuf:"bytes,7,opt,name=local_ipv4,json=localIpv4,proto3" json:"local_ipv4"`
	// MAC address for the first network interface of this EC2 instance
	Mac string `protobuf:"bytes,8,opt,name=mac,proto3" json:"mac"`
	// Comma separated list of security group names
	SecurityGroups string `protobuf:"bytes,9,opt,name=security_groups,json=securityGroups,proto3" json:"security_groups"`
	// If there is an IAM role associated with the instance
	IamArn string `protobuf:"bytes,10,opt,name=iam_arn,json=iamArn,proto3" json:"iam_arn"`
	// AMI ID used to launch this EC2 instance
	AmiId string `protobuf:"bytes,11,opt,name=ami_id,json=amiId,proto3" json:"ami_id"`
	// ID of the reservation
	ReservationId string `protobuf:"bytes,12,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id"`
	// AWS account ID which owns this EC2 instance
	AccountId string `protobuf:"bytes,13,opt,name=account_id,json=accountId,proto3" json:"account_id"`
	// SSH public key. Only available if supplied at instance launch time
	SshPublicKey         string   `protobuf:"bytes,14,opt,name=ssh_public_key,json=sshPublicKey,proto3" json:"ssh_public_key"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ec2InstanceMetadatum) Reset()         { *m = Ec2InstanceMetadatum{} }
func (m *Ec2InstanceMetadatum) String() string { return proto.CompactTextString(m) }
func (*Ec2InstanceMetadatum) ProtoMessage()    {}
func (*Ec2InstanceMetadatum) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce95e68df4d1f1c1, []int{0}
}

func (m *Ec2InstanceMetadatum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ec2InstanceMetadatum.Unmarshal(m, b)
}
func (m *Ec2InstanceMetadatum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ec2InstanceMetadatum.Marshal(b, m, deterministic)
}
func (m *Ec2InstanceMetadatum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ec2InstanceMetadatum.Merge(m, src)
}
func (m *Ec2InstanceMetadatum) XXX_Size() int {
	return xxx_messageInfo_Ec2InstanceMetadatum.Size(m)
}
func (m *Ec2InstanceMetadatum) XXX_DiscardUnknown() {
	xxx_messageInfo_Ec2InstanceMetadatum.DiscardUnknown(m)
}

var xxx_messageInfo_Ec2InstanceMetadatum proto.InternalMessageInfo

func (m *Ec2InstanceMetadatum) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *Ec2InstanceMetadatum) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *Ec2InstanceMetadatum) GetArchitecture() string {
	if m != nil {
		return m.Architecture
	}
	return ""
}

func (m *Ec2InstanceMetadatum) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Ec2InstanceMetadatum) GetAvailabilityZone() string {
	if m != nil {
		return m.AvailabilityZone
	}
	return ""
}

func (m *Ec2InstanceMetadatum) GetLocalHostname() string {
	if m != nil {
		return m.LocalHostname
	}
	return ""
}

func (m *Ec2InstanceMetadatum) GetLocalIpv4() string {
	if m != nil {
		return m.LocalIpv4
	}
	return ""
}

func (m *Ec2InstanceMetadatum) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

func (m *Ec2InstanceMetadatum) GetSecurityGroups() string {
	if m != nil {
		return m.SecurityGroups
	}
	return ""
}

func (m *Ec2InstanceMetadatum) GetIamArn() string {
	if m != nil {
		return m.IamArn
	}
	return ""
}

func (m *Ec2InstanceMetadatum) GetAmiId() string {
	if m != nil {
		return m.AmiId
	}
	return ""
}

func (m *Ec2InstanceMetadatum) GetReservationId() string {
	if m != nil {
		return m.ReservationId
	}
	return ""
}

func (m *Ec2InstanceMetadatum) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Ec2InstanceMetadatum) GetSshPublicKey() string {
	if m != nil {
		return m.SshPublicKey
	}
	return ""
}

func init() {
	proto.RegisterType((*Ec2InstanceMetadatum)(nil), "schemas.Ec2InstanceMetadatum")
}

func init() { proto.RegisterFile("pb/ec2_instance_metadatum.proto", fileDescriptor_ce95e68df4d1f1c1) }

var fileDescriptor_ce95e68df4d1f1c1 = []byte{
	// 392 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x92, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0x86, 0x59, 0xeb, 0xb6, 0xf6, 0x6c, 0x5b, 0xd7, 0xc1, 0x8f, 0xb9, 0x91, 0x95, 0x55, 0x51,
	0x10, 0xb7, 0x52, 0x17, 0xbd, 0xf0, 0x4a, 0x41, 0x34, 0x88, 0x20, 0xe2, 0xd5, 0xde, 0x84, 0x93,
	0xc9, 0x31, 0x19, 0x9a, 0xf9, 0x70, 0x3e, 0x02, 0xf1, 0xe7, 0xfa, 0x4b, 0x24, 0x93, 0xa4, 0xf4,
	0x6e, 0xe6, 0x79, 0x9f, 0x81, 0x77, 0x0e, 0x07, 0x2e, 0x6c, 0xb1, 0x25, 0xb1, 0xcb, 0xa5, 0xf6,
	0x01, 0xb5, 0xa0, 0x5c, 0x51, 0xc0, 0x12, 0x43, 0x54, 0x57, 0xd6, 0x99, 0x60, 0xd8, 0xc2, 0x8b,
	0x9a, 0x14, 0xfa, 0xcb, 0x7f, 0x33, 0xb8, 0xff, 0x59, 0xec, 0xb2, 0x51, 0xfc, 0x3e, 0x79, 0xec,
	0x02, 0xce, 0x0e, 0xaf, 0x65, 0xc9, 0x4f, 0x9e, 0x9c, 0xbc, 0x5c, 0xfe, 0x84, 0x09, 0x65, 0x25,
	0x7b, 0x0a, 0xeb, 0x83, 0x10, 0x3a, 0x4b, 0xfc, 0x56, 0x52, 0x56, 0x13, 0xfc, 0xd5, 0x59, 0x62,
	0x97, 0xb0, 0x42, 0x27, 0x6a, 0x19, 0x48, 0x84, 0xe8, 0x88, 0xcf, 0x06, 0xe7, 0x98, 0xb1, 0x87,
	0x30, 0x77, 0x54, 0x49, 0xa3, 0xf9, 0xed, 0x94, 0x8e, 0x37, 0xf6, 0x0a, 0xee, 0x61, 0x8b, 0xb2,
	0xc1, 0x42, 0x36, 0x32, 0x74, 0xf9, 0x5f, 0xa3, 0x89, 0x9f, 0x26, 0xe5, 0xfc, 0x38, 0xb8, 0x31,
	0x9a, 0xd8, 0x73, 0xd8, 0x34, 0x46, 0x60, 0x93, 0xd7, 0xc6, 0x07, 0x8d, 0x8a, 0xf8, 0x3c, 0x99,
	0xeb, 0x44, 0xbf, 0x8e, 0x90, 0x3d, 0x06, 0x18, 0x34, 0x69, 0xdb, 0x6b, 0xbe, 0x48, 0xca, 0x32,
	0x91, 0xcc, 0xb6, 0xd7, 0xec, 0x1c, 0x66, 0x0a, 0x05, 0xbf, 0x93, 0x78, 0x7f, 0x64, 0x2f, 0xe0,
	0xae, 0x27, 0x11, 0x5d, 0x5f, 0xa0, 0x72, 0x26, 0x5a, 0xcf, 0x97, 0x29, 0xdd, 0x4c, 0xf8, 0x4b,
	0xa2, 0xec, 0x11, 0x2c, 0x24, 0xaa, 0x1c, 0x9d, 0xe6, 0x30, 0x7c, 0x43, 0xa2, 0xfa, 0xe8, 0x34,
	0x7b, 0x00, 0x73, 0x54, 0xb2, 0x9f, 0xe1, 0x59, 0xe2, 0xa7, 0xa8, 0x64, 0x56, 0xf6, 0x85, 0x1d,
	0x79, 0x72, 0x2d, 0x06, 0x69, 0x74, 0x1f, 0xaf, 0x86, 0xc2, 0x47, 0x34, 0x2b, 0xfb, 0xc2, 0x28,
	0x84, 0x89, 0x3a, 0xf4, 0xca, 0x7a, 0x28, 0x3c, 0x92, 0xac, 0x64, 0xcf, 0x60, 0xe3, 0x7d, 0x9d,
	0xdb, 0x58, 0x34, 0x52, 0xe4, 0x7b, 0xea, 0xf8, 0x66, 0x98, 0xb0, 0xf7, 0xf5, 0x8f, 0x04, 0xbf,
	0x51, 0xf7, 0x69, 0x77, 0xf3, 0xa6, 0x92, 0xa1, 0x8e, 0xc5, 0x95, 0x30, 0x6a, 0xab, 0xa4, 0xd8,
	0x93, 0x7d, 0xff, 0x6e, 0x6b, 0xfc, 0x9f, 0x48, 0xae, 0x7b, 0x9d, 0x56, 0xa2, 0x88, 0xbf, 0xb7,
	0x76, 0x5f, 0x7d, 0x18, 0x17, 0xa3, 0x98, 0x27, 0xfa, 0xf6, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x8c, 0xb5, 0x9f, 0x79, 0x4b, 0x02, 0x00, 0x00,
}
