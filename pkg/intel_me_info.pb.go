// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/intel_me_info.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Intel ME/CSE Info.
type IntelMeInfo struct {
	// Intel ME version
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IntelMeInfo) Reset()         { *m = IntelMeInfo{} }
func (m *IntelMeInfo) String() string { return proto.CompactTextString(m) }
func (*IntelMeInfo) ProtoMessage()    {}
func (*IntelMeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e36507fa9533fd15, []int{0}
}

func (m *IntelMeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntelMeInfo.Unmarshal(m, b)
}
func (m *IntelMeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntelMeInfo.Marshal(b, m, deterministic)
}
func (m *IntelMeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntelMeInfo.Merge(m, src)
}
func (m *IntelMeInfo) XXX_Size() int {
	return xxx_messageInfo_IntelMeInfo.Size(m)
}
func (m *IntelMeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IntelMeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IntelMeInfo proto.InternalMessageInfo

func (m *IntelMeInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterType((*IntelMeInfo)(nil), "schemas.IntelMeInfo")
}

func init() { proto.RegisterFile("pb/intel_me_info.proto", fileDescriptor_e36507fa9533fd15) }

var fileDescriptor_e36507fa9533fd15 = []byte{
	// 139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0x48, 0xd2, 0xcf,
	0xcc, 0x2b, 0x49, 0xcd, 0x89, 0xcf, 0x4d, 0x8d, 0xcf, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x4e, 0xce, 0x48, 0xcd, 0x4d, 0x2c, 0x56, 0x52, 0xe7, 0xe2, 0xf6,
	0x04, 0xc9, 0xfb, 0xa6, 0x7a, 0xe6, 0xa5, 0xe5, 0x0b, 0x49, 0x70, 0xb1, 0x97, 0xa5, 0x16, 0x15,
	0x67, 0xe6, 0xe7, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0xc1, 0xb8, 0x4e, 0x46, 0x51, 0x06,
	0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0xb9, 0x99, 0xc9, 0xd9, 0xa9,
	0x05, 0xe6, 0x66, 0xfa, 0xf9, 0xc5, 0x85, 0xa5, 0xa9, 0x45, 0x95, 0xba, 0x60, 0x63, 0x93, 0x4a,
	0xd3, 0xf4, 0x0b, 0xb2, 0xd3, 0xad, 0xa1, 0x86, 0x27, 0xb1, 0x81, 0x45, 0x8d, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xb0, 0xe6, 0xfc, 0xa1, 0x86, 0x00, 0x00, 0x00,
}
