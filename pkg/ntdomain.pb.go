// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/ntdomain.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Display basic NT domain information of a Windows machine.
type Ntdomain struct {
	// The label by which the object is known.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// The name of the site where the domain controller is configured.
	ClientSiteName string `protobuf:"bytes,2,opt,name=client_site_name,json=clientSiteName,proto3" json:"client_site_name"`
	// The name of the site where the domain controller is located.
	DcSiteName string `protobuf:"bytes,3,opt,name=dc_site_name,json=dcSiteName,proto3" json:"dc_site_name"`
	// The name of the root of the DNS tree.
	DnsForestName string `protobuf:"bytes,4,opt,name=dns_forest_name,json=dnsForestName,proto3" json:"dns_forest_name"`
	// The IP Address of the discovered domain controller..
	DomainControllerAddress string `protobuf:"bytes,5,opt,name=domain_controller_address,json=domainControllerAddress,proto3" json:"domain_controller_address"`
	// The name of the discovered domain controller.
	DomainControllerName string `protobuf:"bytes,6,opt,name=domain_controller_name,json=domainControllerName,proto3" json:"domain_controller_name"`
	// The name of the domain.
	DomainName string `protobuf:"bytes,7,opt,name=domain_name,json=domainName,proto3" json:"domain_name"`
	// The current status of the domain object.
	Status               string   `protobuf:"bytes,8,opt,name=status,proto3" json:"status"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ntdomain) Reset()         { *m = Ntdomain{} }
func (m *Ntdomain) String() string { return proto.CompactTextString(m) }
func (*Ntdomain) ProtoMessage()    {}
func (*Ntdomain) Descriptor() ([]byte, []int) {
	return fileDescriptor_4bcd4558da7398c2, []int{0}
}

func (m *Ntdomain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ntdomain.Unmarshal(m, b)
}
func (m *Ntdomain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ntdomain.Marshal(b, m, deterministic)
}
func (m *Ntdomain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ntdomain.Merge(m, src)
}
func (m *Ntdomain) XXX_Size() int {
	return xxx_messageInfo_Ntdomain.Size(m)
}
func (m *Ntdomain) XXX_DiscardUnknown() {
	xxx_messageInfo_Ntdomain.DiscardUnknown(m)
}

var xxx_messageInfo_Ntdomain proto.InternalMessageInfo

func (m *Ntdomain) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Ntdomain) GetClientSiteName() string {
	if m != nil {
		return m.ClientSiteName
	}
	return ""
}

func (m *Ntdomain) GetDcSiteName() string {
	if m != nil {
		return m.DcSiteName
	}
	return ""
}

func (m *Ntdomain) GetDnsForestName() string {
	if m != nil {
		return m.DnsForestName
	}
	return ""
}

func (m *Ntdomain) GetDomainControllerAddress() string {
	if m != nil {
		return m.DomainControllerAddress
	}
	return ""
}

func (m *Ntdomain) GetDomainControllerName() string {
	if m != nil {
		return m.DomainControllerName
	}
	return ""
}

func (m *Ntdomain) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

func (m *Ntdomain) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*Ntdomain)(nil), "schemas.Ntdomain")
}

func init() { proto.RegisterFile("pb/ntdomain.proto", fileDescriptor_4bcd4558da7398c2) }

var fileDescriptor_4bcd4558da7398c2 = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x3d, 0x4f, 0xc3, 0x30,
	0x10, 0x86, 0xd5, 0x52, 0xda, 0x72, 0x7c, 0x47, 0xa8, 0x84, 0x89, 0x8a, 0x01, 0x75, 0xa1, 0x41,
	0x80, 0x40, 0x82, 0x09, 0x90, 0x18, 0x3b, 0xc0, 0xc6, 0x12, 0x25, 0xf6, 0xb5, 0xb5, 0x9a, 0xd8,
	0xc1, 0x77, 0x19, 0xf8, 0x71, 0xfc, 0x37, 0xc4, 0xd9, 0xaa, 0x10, 0x6c, 0xf6, 0xfb, 0x3c, 0xaf,
	0xee, 0x74, 0x70, 0xd8, 0x94, 0x99, 0x65, 0xed, 0xea, 0xc2, 0xd8, 0x69, 0xe3, 0x1d, 0xbb, 0x64,
	0x40, 0x6a, 0x89, 0x75, 0x41, 0x67, 0x5f, 0x5d, 0x18, 0xce, 0x22, 0x4b, 0x12, 0xe8, 0xd9, 0xa2,
	0xc6, 0xb4, 0x33, 0xee, 0x4c, 0xb6, 0x5e, 0xe5, 0x9d, 0x4c, 0xe0, 0x40, 0x55, 0x06, 0x2d, 0xe7,
	0x64, 0x18, 0x73, 0xe1, 0x5d, 0xe1, 0x7b, 0x21, 0x7f, 0x33, 0x8c, 0xb3, 0x1f, 0x73, 0x0c, 0x3b,
	0x5a, 0xfd, 0xb2, 0x36, 0xc4, 0x02, 0xad, 0xd6, 0xc6, 0x39, 0xec, 0x6b, 0x4b, 0xf9, 0xdc, 0x79,
	0x24, 0x0e, 0x52, 0x4f, 0xa4, 0x5d, 0x6d, 0xe9, 0x45, 0x52, 0xf1, 0xee, 0xe1, 0x24, 0x6c, 0x94,
	0x2b, 0x67, 0xd9, 0xbb, 0xaa, 0x42, 0x9f, 0x17, 0x5a, 0x7b, 0x24, 0x4a, 0x37, 0xa5, 0x71, 0x1c,
	0x84, 0xe7, 0x35, 0x7f, 0x0c, 0x38, 0xb9, 0x81, 0xd1, 0xff, 0xae, 0x8c, 0xea, 0x4b, 0xf1, 0xe8,
	0x6f, 0x51, 0x26, 0x9e, 0xc2, 0x76, 0x6c, 0x89, 0x3a, 0x88, 0xab, 0x4b, 0x24, 0xc2, 0x08, 0xfa,
	0xc4, 0x05, 0xb7, 0x94, 0x0e, 0x85, 0xc5, 0xdf, 0xd3, 0xd5, 0xfb, 0xe5, 0xc2, 0xf0, 0xb2, 0x2d,
	0xa7, 0xca, 0xd5, 0x59, 0x6d, 0xd4, 0x0a, 0x9b, 0xbb, 0xdb, 0xcc, 0xd1, 0x47, 0x8b, 0xfe, 0xf3,
	0x42, 0xae, 0x5d, 0xb6, 0xf3, 0xac, 0x59, 0x2d, 0x1e, 0xe2, 0xcd, 0xcb, 0xbe, 0xa4, 0xd7, 0xdf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xf5, 0xc6, 0x4c, 0x2c, 0x98, 0x01, 0x00, 0x00,
}
