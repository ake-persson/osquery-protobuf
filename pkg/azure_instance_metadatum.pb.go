// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/azure_instance_metadatum.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Azure instance metadata.
type AzureInstanceMetadatum struct {
	// Azure Region the VM is running in
	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location"`
	// Name of the VM
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// Offer information for the VM image (Azure image gallery VMs only)
	Offer string `protobuf:"bytes,3,opt,name=offer,proto3" json:"offer"`
	// Publisher of the VM image
	Publisher string `protobuf:"bytes,4,opt,name=publisher,proto3" json:"publisher"`
	// SKU for the VM image
	Sku string `protobuf:"bytes,5,opt,name=sku,proto3" json:"sku"`
	// Version of the VM image
	Version string `protobuf:"bytes,6,opt,name=version,proto3" json:"version"`
	// Linux or Windows
	OsType string `protobuf:"bytes,7,opt,name=os_type,json=osType,proto3" json:"os_type"`
	// Update domain the VM is running in
	PlatformUpdateDomain string `protobuf:"bytes,8,opt,name=platform_update_domain,json=platformUpdateDomain,proto3" json:"platform_update_domain"`
	// Fault domain the VM is running in
	PlatformFaultDomain string `protobuf:"bytes,9,opt,name=platform_fault_domain,json=platformFaultDomain,proto3" json:"platform_fault_domain"`
	// Unique identifier for the VM
	VmId string `protobuf:"bytes,10,opt,name=vm_id,json=vmId,proto3" json:"vm_id"`
	// VM size
	VmSize string `protobuf:"bytes,11,opt,name=vm_size,json=vmSize,proto3" json:"vm_size"`
	// Azure subscription for the VM
	SubscriptionId string `protobuf:"bytes,12,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id"`
	// Resource group for the VM
	ResourceGroupName string `protobuf:"bytes,13,opt,name=resource_group_name,json=resourceGroupName,proto3" json:"resource_group_name"`
	// Placement group for the VM scale set
	PlacementGroupId string `protobuf:"bytes,14,opt,name=placement_group_id,json=placementGroupId,proto3" json:"placement_group_id"`
	// VM scale set name
	VmScaleSetName string `protobuf:"bytes,15,opt,name=vm_scale_set_name,json=vmScaleSetName,proto3" json:"vm_scale_set_name"`
	// Availability zone of the VM
	Zone                 string   `protobuf:"bytes,16,opt,name=zone,proto3" json:"zone"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AzureInstanceMetadatum) Reset()         { *m = AzureInstanceMetadatum{} }
func (m *AzureInstanceMetadatum) String() string { return proto.CompactTextString(m) }
func (*AzureInstanceMetadatum) ProtoMessage()    {}
func (*AzureInstanceMetadatum) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6e98b72637d5536, []int{0}
}

func (m *AzureInstanceMetadatum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AzureInstanceMetadatum.Unmarshal(m, b)
}
func (m *AzureInstanceMetadatum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AzureInstanceMetadatum.Marshal(b, m, deterministic)
}
func (m *AzureInstanceMetadatum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AzureInstanceMetadatum.Merge(m, src)
}
func (m *AzureInstanceMetadatum) XXX_Size() int {
	return xxx_messageInfo_AzureInstanceMetadatum.Size(m)
}
func (m *AzureInstanceMetadatum) XXX_DiscardUnknown() {
	xxx_messageInfo_AzureInstanceMetadatum.DiscardUnknown(m)
}

var xxx_messageInfo_AzureInstanceMetadatum proto.InternalMessageInfo

func (m *AzureInstanceMetadatum) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *AzureInstanceMetadatum) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AzureInstanceMetadatum) GetOffer() string {
	if m != nil {
		return m.Offer
	}
	return ""
}

func (m *AzureInstanceMetadatum) GetPublisher() string {
	if m != nil {
		return m.Publisher
	}
	return ""
}

func (m *AzureInstanceMetadatum) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *AzureInstanceMetadatum) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *AzureInstanceMetadatum) GetOsType() string {
	if m != nil {
		return m.OsType
	}
	return ""
}

func (m *AzureInstanceMetadatum) GetPlatformUpdateDomain() string {
	if m != nil {
		return m.PlatformUpdateDomain
	}
	return ""
}

func (m *AzureInstanceMetadatum) GetPlatformFaultDomain() string {
	if m != nil {
		return m.PlatformFaultDomain
	}
	return ""
}

func (m *AzureInstanceMetadatum) GetVmId() string {
	if m != nil {
		return m.VmId
	}
	return ""
}

func (m *AzureInstanceMetadatum) GetVmSize() string {
	if m != nil {
		return m.VmSize
	}
	return ""
}

func (m *AzureInstanceMetadatum) GetSubscriptionId() string {
	if m != nil {
		return m.SubscriptionId
	}
	return ""
}

func (m *AzureInstanceMetadatum) GetResourceGroupName() string {
	if m != nil {
		return m.ResourceGroupName
	}
	return ""
}

func (m *AzureInstanceMetadatum) GetPlacementGroupId() string {
	if m != nil {
		return m.PlacementGroupId
	}
	return ""
}

func (m *AzureInstanceMetadatum) GetVmScaleSetName() string {
	if m != nil {
		return m.VmScaleSetName
	}
	return ""
}

func (m *AzureInstanceMetadatum) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func init() {
	proto.RegisterType((*AzureInstanceMetadatum)(nil), "schemas.AzureInstanceMetadatum")
}

func init() { proto.RegisterFile("pb/azure_instance_metadatum.proto", fileDescriptor_c6e98b72637d5536) }

var fileDescriptor_c6e98b72637d5536 = []byte{
	// 422 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x92, 0x3f, 0x8f, 0x13, 0x31,
	0x10, 0xc5, 0x75, 0x5c, 0xfe, 0x5c, 0x06, 0xb8, 0xcb, 0x39, 0xc7, 0x61, 0x21, 0x0a, 0xa0, 0x01,
	0x24, 0x48, 0xd0, 0x81, 0xa0, 0xa0, 0x02, 0x21, 0x50, 0x0a, 0x28, 0x08, 0x34, 0x34, 0x96, 0xd7,
	0x3b, 0x9b, 0x58, 0x59, 0xaf, 0x8d, 0xff, 0xac, 0x94, 0x7c, 0x19, 0xbe, 0x2a, 0xf2, 0x6c, 0x36,
	0xd0, 0xcd, 0xbc, 0xdf, 0x7b, 0xf6, 0x78, 0x64, 0x78, 0xec, 0x8a, 0x85, 0xdc, 0x27, 0x8f, 0x42,
	0x37, 0x21, 0xca, 0x46, 0xa1, 0x30, 0x18, 0x65, 0x29, 0x63, 0x32, 0x73, 0xe7, 0x6d, 0xb4, 0x6c,
	0x1c, 0xd4, 0x06, 0x8d, 0x0c, 0x4f, 0xfe, 0x0c, 0xe0, 0xfa, 0x43, 0xf6, 0x2e, 0x0f, 0xd6, 0xaf,
	0xbd, 0x93, 0x3d, 0x80, 0xb3, 0xda, 0x2a, 0x19, 0xb5, 0x6d, 0xf8, 0xc9, 0xa3, 0x93, 0x67, 0x93,
	0xef, 0xc7, 0x9e, 0x31, 0x18, 0x34, 0xd2, 0x20, 0xbf, 0x45, 0x3a, 0xd5, 0xec, 0x0a, 0x86, 0xb6,
	0xaa, 0xd0, 0xf3, 0x53, 0x12, 0xbb, 0x86, 0x3d, 0x84, 0x89, 0x4b, 0x45, 0xad, 0xc3, 0x06, 0x3d,
	0x1f, 0x10, 0xf9, 0x27, 0xb0, 0x29, 0x9c, 0x86, 0x6d, 0xe2, 0x43, 0xd2, 0x73, 0xc9, 0x38, 0x8c,
	0x5b, 0xf4, 0x21, 0x5f, 0x3a, 0x22, 0xb5, 0x6f, 0xd9, 0x7d, 0x18, 0xdb, 0x20, 0xe2, 0xce, 0x21,
	0x1f, 0x13, 0x19, 0xd9, 0xf0, 0x63, 0xe7, 0x90, 0xbd, 0x81, 0x6b, 0x57, 0xcb, 0x58, 0x59, 0x6f,
	0x44, 0x72, 0xa5, 0x8c, 0x28, 0x4a, 0x6b, 0xa4, 0x6e, 0xf8, 0x19, 0xf9, 0xae, 0x7a, 0xfa, 0x93,
	0xe0, 0x27, 0x62, 0xec, 0x06, 0xee, 0x1d, 0x53, 0x95, 0x4c, 0x75, 0xec, 0x43, 0x13, 0x0a, 0xcd,
	0x7a, 0xf8, 0x39, 0xb3, 0x43, 0x66, 0x06, 0xc3, 0xd6, 0x08, 0x5d, 0x72, 0xe8, 0xde, 0xdd, 0x9a,
	0x65, 0x99, 0xe7, 0x6a, 0x8d, 0x08, 0x7a, 0x8f, 0xfc, 0x76, 0x37, 0x57, 0x6b, 0x56, 0x7a, 0x8f,
	0xec, 0x29, 0x5c, 0x84, 0x54, 0x04, 0xe5, 0xb5, 0xcb, 0x4b, 0xcb, 0xb9, 0x3b, 0x64, 0x38, 0xff,
	0x5f, 0x5e, 0x96, 0x6c, 0x0e, 0x33, 0x8f, 0xc1, 0x26, 0xaf, 0x50, 0xac, 0xbd, 0x4d, 0x4e, 0xd0,
	0x72, 0xef, 0x92, 0xf9, 0xb2, 0x47, 0x5f, 0x32, 0xf9, 0x96, 0x37, 0xfd, 0x02, 0x98, 0xab, 0xa5,
	0x42, 0x83, 0x4d, 0x3c, 0x04, 0x74, 0xc9, 0xcf, 0xc9, 0x3e, 0x3d, 0x12, 0xf2, 0x2f, 0x4b, 0xf6,
	0x1c, 0x2e, 0xf3, 0x7c, 0x4a, 0xd6, 0x28, 0x02, 0xc6, 0xee, 0xec, 0x8b, 0x6e, 0x90, 0xd6, 0xac,
	0xb2, 0xbe, 0xc2, 0x48, 0x07, 0x33, 0x18, 0xec, 0x6d, 0x83, 0x7c, 0xda, 0x3d, 0x2f, 0xd7, 0x1f,
	0x6f, 0x7e, 0xbd, 0x5a, 0xeb, 0xb8, 0x49, 0xc5, 0x5c, 0x59, 0xb3, 0x30, 0x5a, 0x6d, 0xd1, 0xbd,
	0x7b, 0xbb, 0xb0, 0xe1, 0x77, 0x42, 0xbf, 0x7b, 0x49, 0xff, 0xa9, 0x48, 0xd5, 0xc2, 0x6d, 0xd7,
	0xef, 0x0f, 0xbf, 0xaa, 0x18, 0x91, 0xfa, 0xfa, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x01, 0xec,
	0xd2, 0x5a, 0x8a, 0x02, 0x00, 0x00,
}
