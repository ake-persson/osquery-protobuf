// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/asl.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Queries the Apple System Log data structure for system events.
type Asl struct {
	// Unix timestamp.  Set automatically
	Time int32 `protobuf:"varint,1,opt,name=time,proto3" json:"time"`
	// Nanosecond time.
	TimeNanoSec int32 `protobuf:"varint,2,opt,name=time_nano_sec,json=timeNanoSec,proto3" json:"time_nano_sec"`
	// Sender's address (set by the server).
	Host string `protobuf:"bytes,3,opt,name=host,proto3" json:"host"`
	// Sender's identification string.  Default is process name.
	Sender string `protobuf:"bytes,4,opt,name=sender,proto3" json:"sender"`
	// Sender's facility.  Default is 'user'.
	Facility string `protobuf:"bytes,5,opt,name=facility,proto3" json:"facility"`
	// Sending process ID encoded as a string.  Set automatically.
	Pid int32 `protobuf:"varint,6,opt,name=pid,proto3" json:"pid"`
	// GID that sent the log message (set by the server).
	Gid int64 `protobuf:"varint,7,opt,name=gid,proto3" json:"gid"`
	// UID that sent the log message (set by the server).
	Uid int64 `protobuf:"varint,8,opt,name=uid,proto3" json:"uid"`
	// Log level number.  See levels in asl.h.
	Level int32 `protobuf:"varint,9,opt,name=level,proto3" json:"level"`
	// Message text.
	Message string `protobuf:"bytes,10,opt,name=message,proto3" json:"message"`
	// Reference PID for messages proxied by launchd
	RefPid int32 `protobuf:"varint,11,opt,name=ref_pid,json=refPid,proto3" json:"ref_pid"`
	// Reference process for messages proxied by launchd
	RefProc string `protobuf:"bytes,12,opt,name=ref_proc,json=refProc,proto3" json:"ref_proc"`
	// Extra columns
	Extra                string   `protobuf:"bytes,13,opt,name=extra,proto3" json:"extra"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Asl) Reset()         { *m = Asl{} }
func (m *Asl) String() string { return proto.CompactTextString(m) }
func (*Asl) ProtoMessage()    {}
func (*Asl) Descriptor() ([]byte, []int) {
	return fileDescriptor_68c9f21306138b31, []int{0}
}

func (m *Asl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Asl.Unmarshal(m, b)
}
func (m *Asl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Asl.Marshal(b, m, deterministic)
}
func (m *Asl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Asl.Merge(m, src)
}
func (m *Asl) XXX_Size() int {
	return xxx_messageInfo_Asl.Size(m)
}
func (m *Asl) XXX_DiscardUnknown() {
	xxx_messageInfo_Asl.DiscardUnknown(m)
}

var xxx_messageInfo_Asl proto.InternalMessageInfo

func (m *Asl) GetTime() int32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Asl) GetTimeNanoSec() int32 {
	if m != nil {
		return m.TimeNanoSec
	}
	return 0
}

func (m *Asl) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Asl) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *Asl) GetFacility() string {
	if m != nil {
		return m.Facility
	}
	return ""
}

func (m *Asl) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *Asl) GetGid() int64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *Asl) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *Asl) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Asl) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Asl) GetRefPid() int32 {
	if m != nil {
		return m.RefPid
	}
	return 0
}

func (m *Asl) GetRefProc() string {
	if m != nil {
		return m.RefProc
	}
	return ""
}

func (m *Asl) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

func init() {
	proto.RegisterType((*Asl)(nil), "schemas.Asl")
}

func init() { proto.RegisterFile("pb/asl.proto", fileDescriptor_68c9f21306138b31) }

var fileDescriptor_68c9f21306138b31 = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x49, 0xd3, 0x26, 0xed, 0xb4, 0x05, 0x59, 0x44, 0x47, 0x4f, 0xa5, 0xa7, 0x5e, 0x6c,
	0x44, 0x41, 0x0f, 0x9e, 0xf4, 0x07, 0x88, 0xd4, 0x9b, 0x97, 0xb2, 0xd9, 0x4c, 0x92, 0xa5, 0x49,
	0x36, 0xee, 0x26, 0x62, 0x7f, 0x98, 0xff, 0x4f, 0x76, 0x52, 0x3d, 0xcd, 0x7b, 0xdf, 0xe3, 0xf1,
	0x60, 0x60, 0xd1, 0xa6, 0x89, 0x74, 0xd5, 0xb6, 0xb5, 0xa6, 0x33, 0x22, 0x76, 0xaa, 0xa4, 0x5a,
	0xba, 0xf5, 0xcf, 0x08, 0xc2, 0x67, 0x57, 0x09, 0x01, 0xe3, 0x4e, 0xd7, 0x84, 0xc1, 0x2a, 0xd8,
	0x4c, 0x76, 0xac, 0xc5, 0x1a, 0x96, 0xfe, 0xee, 0x1b, 0xd9, 0x98, 0xbd, 0x23, 0x85, 0x23, 0x0e,
	0xe7, 0x1e, 0xbe, 0xca, 0xc6, 0xbc, 0x93, 0xf2, 0xbd, 0xd2, 0xb8, 0x0e, 0xc3, 0x55, 0xb0, 0x99,
	0xed, 0x58, 0x8b, 0x0b, 0x88, 0x1c, 0x35, 0x19, 0x59, 0x1c, 0x33, 0x3d, 0x39, 0x71, 0x0d, 0xd3,
	0x5c, 0x2a, 0x5d, 0xe9, 0xee, 0x88, 0x13, 0x4e, 0xfe, 0xbd, 0x38, 0x83, 0xb0, 0xd5, 0x19, 0x46,
	0xbc, 0xe0, 0xa5, 0x27, 0x85, 0xce, 0x30, 0x5e, 0x05, 0x9b, 0x70, 0xe7, 0xa5, 0x27, 0xbd, 0xce,
	0x70, 0x3a, 0x90, 0x5e, 0x67, 0xe2, 0x1c, 0x26, 0x15, 0x7d, 0x51, 0x85, 0x33, 0xee, 0x0d, 0x46,
	0x20, 0xc4, 0x35, 0x39, 0x27, 0x0b, 0x42, 0xe0, 0x99, 0x3f, 0x2b, 0x2e, 0x21, 0xb6, 0x94, 0xef,
	0xfd, 0xd2, 0x9c, 0x1b, 0x91, 0xa5, 0xfc, 0x4d, 0x67, 0xe2, 0x0a, 0xa6, 0x1c, 0x58, 0xa3, 0x70,
	0x31, 0x74, 0x7c, 0x62, 0x8d, 0xf2, 0x1b, 0xf4, 0xdd, 0x59, 0x89, 0x4b, 0xe6, 0x83, 0x79, 0xb9,
	0xfb, 0xb8, 0x2d, 0x74, 0x57, 0xf6, 0xe9, 0x56, 0x99, 0x3a, 0xa9, 0xb5, 0x3a, 0x50, 0xfb, 0xf8,
	0x90, 0x18, 0xf7, 0xd9, 0x93, 0x3d, 0xde, 0xf0, 0x97, 0xd3, 0x3e, 0x4f, 0xda, 0x43, 0xf1, 0x74,
	0xfa, 0x75, 0x1a, 0x31, 0xbd, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x68, 0xde, 0x94, 0x4c, 0x8b,
	0x01, 0x00, 0x00,
}
