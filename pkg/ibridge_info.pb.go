// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/ibridge_info.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Information about the Apple iBridge hardware controller.
type IbridgeInfo struct {
	// Boot UUID of the iBridge controller
	BootUuid string `protobuf:"bytes,1,opt,name=boot_uuid,json=bootUuid,proto3" json:"boot_uuid"`
	// The manufacturer and chip version
	CoprocessorVersion string `protobuf:"bytes,2,opt,name=coprocessor_version,json=coprocessorVersion,proto3" json:"coprocessor_version"`
	// The build version of the firmware
	FirmwareVersion string `protobuf:"bytes,3,opt,name=firmware_version,json=firmwareVersion,proto3" json:"firmware_version"`
	// Unique id of the iBridge controller
	UniqueChipId         string   `protobuf:"bytes,4,opt,name=unique_chip_id,json=uniqueChipId,proto3" json:"unique_chip_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IbridgeInfo) Reset()         { *m = IbridgeInfo{} }
func (m *IbridgeInfo) String() string { return proto.CompactTextString(m) }
func (*IbridgeInfo) ProtoMessage()    {}
func (*IbridgeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b949b395cdf6f9f, []int{0}
}

func (m *IbridgeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IbridgeInfo.Unmarshal(m, b)
}
func (m *IbridgeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IbridgeInfo.Marshal(b, m, deterministic)
}
func (m *IbridgeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IbridgeInfo.Merge(m, src)
}
func (m *IbridgeInfo) XXX_Size() int {
	return xxx_messageInfo_IbridgeInfo.Size(m)
}
func (m *IbridgeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IbridgeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IbridgeInfo proto.InternalMessageInfo

func (m *IbridgeInfo) GetBootUuid() string {
	if m != nil {
		return m.BootUuid
	}
	return ""
}

func (m *IbridgeInfo) GetCoprocessorVersion() string {
	if m != nil {
		return m.CoprocessorVersion
	}
	return ""
}

func (m *IbridgeInfo) GetFirmwareVersion() string {
	if m != nil {
		return m.FirmwareVersion
	}
	return ""
}

func (m *IbridgeInfo) GetUniqueChipId() string {
	if m != nil {
		return m.UniqueChipId
	}
	return ""
}

func init() {
	proto.RegisterType((*IbridgeInfo)(nil), "schemas.IbridgeInfo")
}

func init() { proto.RegisterFile("pb/ibridge_info.proto", fileDescriptor_4b949b395cdf6f9f) }

var fileDescriptor_4b949b395cdf6f9f = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xcf, 0xb1, 0x4a, 0xc4, 0x40,
	0x10, 0xc6, 0x71, 0xa2, 0xa2, 0xde, 0x2a, 0x2a, 0x2b, 0x42, 0xc0, 0x46, 0xc4, 0x42, 0x0b, 0x6f,
	0x45, 0x41, 0x0b, 0x3b, 0xad, 0xd2, 0x0a, 0x5a, 0xd8, 0x2c, 0xb7, 0xbb, 0x93, 0x64, 0x38, 0x92,
	0xd9, 0x9b, 0xcd, 0x28, 0xbe, 0x93, 0x0f, 0x29, 0x6e, 0x8c, 0x5c, 0xfb, 0xff, 0x7e, 0xcd, 0xa7,
	0x4e, 0xa2, 0x33, 0xe8, 0x18, 0x43, 0x03, 0x16, 0xfb, 0x9a, 0xe6, 0x91, 0x69, 0x20, 0xbd, 0x93,
	0x7c, 0x0b, 0xdd, 0x22, 0x9d, 0x7f, 0x17, 0x6a, 0xaf, 0x1a, 0xf7, 0xaa, 0xaf, 0x49, 0x9f, 0xaa,
	0x99, 0x23, 0x1a, 0xac, 0x08, 0x86, 0xb2, 0x38, 0x2b, 0x2e, 0x67, 0x2f, 0xbb, 0xbf, 0xe1, 0x55,
	0x30, 0x68, 0xa3, 0x8e, 0x3d, 0x45, 0x26, 0x0f, 0x29, 0x11, 0xdb, 0x0f, 0xe0, 0x84, 0xd4, 0x97,
	0x1b, 0x99, 0xe9, 0xb5, 0xe9, 0x6d, 0x5c, 0xf4, 0x95, 0x3a, 0xaa, 0x91, 0xbb, 0xcf, 0x05, 0xc3,
	0xbf, 0xde, 0xcc, 0xfa, 0x70, 0xea, 0x13, 0xbd, 0x50, 0x07, 0xd2, 0xe3, 0x4a, 0xc0, 0xfa, 0x16,
	0xa3, 0xc5, 0x50, 0x6e, 0x65, 0xb8, 0x3f, 0xd6, 0xe7, 0x16, 0x63, 0x15, 0x9e, 0x6e, 0xdf, 0x6f,
	0x1a, 0x1c, 0x5a, 0x71, 0x73, 0x4f, 0x9d, 0xe9, 0xd0, 0x2f, 0x21, 0x3e, 0xdc, 0x1b, 0x4a, 0x2b,
	0x01, 0xfe, 0xba, 0xce, 0xe7, 0x9c, 0xd4, 0x26, 0x2e, 0x9b, 0xc7, 0xbf, 0x8b, 0x6e, 0x3b, 0xd7,
	0xbb, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x81, 0xed, 0xe7, 0x35, 0x0b, 0x01, 0x00, 0x00,
}
