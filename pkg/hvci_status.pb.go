// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/hvci_status.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Retrieve HVCI info of the machine.
type HvciStatus struct {
	// The version number of the Device Guard build.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version"`
	// The instance ID of Device Guard.
	InstanceIdentifier string `protobuf:"bytes,2,opt,name=instance_identifier,json=instanceIdentifier,proto3" json:"instance_identifier"`
	// The status of the virtualization based security settings. Returns UNKNOWN if an error is encountered.
	VbsStatus string `protobuf:"bytes,3,opt,name=vbs_status,json=vbsStatus,proto3" json:"vbs_status"`
	// The status of the code integrity policy enforcement settings. Returns UNKNOWN if an error is encountered.
	CodeIntegrityPolicyEnforcementStatus string `protobuf:"bytes,4,opt,name=code_integrity_policy_enforcement_status,json=codeIntegrityPolicyEnforcementStatus,proto3" json:"code_integrity_policy_enforcement_status"`
	// The status of the User Mode Code Integrity security settings. Returns UNKNOWN if an error is encountered.
	UmciPolicyStatus     string   `protobuf:"bytes,5,opt,name=umci_policy_status,json=umciPolicyStatus,proto3" json:"umci_policy_status"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HvciStatus) Reset()         { *m = HvciStatus{} }
func (m *HvciStatus) String() string { return proto.CompactTextString(m) }
func (*HvciStatus) ProtoMessage()    {}
func (*HvciStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5e0522bc517daba, []int{0}
}

func (m *HvciStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HvciStatus.Unmarshal(m, b)
}
func (m *HvciStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HvciStatus.Marshal(b, m, deterministic)
}
func (m *HvciStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HvciStatus.Merge(m, src)
}
func (m *HvciStatus) XXX_Size() int {
	return xxx_messageInfo_HvciStatus.Size(m)
}
func (m *HvciStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_HvciStatus.DiscardUnknown(m)
}

var xxx_messageInfo_HvciStatus proto.InternalMessageInfo

func (m *HvciStatus) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *HvciStatus) GetInstanceIdentifier() string {
	if m != nil {
		return m.InstanceIdentifier
	}
	return ""
}

func (m *HvciStatus) GetVbsStatus() string {
	if m != nil {
		return m.VbsStatus
	}
	return ""
}

func (m *HvciStatus) GetCodeIntegrityPolicyEnforcementStatus() string {
	if m != nil {
		return m.CodeIntegrityPolicyEnforcementStatus
	}
	return ""
}

func (m *HvciStatus) GetUmciPolicyStatus() string {
	if m != nil {
		return m.UmciPolicyStatus
	}
	return ""
}

func init() {
	proto.RegisterType((*HvciStatus)(nil), "schemas.HvciStatus")
}

func init() { proto.RegisterFile("pb/hvci_status.proto", fileDescriptor_f5e0522bc517daba) }

var fileDescriptor_f5e0522bc517daba = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0x3b, 0x4b, 0x04, 0x31,
	0x14, 0x85, 0x19, 0x5f, 0xcb, 0xa6, 0x92, 0x68, 0x31, 0x8d, 0x20, 0x62, 0xb1, 0x85, 0xee, 0x88,
	0x82, 0x16, 0x76, 0x82, 0xe0, 0x76, 0xa2, 0x60, 0x61, 0x33, 0x4c, 0xee, 0xde, 0x99, 0xb9, 0xac,
	0x79, 0x98, 0x17, 0xcc, 0x7f, 0xb7, 0x90, 0xcd, 0x26, 0x5a, 0x26, 0xe7, 0x3b, 0xdf, 0x85, 0xc3,
	0x4e, 0x8d, 0x68, 0xc6, 0x08, 0xd4, 0x3a, 0xdf, 0xf9, 0xe0, 0x96, 0xc6, 0x6a, 0xaf, 0xf9, 0xcc,
	0xc1, 0x88, 0xb2, 0x73, 0x17, 0x3f, 0x15, 0x63, 0x2f, 0x11, 0xe8, 0x3d, 0xa5, 0xbc, 0x66, 0xb3,
	0x88, 0xd6, 0x91, 0x56, 0x75, 0x75, 0x5e, 0x2d, 0xe6, 0x6f, 0xe5, 0xc9, 0x1b, 0x76, 0x42, 0xca,
	0xf9, 0x4e, 0x01, 0xb6, 0xb4, 0x46, 0xe5, 0xa9, 0x27, 0xb4, 0xf5, 0x5e, 0xa2, 0x78, 0x89, 0x56,
	0x7f, 0x09, 0x3f, 0x63, 0x2c, 0x0a, 0x97, 0xcf, 0xd6, 0xfb, 0x89, 0x9b, 0x47, 0xe1, 0xf2, 0xa5,
	0x0f, 0xb6, 0x00, 0xbd, 0xc6, 0x96, 0x94, 0xc7, 0xc1, 0x92, 0x9f, 0x5a, 0xa3, 0xbf, 0x08, 0xa6,
	0x16, 0x55, 0xaf, 0x2d, 0xa0, 0x44, 0xe5, 0x4b, 0xf9, 0x20, 0x95, 0x2f, 0xb7, 0xfc, 0xaa, 0xe0,
	0xaf, 0x89, 0x7e, 0xfe, 0x87, 0xb3, 0xf7, 0x8a, 0xf1, 0x20, 0x81, 0x8a, 0x2d, 0x1b, 0x0e, 0x93,
	0xe1, 0x78, 0x9b, 0xec, 0x8a, 0x3b, 0xfa, 0xe9, 0xf6, 0xf3, 0x66, 0x20, 0x3f, 0x06, 0xb1, 0x04,
	0x2d, 0x1b, 0x49, 0xb0, 0x41, 0xf3, 0x70, 0xdf, 0x68, 0xf7, 0x1d, 0xd0, 0x4e, 0xd7, 0x69, 0x2c,
	0x11, 0xfa, 0xc6, 0x6c, 0x86, 0xc7, 0x3c, 0x99, 0x38, 0x4a, 0xbf, 0x77, 0xbf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xe6, 0x34, 0xe7, 0x63, 0x5a, 0x01, 0x00, 0x00,
}
