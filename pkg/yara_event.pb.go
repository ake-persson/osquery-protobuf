// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/yara_event.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Track YARA matches for files specified in configuration data.
type YaraEvent struct {
	// The path scanned
	TargetPath string `protobuf:"bytes,1,opt,name=target_path,json=targetPath,proto3" json:"target_path"`
	// The category of the file
	Category string `protobuf:"bytes,2,opt,name=category,proto3" json:"category"`
	// Change action (UPDATE
	Action string `protobuf:"bytes,3,opt,name=action,proto3" json:"action"`
	// ID used during bulk update
	TransactionId int64 `protobuf:"varint,4,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id"`
	// List of YARA matches
	Matches string `protobuf:"bytes,5,opt,name=matches,proto3" json:"matches"`
	// Number of YARA matches
	Count int32 `protobuf:"varint,6,opt,name=count,proto3" json:"count"`
	// Matching strings
	Strings string `protobuf:"bytes,7,opt,name=strings,proto3" json:"strings"`
	// Matching tags
	Tags string `protobuf:"bytes,8,opt,name=tags,proto3" json:"tags"`
	// Time of the scan
	Time int64 `protobuf:"varint,9,opt,name=time,proto3" json:"time"`
	// Event ID
	Eid                  string   `protobuf:"bytes,10,opt,name=eid,proto3" json:"eid"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YaraEvent) Reset()         { *m = YaraEvent{} }
func (m *YaraEvent) String() string { return proto.CompactTextString(m) }
func (*YaraEvent) ProtoMessage()    {}
func (*YaraEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b57804150154ef, []int{0}
}

func (m *YaraEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YaraEvent.Unmarshal(m, b)
}
func (m *YaraEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YaraEvent.Marshal(b, m, deterministic)
}
func (m *YaraEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YaraEvent.Merge(m, src)
}
func (m *YaraEvent) XXX_Size() int {
	return xxx_messageInfo_YaraEvent.Size(m)
}
func (m *YaraEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_YaraEvent.DiscardUnknown(m)
}

var xxx_messageInfo_YaraEvent proto.InternalMessageInfo

func (m *YaraEvent) GetTargetPath() string {
	if m != nil {
		return m.TargetPath
	}
	return ""
}

func (m *YaraEvent) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *YaraEvent) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *YaraEvent) GetTransactionId() int64 {
	if m != nil {
		return m.TransactionId
	}
	return 0
}

func (m *YaraEvent) GetMatches() string {
	if m != nil {
		return m.Matches
	}
	return ""
}

func (m *YaraEvent) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *YaraEvent) GetStrings() string {
	if m != nil {
		return m.Strings
	}
	return ""
}

func (m *YaraEvent) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

func (m *YaraEvent) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *YaraEvent) GetEid() string {
	if m != nil {
		return m.Eid
	}
	return ""
}

func init() {
	proto.RegisterType((*YaraEvent)(nil), "schemas.YaraEvent")
}

func init() { proto.RegisterFile("pb/yara_event.proto", fileDescriptor_98b57804150154ef) }

var fileDescriptor_98b57804150154ef = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0xe9, 0xee, 0xb6, 0xdd, 0x8e, 0x28, 0x12, 0x45, 0x82, 0x17, 0x8b, 0x20, 0xf4, 0xe2,
	0x56, 0x14, 0xf4, 0xe0, 0x4d, 0xf0, 0xe0, 0x4d, 0x7a, 0xd3, 0x4b, 0x99, 0xa6, 0x31, 0x0d, 0x4b,
	0x9b, 0x9a, 0x4c, 0x85, 0xfe, 0x06, 0xff, 0xb4, 0x34, 0xad, 0xe2, 0xed, 0x7d, 0xdf, 0x7b, 0x21,
	0x30, 0x70, 0xd2, 0x57, 0xf9, 0x88, 0x16, 0x4b, 0xf9, 0x25, 0x3b, 0xda, 0xf5, 0xd6, 0x90, 0x61,
	0xb1, 0x13, 0x8d, 0x6c, 0xd1, 0x5d, 0x7e, 0xaf, 0x20, 0x79, 0x43, 0x8b, 0xcf, 0x53, 0xc9, 0x2e,
	0xe0, 0x80, 0xd0, 0x2a, 0x49, 0x65, 0x8f, 0xd4, 0xf0, 0x20, 0x0d, 0xb2, 0xa4, 0x80, 0x59, 0xbd,
	0x22, 0x35, 0xec, 0x1c, 0xb6, 0x02, 0x49, 0x2a, 0x63, 0x47, 0xbe, 0xf2, 0xed, 0x1f, 0xb3, 0x33,
	0x88, 0x50, 0x90, 0x36, 0x1d, 0x5f, 0xfb, 0x66, 0x21, 0x76, 0x05, 0x47, 0x64, 0xb1, 0x73, 0x33,
	0x96, 0xba, 0xe6, 0x9b, 0x34, 0xc8, 0xd6, 0xc5, 0xe1, 0x3f, 0xfb, 0x52, 0x33, 0x0e, 0x71, 0x8b,
	0x24, 0x1a, 0xe9, 0x78, 0xe8, 0xdf, 0xff, 0x22, 0x3b, 0x85, 0x50, 0x98, 0xa1, 0x23, 0x1e, 0xa5,
	0x41, 0x16, 0x16, 0x33, 0x4c, 0x7b, 0x47, 0x56, 0x77, 0xca, 0xf1, 0x78, 0xde, 0x2f, 0xc8, 0x18,
	0x6c, 0x08, 0x95, 0xe3, 0x5b, 0xaf, 0x7d, 0xf6, 0x4e, 0xb7, 0x92, 0x27, 0xfe, 0x6b, 0x9f, 0xd9,
	0x31, 0xac, 0xa5, 0xae, 0x39, 0xf8, 0xd9, 0x14, 0x9f, 0x6e, 0xdf, 0x6f, 0x94, 0xa6, 0x66, 0xa8,
	0x76, 0xc2, 0xb4, 0x79, 0xab, 0xc5, 0x5e, 0xf6, 0x0f, 0xf7, 0xb9, 0x71, 0x9f, 0x83, 0xb4, 0xe3,
	0xb5, 0xbf, 0x5d, 0x35, 0x7c, 0xe4, 0xfd, 0x5e, 0x3d, 0x2e, 0x17, 0xac, 0x22, 0x6f, 0xef, 0x7e,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xb9, 0xca, 0x5e, 0x58, 0x68, 0x01, 0x00, 0x00,
}
