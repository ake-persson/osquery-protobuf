// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/elf_section.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ELF section information.
type ElfSection struct {
	// Section name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// Section type
	Type int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	// Section virtual address in memory
	Vaddr int32 `protobuf:"varint,3,opt,name=vaddr,proto3" json:"vaddr"`
	// Offset of section in file
	Offset int32 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset"`
	// Size of section
	Size int32 `protobuf:"varint,5,opt,name=size,proto3" json:"size"`
	// Section attributes
	Flags string `protobuf:"bytes,6,opt,name=flags,proto3" json:"flags"`
	// Link to other section
	Link string `protobuf:"bytes,7,opt,name=link,proto3" json:"link"`
	// Segment alignment
	Align int32 `protobuf:"varint,8,opt,name=align,proto3" json:"align"`
	// Path to ELF file
	Path                 string   `protobuf:"bytes,9,opt,name=path,proto3" json:"path"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ElfSection) Reset()         { *m = ElfSection{} }
func (m *ElfSection) String() string { return proto.CompactTextString(m) }
func (*ElfSection) ProtoMessage()    {}
func (*ElfSection) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc131fc7a9118c36, []int{0}
}

func (m *ElfSection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElfSection.Unmarshal(m, b)
}
func (m *ElfSection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElfSection.Marshal(b, m, deterministic)
}
func (m *ElfSection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElfSection.Merge(m, src)
}
func (m *ElfSection) XXX_Size() int {
	return xxx_messageInfo_ElfSection.Size(m)
}
func (m *ElfSection) XXX_DiscardUnknown() {
	xxx_messageInfo_ElfSection.DiscardUnknown(m)
}

var xxx_messageInfo_ElfSection proto.InternalMessageInfo

func (m *ElfSection) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ElfSection) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ElfSection) GetVaddr() int32 {
	if m != nil {
		return m.Vaddr
	}
	return 0
}

func (m *ElfSection) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ElfSection) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ElfSection) GetFlags() string {
	if m != nil {
		return m.Flags
	}
	return ""
}

func (m *ElfSection) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *ElfSection) GetAlign() int32 {
	if m != nil {
		return m.Align
	}
	return 0
}

func (m *ElfSection) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func init() {
	proto.RegisterType((*ElfSection)(nil), "schemas.ElfSection")
}

func init() { proto.RegisterFile("pb/elf_section.proto", fileDescriptor_dc131fc7a9118c36) }

var fileDescriptor_dc131fc7a9118c36 = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x90, 0xcd, 0x4e, 0xc3, 0x30,
	0x10, 0x84, 0x15, 0x68, 0x52, 0xea, 0xa3, 0x55, 0xa1, 0x3d, 0x56, 0x9c, 0x7a, 0xa1, 0x41, 0x20,
	0xc1, 0x81, 0x1b, 0x12, 0x2f, 0x50, 0x6e, 0x5c, 0x90, 0x93, 0xae, 0x13, 0x2b, 0xfe, 0x23, 0x76,
	0x90, 0xca, 0x23, 0xf2, 0x54, 0x68, 0xd7, 0xbd, 0x7d, 0x33, 0x1e, 0xcd, 0xc8, 0x2b, 0xb6, 0xb1,
	0x6b, 0xd1, 0xea, 0xaf, 0x84, 0x7d, 0x36, 0xc1, 0x1f, 0xe2, 0x1c, 0x72, 0x90, 0xeb, 0xd4, 0x8f,
	0xe8, 0x54, 0xba, 0xfb, 0xab, 0x84, 0x78, 0xb7, 0xfa, 0xa3, 0xbc, 0x4a, 0x29, 0x56, 0x5e, 0x39,
	0x84, 0x6a, 0x57, 0xed, 0x37, 0x47, 0x66, 0xf2, 0xf2, 0x39, 0x22, 0x5c, 0xed, 0xaa, 0x7d, 0x7d,
	0x64, 0x96, 0x5b, 0x51, 0xff, 0xa8, 0xd3, 0x69, 0x86, 0x6b, 0x36, 0x8b, 0x90, 0xb7, 0xa2, 0x09,
	0x5a, 0x27, 0xcc, 0xb0, 0x62, 0xfb, 0xa2, 0xa8, 0x21, 0x99, 0x5f, 0x84, 0xba, 0x34, 0x10, 0x53,
	0x83, 0xb6, 0x6a, 0x48, 0xd0, 0xf0, 0x54, 0x11, 0x94, 0xb4, 0xc6, 0x4f, 0xb0, 0x2e, 0xfb, 0xc4,
	0x94, 0x54, 0xd6, 0x0c, 0x1e, 0x6e, 0xca, 0x16, 0x0b, 0x4a, 0x46, 0x95, 0x47, 0xd8, 0x94, 0x24,
	0xf1, 0xdb, 0xe3, 0xe7, 0xc3, 0x60, 0xf2, 0xb8, 0x74, 0x87, 0x3e, 0xb8, 0xd6, 0x99, 0x7e, 0xc2,
	0xf8, 0xf2, 0xdc, 0x86, 0xf4, 0xbd, 0xe0, 0x7c, 0xbe, 0xe7, 0xaf, 0x77, 0x8b, 0x6e, 0xe3, 0x34,
	0xbc, 0x5e, 0x0e, 0xd0, 0x35, 0xec, 0x3e, 0xfd, 0x07, 0x00, 0x00, 0xff, 0xff, 0xcd, 0xba, 0xef,
	0xb3, 0x28, 0x01, 0x00, 0x00,
}
