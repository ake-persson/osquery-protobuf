// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/listening_port.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Processes with listening (bound) network sockets/ports.
type ListeningPort struct {
	// Process (or thread) ID
	Pid int32 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid"`
	// Transport layer port
	Port int32 `protobuf:"varint,2,opt,name=port,proto3" json:"port"`
	// Transport protocol (TCP/UDP)
	Protocol int32 `protobuf:"varint,3,opt,name=protocol,proto3" json:"protocol"`
	// Network protocol (IPv4
	Family int32 `protobuf:"varint,4,opt,name=family,proto3" json:"family"`
	// Specific address for bind
	Address string `protobuf:"bytes,5,opt,name=address,proto3" json:"address"`
	// Socket file descriptor number
	Fd int64 `protobuf:"varint,6,opt,name=fd,proto3" json:"fd"`
	// Socket handle or inode number
	Socket int64 `protobuf:"varint,7,opt,name=socket,proto3" json:"socket"`
	// Path for UNIX domain sockets
	Path string `protobuf:"bytes,8,opt,name=path,proto3" json:"path"`
	// The inode number of the network namespace
	NetNamespace         string   `protobuf:"bytes,9,opt,name=net_namespace,json=netNamespace,proto3" json:"net_namespace"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListeningPort) Reset()         { *m = ListeningPort{} }
func (m *ListeningPort) String() string { return proto.CompactTextString(m) }
func (*ListeningPort) ProtoMessage()    {}
func (*ListeningPort) Descriptor() ([]byte, []int) {
	return fileDescriptor_4daefab2c9a92d9c, []int{0}
}

func (m *ListeningPort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListeningPort.Unmarshal(m, b)
}
func (m *ListeningPort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListeningPort.Marshal(b, m, deterministic)
}
func (m *ListeningPort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListeningPort.Merge(m, src)
}
func (m *ListeningPort) XXX_Size() int {
	return xxx_messageInfo_ListeningPort.Size(m)
}
func (m *ListeningPort) XXX_DiscardUnknown() {
	xxx_messageInfo_ListeningPort.DiscardUnknown(m)
}

var xxx_messageInfo_ListeningPort proto.InternalMessageInfo

func (m *ListeningPort) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *ListeningPort) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ListeningPort) GetProtocol() int32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *ListeningPort) GetFamily() int32 {
	if m != nil {
		return m.Family
	}
	return 0
}

func (m *ListeningPort) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ListeningPort) GetFd() int64 {
	if m != nil {
		return m.Fd
	}
	return 0
}

func (m *ListeningPort) GetSocket() int64 {
	if m != nil {
		return m.Socket
	}
	return 0
}

func (m *ListeningPort) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ListeningPort) GetNetNamespace() string {
	if m != nil {
		return m.NetNamespace
	}
	return ""
}

func init() {
	proto.RegisterType((*ListeningPort)(nil), "schemas.ListeningPort")
}

func init() { proto.RegisterFile("pb/listening_port.proto", fileDescriptor_4daefab2c9a92d9c) }

var fileDescriptor_4daefab2c9a92d9c = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x90, 0x4d, 0x4f, 0x84, 0x30,
	0x10, 0x86, 0x03, 0xec, 0xc2, 0x6e, 0xe3, 0x1a, 0xd3, 0x83, 0x4e, 0x3c, 0x11, 0xbd, 0x70, 0x71,
	0x31, 0x9a, 0xe8, 0xc1, 0x9b, 0x67, 0x63, 0x0c, 0x47, 0x2f, 0x9b, 0x52, 0x06, 0x68, 0xf8, 0x68,
	0x6d, 0xcb, 0x61, 0xff, 0xaf, 0x3f, 0xc4, 0x30, 0x01, 0x6f, 0xef, 0xf3, 0x4c, 0x67, 0xf2, 0xa6,
	0xec, 0xc6, 0x94, 0x79, 0xaf, 0x9c, 0xc7, 0x51, 0x8d, 0xcd, 0xc9, 0x68, 0xeb, 0x8f, 0xc6, 0x6a,
	0xaf, 0x79, 0xe2, 0x64, 0x8b, 0x83, 0x70, 0x77, 0xbf, 0x01, 0x3b, 0x7c, 0xac, 0x2f, 0xbe, 0xb4,
	0xf5, 0xfc, 0x8a, 0x45, 0x46, 0x55, 0x10, 0xa4, 0x41, 0xb6, 0x2d, 0xe6, 0xc8, 0x39, 0xdb, 0xcc,
	0xab, 0x10, 0x92, 0xa2, 0xcc, 0x6f, 0xd9, 0x8e, 0x2e, 0x49, 0xdd, 0x43, 0x44, 0xfe, 0x9f, 0xf9,
	0x35, 0x8b, 0x6b, 0x31, 0xa8, 0xfe, 0x0c, 0x1b, 0x9a, 0x2c, 0xc4, 0x81, 0x25, 0xa2, 0xaa, 0x2c,
	0x3a, 0x07, 0xdb, 0x34, 0xc8, 0xf6, 0xc5, 0x8a, 0xfc, 0x92, 0x85, 0x75, 0x05, 0x71, 0x1a, 0x64,
	0x51, 0x11, 0xd6, 0xd5, 0x7c, 0xc1, 0x69, 0xd9, 0xa1, 0x87, 0x84, 0xdc, 0x42, 0xd4, 0x44, 0xf8,
	0x16, 0x76, 0xb4, 0x4e, 0x99, 0xdf, 0xb3, 0xc3, 0x88, 0xfe, 0x34, 0x8a, 0x01, 0x9d, 0x11, 0x12,
	0x61, 0x4f, 0xc3, 0x8b, 0x11, 0xfd, 0xe7, 0xea, 0xde, 0x9f, 0xbe, 0x1f, 0x1b, 0xe5, 0xdb, 0xa9,
	0x3c, 0x4a, 0x3d, 0xe4, 0x83, 0x92, 0x1d, 0x9a, 0xd7, 0x97, 0x5c, 0xbb, 0x9f, 0x09, 0xed, 0xf9,
	0x81, 0xaa, 0x97, 0x53, 0x9d, 0x9b, 0xae, 0x79, 0x5b, 0xbe, 0xa6, 0x8c, 0xc9, 0x3e, 0xff, 0x05,
	0x00, 0x00, 0xff, 0xff, 0xb0, 0xef, 0x81, 0xc5, 0x45, 0x01, 0x00, 0x00,
}
