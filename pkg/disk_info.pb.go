// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/disk_info.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Retrieve basic information about the physical disks of a system.
type DiskInfo struct {
	// Number of detected partitions on disk.
	Partitions int32 `protobuf:"varint,1,opt,name=partitions,proto3" json:"partitions"`
	// Physical drive number of the disk.
	DiskIndex int32 `protobuf:"varint,2,opt,name=disk_index,json=diskIndex,proto3" json:"disk_index"`
	// The interface type of the disk.
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`
	// The unique identifier of the drive on the system.
	Id string `protobuf:"bytes,4,opt,name=id,proto3" json:"id"`
	// The unique identifier of the drive on the system.
	PnpDeviceId string `protobuf:"bytes,5,opt,name=pnp_device_id,json=pnpDeviceId,proto3" json:"pnp_device_id"`
	// Size of the disk.
	DiskSize int64 `protobuf:"varint,6,opt,name=disk_size,json=diskSize,proto3" json:"disk_size"`
	// The manufacturer of the disk.
	Manufacturer string `protobuf:"bytes,7,opt,name=manufacturer,proto3" json:"manufacturer"`
	// Hard drive model.
	HardwareModel string `protobuf:"bytes,8,opt,name=hardware_model,json=hardwareModel,proto3" json:"hardware_model"`
	// The label of the disk object.
	Name string `protobuf:"bytes,9,opt,name=name,proto3" json:"name"`
	// The serial number of the disk.
	Serial string `protobuf:"bytes,10,opt,name=serial,proto3" json:"serial"`
	// The OS's description of the disk.
	Description          string   `protobuf:"bytes,11,opt,name=description,proto3" json:"description"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiskInfo) Reset()         { *m = DiskInfo{} }
func (m *DiskInfo) String() string { return proto.CompactTextString(m) }
func (*DiskInfo) ProtoMessage()    {}
func (*DiskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3ea11f27f460fa, []int{0}
}

func (m *DiskInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskInfo.Unmarshal(m, b)
}
func (m *DiskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskInfo.Marshal(b, m, deterministic)
}
func (m *DiskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskInfo.Merge(m, src)
}
func (m *DiskInfo) XXX_Size() int {
	return xxx_messageInfo_DiskInfo.Size(m)
}
func (m *DiskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DiskInfo proto.InternalMessageInfo

func (m *DiskInfo) GetPartitions() int32 {
	if m != nil {
		return m.Partitions
	}
	return 0
}

func (m *DiskInfo) GetDiskIndex() int32 {
	if m != nil {
		return m.DiskIndex
	}
	return 0
}

func (m *DiskInfo) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *DiskInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DiskInfo) GetPnpDeviceId() string {
	if m != nil {
		return m.PnpDeviceId
	}
	return ""
}

func (m *DiskInfo) GetDiskSize() int64 {
	if m != nil {
		return m.DiskSize
	}
	return 0
}

func (m *DiskInfo) GetManufacturer() string {
	if m != nil {
		return m.Manufacturer
	}
	return ""
}

func (m *DiskInfo) GetHardwareModel() string {
	if m != nil {
		return m.HardwareModel
	}
	return ""
}

func (m *DiskInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DiskInfo) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

func (m *DiskInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*DiskInfo)(nil), "schemas.DiskInfo")
}

func init() { proto.RegisterFile("pb/disk_info.proto", fileDescriptor_2b3ea11f27f460fa) }

var fileDescriptor_2b3ea11f27f460fa = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0xd0, 0xbd, 0x4e, 0xc3, 0x30,
	0x10, 0x07, 0x70, 0x25, 0xfd, 0xbe, 0xd2, 0x0e, 0x1e, 0x90, 0x25, 0x04, 0x8a, 0x2a, 0x21, 0x75,
	0xa1, 0x41, 0x20, 0xc1, 0xc0, 0x86, 0xba, 0x74, 0x60, 0x29, 0x1b, 0x4b, 0xe4, 0xc4, 0x97, 0xf6,
	0x94, 0xc6, 0x36, 0x76, 0x02, 0x6d, 0x5f, 0x90, 0xd7, 0x42, 0x71, 0x83, 0x54, 0xb6, 0xf3, 0xef,
	0x7c, 0xa7, 0xd3, 0x1f, 0x98, 0x49, 0x63, 0x49, 0xae, 0x48, 0x48, 0xe5, 0x7a, 0x61, 0xac, 0xae,
	0x34, 0x1b, 0xb8, 0x6c, 0x8b, 0xa5, 0x70, 0xb3, 0x9f, 0x10, 0x86, 0x4b, 0x72, 0xc5, 0x4a, 0xe5,
	0x9a, 0xdd, 0x00, 0x18, 0x61, 0x2b, 0xaa, 0x48, 0x2b, 0xc7, 0x83, 0x28, 0x98, 0xf7, 0xd6, 0x67,
	0xc2, 0xae, 0x01, 0xda, 0x45, 0x12, 0xf7, 0x3c, 0xf4, 0xfd, 0x91, 0xf4, 0xd3, 0x12, 0xf7, 0x8c,
	0x41, 0xb7, 0x3a, 0x18, 0xe4, 0x9d, 0x28, 0x98, 0x8f, 0xd6, 0xbe, 0x66, 0x53, 0x08, 0x49, 0xf2,
	0xae, 0x97, 0x90, 0x24, 0x9b, 0xc1, 0xc4, 0x28, 0x93, 0x48, 0xfc, 0xa2, 0x0c, 0x13, 0x92, 0xbc,
	0xe7, 0x5b, 0x63, 0xa3, 0xcc, 0xd2, 0xdb, 0x4a, 0xb2, 0x2b, 0xf0, 0x4b, 0x13, 0x47, 0x47, 0xe4,
	0xfd, 0x28, 0x98, 0x77, 0xd6, 0xc3, 0x06, 0xde, 0xe9, 0x88, 0x6c, 0x06, 0x17, 0xa5, 0x50, 0x75,
	0x2e, 0xb2, 0xaa, 0xb6, 0x68, 0xf9, 0xc0, 0xcf, 0xff, 0x33, 0x76, 0x0b, 0xd3, 0xad, 0xb0, 0xf2,
	0x5b, 0x58, 0x4c, 0x4a, 0x2d, 0x71, 0xc7, 0x87, 0xfe, 0xd7, 0xe4, 0x4f, 0xdf, 0x1a, 0x6c, 0xee,
	0x55, 0xa2, 0x44, 0x3e, 0x3a, 0xdd, 0xdb, 0xd4, 0xec, 0x12, 0xfa, 0x0e, 0x2d, 0x89, 0x1d, 0x07,
	0xaf, 0xed, 0x8b, 0x45, 0x30, 0x96, 0xe8, 0x32, 0x4b, 0xa6, 0x89, 0x82, 0x8f, 0x4f, 0x57, 0x9f,
	0xd1, 0xeb, 0xc3, 0xc7, 0xfd, 0x86, 0xaa, 0x6d, 0x9d, 0x2e, 0x32, 0x5d, 0xc6, 0x25, 0x65, 0x05,
	0x9a, 0xe7, 0xa7, 0x58, 0xbb, 0xcf, 0x1a, 0xed, 0xe1, 0xce, 0xe7, 0x9e, 0xd6, 0x79, 0x6c, 0x8a,
	0xcd, 0x4b, 0x9b, 0x7e, 0xda, 0xf7, 0xfa, 0xf8, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x54, 0xcd, 0x96,
	0xac, 0xa3, 0x01, 0x00, 0x00,
}
