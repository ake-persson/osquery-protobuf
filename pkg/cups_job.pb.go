// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/cups_job.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Returns all completed print jobs from cups.
type CupsJob struct {
	// Title of the printed job
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	// The printer the job was sent to
	Destination string `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination"`
	// The user who printed the job
	User string `protobuf:"bytes,3,opt,name=user,proto3" json:"user"`
	// The format of the print job
	Format string `protobuf:"bytes,4,opt,name=format,proto3" json:"format"`
	// The size of the print job
	Size int32 `protobuf:"varint,5,opt,name=size,proto3" json:"size"`
	// When the job completed printing
	CompletedTime int32 `protobuf:"varint,6,opt,name=completed_time,json=completedTime,proto3" json:"completed_time"`
	// How long the job took to process
	ProcessingTime int32 `protobuf:"varint,7,opt,name=processing_time,json=processingTime,proto3" json:"processing_time"`
	// When the print request was initiated
	CreationTime         int32    `protobuf:"varint,8,opt,name=creation_time,json=creationTime,proto3" json:"creation_time"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CupsJob) Reset()         { *m = CupsJob{} }
func (m *CupsJob) String() string { return proto.CompactTextString(m) }
func (*CupsJob) ProtoMessage()    {}
func (*CupsJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_b68377f384cacc20, []int{0}
}

func (m *CupsJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CupsJob.Unmarshal(m, b)
}
func (m *CupsJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CupsJob.Marshal(b, m, deterministic)
}
func (m *CupsJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CupsJob.Merge(m, src)
}
func (m *CupsJob) XXX_Size() int {
	return xxx_messageInfo_CupsJob.Size(m)
}
func (m *CupsJob) XXX_DiscardUnknown() {
	xxx_messageInfo_CupsJob.DiscardUnknown(m)
}

var xxx_messageInfo_CupsJob proto.InternalMessageInfo

func (m *CupsJob) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CupsJob) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *CupsJob) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *CupsJob) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *CupsJob) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *CupsJob) GetCompletedTime() int32 {
	if m != nil {
		return m.CompletedTime
	}
	return 0
}

func (m *CupsJob) GetProcessingTime() int32 {
	if m != nil {
		return m.ProcessingTime
	}
	return 0
}

func (m *CupsJob) GetCreationTime() int32 {
	if m != nil {
		return m.CreationTime
	}
	return 0
}

func init() {
	proto.RegisterType((*CupsJob)(nil), "schemas.CupsJob")
}

func init() { proto.RegisterFile("pb/cups_job.proto", fileDescriptor_b68377f384cacc20) }

var fileDescriptor_b68377f384cacc20 = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xbf, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x15, 0x68, 0x12, 0x30, 0xb4, 0x08, 0x0b, 0x21, 0x8f, 0x11, 0x08, 0xd1, 0x85, 0x06,
	0x81, 0x04, 0x03, 0x1b, 0x6c, 0x8c, 0x15, 0x13, 0x4b, 0x15, 0xbb, 0xd7, 0xd4, 0xb4, 0xce, 0x19,
	0x9f, 0x3d, 0xc0, 0x1f, 0xce, 0x8c, 0x7a, 0x29, 0x3f, 0xb6, 0x7b, 0xdf, 0xfb, 0x86, 0xd3, 0x13,
	0xc7, 0x5e, 0xd7, 0x26, 0x79, 0x9a, 0xbd, 0xa1, 0x9e, 0xf8, 0x80, 0x11, 0x65, 0x49, 0x66, 0x09,
	0xae, 0xa1, 0xb3, 0xaf, 0x4c, 0x94, 0x4f, 0xc9, 0xd3, 0x33, 0x6a, 0x79, 0x22, 0xf2, 0x68, 0xe3,
	0x1a, 0x54, 0x56, 0x65, 0xe3, 0xfd, 0x69, 0x1f, 0x64, 0x25, 0x0e, 0xe6, 0x40, 0xd1, 0x76, 0x4d,
	0xb4, 0xd8, 0xa9, 0x1d, 0xee, 0xfe, 0x23, 0x29, 0xc5, 0x20, 0x11, 0x04, 0xb5, 0xcb, 0x15, 0xdf,
	0xf2, 0x54, 0x14, 0x0b, 0x0c, 0xae, 0x89, 0x6a, 0xc0, 0x74, 0x9b, 0x36, 0x2e, 0xd9, 0x4f, 0x50,
	0x79, 0x95, 0x8d, 0xf3, 0x29, 0xdf, 0xf2, 0x42, 0x8c, 0x0c, 0x3a, 0xbf, 0x86, 0x08, 0xf3, 0x59,
	0xb4, 0x0e, 0x54, 0xc1, 0xed, 0xf0, 0x97, 0xbe, 0x58, 0x07, 0xf2, 0x52, 0x1c, 0xf9, 0x80, 0x06,
	0x88, 0x6c, 0xd7, 0xf6, 0x5e, 0xc9, 0xde, 0xe8, 0x0f, 0xb3, 0x78, 0x2e, 0x86, 0x26, 0x00, 0xff,
	0xd6, 0x6b, 0x7b, 0xac, 0x1d, 0xfe, 0xc0, 0x8d, 0xf4, 0x78, 0xf3, 0x7a, 0xdd, 0xda, 0xb8, 0x4c,
	0x7a, 0x62, 0xd0, 0xd5, 0xce, 0x9a, 0x15, 0xf8, 0xfb, 0xbb, 0x1a, 0xe9, 0x3d, 0x41, 0xf8, 0xb8,
	0xe2, 0x99, 0x74, 0x5a, 0xd4, 0x7e, 0xd5, 0x3e, 0x6c, 0xc7, 0xd2, 0x05, 0xd3, 0xdb, 0xef, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x86, 0x21, 0x1a, 0x26, 0x51, 0x01, 0x00, 0x00,
}
