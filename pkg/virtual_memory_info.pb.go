// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/virtual_memory_info.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Darwin Virtual Memory statistics.
type VirtualMemoryInfo struct {
	// Total number of free pages.
	Free int64 `protobuf:"varint,1,opt,name=free,proto3" json:"free"`
	// Total number of active pages.
	Active int64 `protobuf:"varint,2,opt,name=active,proto3" json:"active"`
	// Total number of inactive pages.
	Inactive int64 `protobuf:"varint,3,opt,name=inactive,proto3" json:"inactive"`
	// Total number of speculative pages.
	Speculative int64 `protobuf:"varint,4,opt,name=speculative,proto3" json:"speculative"`
	// Total number of throttled pages.
	Throttled int64 `protobuf:"varint,5,opt,name=throttled,proto3" json:"throttled"`
	// Total number of wired down pages.
	Wired int64 `protobuf:"varint,6,opt,name=wired,proto3" json:"wired"`
	// Total number of purgeable pages.
	Purgeable int64 `protobuf:"varint,7,opt,name=purgeable,proto3" json:"purgeable"`
	// Total number of calls to vm_faults.
	Faults int64 `protobuf:"varint,8,opt,name=faults,proto3" json:"faults"`
	// Total number of copy-on-write pages.
	Copy int64 `protobuf:"varint,9,opt,name=copy,proto3" json:"copy"`
	// Total number of zero filled pages.
	ZeroFill int64 `protobuf:"varint,10,opt,name=zero_fill,json=zeroFill,proto3" json:"zero_fill"`
	// Total number of reactivated pages.
	Reactivated int64 `protobuf:"varint,11,opt,name=reactivated,proto3" json:"reactivated"`
	// Total number of purged pages.
	Purged int64 `protobuf:"varint,12,opt,name=purged,proto3" json:"purged"`
	// Total number of file backed pages.
	FileBacked int64 `protobuf:"varint,13,opt,name=file_backed,json=fileBacked,proto3" json:"file_backed"`
	// Total number of anonymous pages.
	Anonymous int64 `protobuf:"varint,14,opt,name=anonymous,proto3" json:"anonymous"`
	// Total number of uncompressed pages.
	Uncompressed int64 `protobuf:"varint,15,opt,name=uncompressed,proto3" json:"uncompressed"`
	// The number of pages used to store compressed VM pages.
	Compressor int64 `protobuf:"varint,16,opt,name=compressor,proto3" json:"compressor"`
	// The total number of pages that have been decompressed by the VM compressor.
	Decompressed int64 `protobuf:"varint,17,opt,name=decompressed,proto3" json:"decompressed"`
	// The total number of pages that have been compressed by the VM compressor.
	Compressed int64 `protobuf:"varint,18,opt,name=compressed,proto3" json:"compressed"`
	// The total number of requests for pages from a pager.
	PageIns int64 `protobuf:"varint,19,opt,name=page_ins,json=pageIns,proto3" json:"page_ins"`
	// Total number of pages paged out.
	PageOuts int64 `protobuf:"varint,20,opt,name=page_outs,json=pageOuts,proto3" json:"page_outs"`
	// The total number of compressed pages that have been swapped out to disk.
	SwapIns int64 `protobuf:"varint,21,opt,name=swap_ins,json=swapIns,proto3" json:"swap_ins"`
	// The total number of compressed pages that have been swapped back in from disk.
	SwapOuts             int64    `protobuf:"varint,22,opt,name=swap_outs,json=swapOuts,proto3" json:"swap_outs"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VirtualMemoryInfo) Reset()         { *m = VirtualMemoryInfo{} }
func (m *VirtualMemoryInfo) String() string { return proto.CompactTextString(m) }
func (*VirtualMemoryInfo) ProtoMessage()    {}
func (*VirtualMemoryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8189d96f0a2d726, []int{0}
}

func (m *VirtualMemoryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualMemoryInfo.Unmarshal(m, b)
}
func (m *VirtualMemoryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualMemoryInfo.Marshal(b, m, deterministic)
}
func (m *VirtualMemoryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualMemoryInfo.Merge(m, src)
}
func (m *VirtualMemoryInfo) XXX_Size() int {
	return xxx_messageInfo_VirtualMemoryInfo.Size(m)
}
func (m *VirtualMemoryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualMemoryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualMemoryInfo proto.InternalMessageInfo

func (m *VirtualMemoryInfo) GetFree() int64 {
	if m != nil {
		return m.Free
	}
	return 0
}

func (m *VirtualMemoryInfo) GetActive() int64 {
	if m != nil {
		return m.Active
	}
	return 0
}

func (m *VirtualMemoryInfo) GetInactive() int64 {
	if m != nil {
		return m.Inactive
	}
	return 0
}

func (m *VirtualMemoryInfo) GetSpeculative() int64 {
	if m != nil {
		return m.Speculative
	}
	return 0
}

func (m *VirtualMemoryInfo) GetThrottled() int64 {
	if m != nil {
		return m.Throttled
	}
	return 0
}

func (m *VirtualMemoryInfo) GetWired() int64 {
	if m != nil {
		return m.Wired
	}
	return 0
}

func (m *VirtualMemoryInfo) GetPurgeable() int64 {
	if m != nil {
		return m.Purgeable
	}
	return 0
}

func (m *VirtualMemoryInfo) GetFaults() int64 {
	if m != nil {
		return m.Faults
	}
	return 0
}

func (m *VirtualMemoryInfo) GetCopy() int64 {
	if m != nil {
		return m.Copy
	}
	return 0
}

func (m *VirtualMemoryInfo) GetZeroFill() int64 {
	if m != nil {
		return m.ZeroFill
	}
	return 0
}

func (m *VirtualMemoryInfo) GetReactivated() int64 {
	if m != nil {
		return m.Reactivated
	}
	return 0
}

func (m *VirtualMemoryInfo) GetPurged() int64 {
	if m != nil {
		return m.Purged
	}
	return 0
}

func (m *VirtualMemoryInfo) GetFileBacked() int64 {
	if m != nil {
		return m.FileBacked
	}
	return 0
}

func (m *VirtualMemoryInfo) GetAnonymous() int64 {
	if m != nil {
		return m.Anonymous
	}
	return 0
}

func (m *VirtualMemoryInfo) GetUncompressed() int64 {
	if m != nil {
		return m.Uncompressed
	}
	return 0
}

func (m *VirtualMemoryInfo) GetCompressor() int64 {
	if m != nil {
		return m.Compressor
	}
	return 0
}

func (m *VirtualMemoryInfo) GetDecompressed() int64 {
	if m != nil {
		return m.Decompressed
	}
	return 0
}

func (m *VirtualMemoryInfo) GetCompressed() int64 {
	if m != nil {
		return m.Compressed
	}
	return 0
}

func (m *VirtualMemoryInfo) GetPageIns() int64 {
	if m != nil {
		return m.PageIns
	}
	return 0
}

func (m *VirtualMemoryInfo) GetPageOuts() int64 {
	if m != nil {
		return m.PageOuts
	}
	return 0
}

func (m *VirtualMemoryInfo) GetSwapIns() int64 {
	if m != nil {
		return m.SwapIns
	}
	return 0
}

func (m *VirtualMemoryInfo) GetSwapOuts() int64 {
	if m != nil {
		return m.SwapOuts
	}
	return 0
}

func init() {
	proto.RegisterType((*VirtualMemoryInfo)(nil), "schemas.VirtualMemoryInfo")
}

func init() { proto.RegisterFile("pb/virtual_memory_info.proto", fileDescriptor_a8189d96f0a2d726) }

var fileDescriptor_a8189d96f0a2d726 = []byte{
	// 427 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0x3b, 0x6f, 0x14, 0x31,
	0x14, 0x85, 0x15, 0x92, 0x7d, 0x79, 0xc3, 0x23, 0x26, 0x44, 0x17, 0x88, 0x20, 0x4a, 0x45, 0x43,
	0x16, 0x81, 0x04, 0x05, 0x5d, 0x0a, 0xa4, 0x14, 0x08, 0x89, 0x82, 0x82, 0x66, 0xe4, 0x19, 0xdf,
	0xd9, 0xb5, 0xd6, 0x33, 0x36, 0x7e, 0x24, 0x5a, 0xfe, 0x01, 0xff, 0x1a, 0xdd, 0xeb, 0xcd, 0x66,
	0xb6, 0xf3, 0xf9, 0x8e, 0xcf, 0x7d, 0x58, 0x16, 0xe7, 0xbe, 0x5e, 0xdc, 0x9a, 0x90, 0xb2, 0xb2,
	0x55, 0x87, 0x9d, 0x0b, 0x9b, 0xca, 0xf4, 0xad, 0xbb, 0xf2, 0xc1, 0x25, 0x27, 0x27, 0xb1, 0x59,
	0x61, 0xa7, 0xe2, 0xe5, 0xbf, 0x91, 0x38, 0xf9, 0x55, 0xae, 0x7d, 0xe7, 0x5b, 0x37, 0x7d, 0xeb,
	0xa4, 0x14, 0x47, 0x6d, 0x40, 0x84, 0x83, 0x8b, 0x83, 0x77, 0x87, 0x3f, 0xf9, 0x2c, 0xcf, 0xc4,
	0x58, 0x35, 0xc9, 0xdc, 0x22, 0x3c, 0x62, 0xba, 0x55, 0xf2, 0x95, 0x98, 0x9a, 0x7e, 0xeb, 0x1c,
	0xb2, 0xb3, 0xd3, 0xf2, 0x42, 0xcc, 0xa3, 0xc7, 0x26, 0x5b, 0xc5, 0xf6, 0x11, 0xdb, 0x43, 0x24,
	0xcf, 0xc5, 0x2c, 0xad, 0x82, 0x4b, 0xc9, 0xa2, 0x86, 0x11, 0xfb, 0x0f, 0x40, 0x9e, 0x8a, 0xd1,
	0x9d, 0x09, 0xa8, 0x61, 0xcc, 0x4e, 0x11, 0x94, 0xf1, 0x39, 0x2c, 0x51, 0xd5, 0x16, 0x61, 0x52,
	0x32, 0x3b, 0x40, 0x73, 0xb6, 0x2a, 0xdb, 0x14, 0x61, 0x5a, 0xe6, 0x2c, 0x8a, 0x76, 0x6a, 0x9c,
	0xdf, 0xc0, 0xac, 0xec, 0x44, 0x67, 0xf9, 0x5a, 0xcc, 0xfe, 0x62, 0x70, 0x55, 0x6b, 0xac, 0x05,
	0x51, 0x86, 0x27, 0xf0, 0xcd, 0x58, 0x4b, 0xc3, 0x07, 0xe4, 0x45, 0x54, 0x42, 0x0d, 0xf3, 0x32,
	0xfc, 0x00, 0x51, 0x2b, 0xee, 0xab, 0xe1, 0xb8, 0xb4, 0x2a, 0x4a, 0xbe, 0x15, 0xf3, 0xd6, 0x58,
	0xac, 0x6a, 0xd5, 0xac, 0x51, 0xc3, 0x63, 0x36, 0x05, 0xa1, 0x6b, 0x26, 0xb4, 0x81, 0xea, 0x5d,
	0xbf, 0xe9, 0x5c, 0x8e, 0xf0, 0xa4, 0x6c, 0xb0, 0x03, 0xf2, 0x52, 0x1c, 0xe7, 0xbe, 0x71, 0x9d,
	0x0f, 0x18, 0x23, 0x6a, 0x78, 0xca, 0x17, 0xf6, 0x98, 0x7c, 0x23, 0xc4, 0xbd, 0x72, 0x01, 0x9e,
	0x95, 0x0e, 0x0f, 0x84, 0x6a, 0x68, 0x1c, 0xd4, 0x38, 0x29, 0x35, 0x86, 0x6c, 0x58, 0x03, 0x35,
	0xc8, 0xfd, 0x1a, 0xa8, 0xe5, 0x4b, 0x31, 0xf5, 0x6a, 0x89, 0x95, 0xe9, 0x23, 0x3c, 0x67, 0x77,
	0x42, 0xfa, 0xa6, 0x8f, 0xf4, 0x70, 0x6c, 0xb9, 0x9c, 0x22, 0x9c, 0x96, 0x87, 0x23, 0xf0, 0x23,
	0xa7, 0x48, 0xb9, 0x78, 0xa7, 0x3c, 0xe7, 0x5e, 0x94, 0x1c, 0xe9, 0x6d, 0x8e, 0x2d, 0xce, 0x9d,
	0x95, 0x1c, 0x01, 0xca, 0x5d, 0x7f, 0xfc, 0xfd, 0x61, 0x69, 0xd2, 0x2a, 0xd7, 0x57, 0x8d, 0xeb,
	0x16, 0x9d, 0x69, 0xd6, 0xe8, 0xbf, 0x7c, 0x5e, 0xb8, 0xf8, 0x27, 0x63, 0xd8, 0xbc, 0xe7, 0x9f,
	0x5b, 0xe7, 0x76, 0xe1, 0xd7, 0xcb, 0xaf, 0xdb, 0xff, 0x5b, 0x8f, 0x99, 0x7e, 0xfa, 0x1f, 0x00,
	0x00, 0xff, 0xff, 0x1a, 0x34, 0x22, 0x82, 0xef, 0x02, 0x00, 0x00,
}
