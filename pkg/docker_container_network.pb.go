// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/docker_container_network.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Docker container networks.
type DockerContainerNetwork struct {
	// Container ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// Network name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// Network ID
	NetworkId string `protobuf:"bytes,3,opt,name=network_id,json=networkId,proto3" json:"network_id"`
	// Endpoint ID
	EndpointId string `protobuf:"bytes,4,opt,name=endpoint_id,json=endpointId,proto3" json:"endpoint_id"`
	// Gateway
	Gateway string `protobuf:"bytes,5,opt,name=gateway,proto3" json:"gateway"`
	// IP address
	IpAddress string `protobuf:"bytes,6,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address"`
	// IP subnet prefix length
	IpPrefixLen int32 `protobuf:"varint,7,opt,name=ip_prefix_len,json=ipPrefixLen,proto3" json:"ip_prefix_len"`
	// IPv6 gateway
	Ipv6Gateway string `protobuf:"bytes,8,opt,name=ipv6_gateway,json=ipv6Gateway,proto3" json:"ipv6_gateway"`
	// IPv6 address
	Ipv6Address string `protobuf:"bytes,9,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address"`
	// IPv6 subnet prefix length
	Ipv6PrefixLen int32 `protobuf:"varint,10,opt,name=ipv6_prefix_len,json=ipv6PrefixLen,proto3" json:"ipv6_prefix_len"`
	// MAC address
	MacAddress           string   `protobuf:"bytes,11,opt,name=mac_address,json=macAddress,proto3" json:"mac_address"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DockerContainerNetwork) Reset()         { *m = DockerContainerNetwork{} }
func (m *DockerContainerNetwork) String() string { return proto.CompactTextString(m) }
func (*DockerContainerNetwork) ProtoMessage()    {}
func (*DockerContainerNetwork) Descriptor() ([]byte, []int) {
	return fileDescriptor_8762999da57cea63, []int{0}
}

func (m *DockerContainerNetwork) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DockerContainerNetwork.Unmarshal(m, b)
}
func (m *DockerContainerNetwork) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DockerContainerNetwork.Marshal(b, m, deterministic)
}
func (m *DockerContainerNetwork) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DockerContainerNetwork.Merge(m, src)
}
func (m *DockerContainerNetwork) XXX_Size() int {
	return xxx_messageInfo_DockerContainerNetwork.Size(m)
}
func (m *DockerContainerNetwork) XXX_DiscardUnknown() {
	xxx_messageInfo_DockerContainerNetwork.DiscardUnknown(m)
}

var xxx_messageInfo_DockerContainerNetwork proto.InternalMessageInfo

func (m *DockerContainerNetwork) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DockerContainerNetwork) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DockerContainerNetwork) GetNetworkId() string {
	if m != nil {
		return m.NetworkId
	}
	return ""
}

func (m *DockerContainerNetwork) GetEndpointId() string {
	if m != nil {
		return m.EndpointId
	}
	return ""
}

func (m *DockerContainerNetwork) GetGateway() string {
	if m != nil {
		return m.Gateway
	}
	return ""
}

func (m *DockerContainerNetwork) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *DockerContainerNetwork) GetIpPrefixLen() int32 {
	if m != nil {
		return m.IpPrefixLen
	}
	return 0
}

func (m *DockerContainerNetwork) GetIpv6Gateway() string {
	if m != nil {
		return m.Ipv6Gateway
	}
	return ""
}

func (m *DockerContainerNetwork) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

func (m *DockerContainerNetwork) GetIpv6PrefixLen() int32 {
	if m != nil {
		return m.Ipv6PrefixLen
	}
	return 0
}

func (m *DockerContainerNetwork) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func init() {
	proto.RegisterType((*DockerContainerNetwork)(nil), "schemas.DockerContainerNetwork")
}

func init() { proto.RegisterFile("pb/docker_container_network.proto", fileDescriptor_8762999da57cea63) }

var fileDescriptor_8762999da57cea63 = []byte{
	// 312 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0x4b, 0x4b, 0x33, 0x31,
	0x14, 0x86, 0xe9, 0x7c, 0xbd, 0x7c, 0x3d, 0x63, 0x15, 0xb2, 0x90, 0x6c, 0xa4, 0x97, 0x85, 0x74,
	0x63, 0x47, 0x14, 0xea, 0xc2, 0x95, 0x17, 0x90, 0x82, 0x88, 0x74, 0xe9, 0x26, 0x64, 0x92, 0xb4,
	0x3d, 0x8c, 0x93, 0xc4, 0xcc, 0xd4, 0xda, 0x7f, 0xec, 0xcf, 0x90, 0xc9, 0x4c, 0xac, 0xbb, 0x99,
	0xe7, 0x7d, 0x79, 0x1f, 0xc2, 0x81, 0xb1, 0x4d, 0x13, 0x69, 0x44, 0xa6, 0x1c, 0x13, 0x46, 0x97,
	0x1c, 0xb5, 0x72, 0x4c, 0xab, 0x72, 0x67, 0x5c, 0x36, 0xb3, 0xce, 0x94, 0x86, 0xf4, 0x0a, 0xb1,
	0x51, 0x39, 0x2f, 0x26, 0xdf, 0x11, 0x9c, 0x3e, 0xfa, 0xee, 0x43, 0xa8, 0xbe, 0xd4, 0x4d, 0x72,
	0x0c, 0x11, 0x4a, 0xda, 0x1a, 0xb5, 0xa6, 0xfd, 0x65, 0x84, 0x92, 0x10, 0x68, 0x6b, 0x9e, 0x2b,
	0x1a, 0x79, 0xe2, 0xbf, 0xc9, 0x19, 0x40, 0x33, 0xcc, 0x50, 0xd2, 0x7f, 0x3e, 0xe9, 0x37, 0x64,
	0x21, 0xc9, 0x10, 0x62, 0xa5, 0xa5, 0x35, 0xa8, 0xcb, 0x2a, 0x6f, 0xfb, 0x1c, 0x02, 0x5a, 0x48,
	0x42, 0xa1, 0xb7, 0xe6, 0xa5, 0xda, 0xf1, 0x3d, 0xed, 0xf8, 0x30, 0xfc, 0x56, 0xcb, 0x68, 0x19,
	0x97, 0xd2, 0xa9, 0xa2, 0xa0, 0xdd, 0x7a, 0x19, 0xed, 0x5d, 0x0d, 0xc8, 0x04, 0x06, 0x68, 0x99,
	0x75, 0x6a, 0x85, 0x5f, 0xec, 0x5d, 0x69, 0xda, 0x1b, 0xb5, 0xa6, 0x9d, 0x65, 0x8c, 0xf6, 0xd5,
	0xb3, 0x67, 0xa5, 0xc9, 0x18, 0x8e, 0xd0, 0x7e, 0xce, 0x59, 0x30, 0xfc, 0xf7, 0x23, 0x71, 0xc5,
	0x9e, 0x1a, 0x4b, 0xa8, 0x04, 0x4f, 0xff, 0x50, 0x09, 0xa6, 0x73, 0x38, 0xf1, 0x95, 0x3f, 0x2e,
	0xf0, 0xae, 0x41, 0x85, 0x0f, 0xb6, 0x21, 0xc4, 0x39, 0x17, 0xbf, 0x4b, 0x71, 0xfd, 0xd6, 0x9c,
	0x8b, 0x66, 0xe8, 0xfe, 0xea, 0xed, 0x72, 0x8d, 0xe5, 0x66, 0x9b, 0xce, 0x84, 0xc9, 0x93, 0x1c,
	0x45, 0xa6, 0xec, 0xcd, 0x3c, 0x31, 0xc5, 0xc7, 0x56, 0xb9, 0xfd, 0x85, 0x3f, 0x4c, 0xba, 0x5d,
	0x25, 0x36, 0x5b, 0xdf, 0x36, 0xe7, 0x49, 0xbb, 0x9e, 0x5e, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff,
	0x68, 0x09, 0x45, 0xb3, 0xd3, 0x01, 0x00, 0x00,
}
