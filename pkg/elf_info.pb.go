// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/elf_info.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ELF file information.
type ElfInfo struct {
	// Class type
	Class string `protobuf:"bytes,1,opt,name=class,proto3" json:"class"`
	// Section type
	Abi string `protobuf:"bytes,2,opt,name=abi,proto3" json:"abi"`
	// Section virtual address in memory
	AbiVersion int32 `protobuf:"varint,3,opt,name=abi_version,json=abiVersion,proto3" json:"abi_version"`
	// Offset of section in file
	Type string `protobuf:"bytes,4,opt,name=type,proto3" json:"type"`
	// Machine type
	Machine int32 `protobuf:"varint,5,opt,name=machine,proto3" json:"machine"`
	// Object file version
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version"`
	// Entry point address
	Entry int64 `protobuf:"varint,7,opt,name=entry,proto3" json:"entry"`
	// ELF header flags
	Flags int32 `protobuf:"varint,8,opt,name=flags,proto3" json:"flags"`
	// Path to ELF file
	Path                 string   `protobuf:"bytes,9,opt,name=path,proto3" json:"path"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ElfInfo) Reset()         { *m = ElfInfo{} }
func (m *ElfInfo) String() string { return proto.CompactTextString(m) }
func (*ElfInfo) ProtoMessage()    {}
func (*ElfInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d824acb616cc1acf, []int{0}
}

func (m *ElfInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElfInfo.Unmarshal(m, b)
}
func (m *ElfInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElfInfo.Marshal(b, m, deterministic)
}
func (m *ElfInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElfInfo.Merge(m, src)
}
func (m *ElfInfo) XXX_Size() int {
	return xxx_messageInfo_ElfInfo.Size(m)
}
func (m *ElfInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ElfInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ElfInfo proto.InternalMessageInfo

func (m *ElfInfo) GetClass() string {
	if m != nil {
		return m.Class
	}
	return ""
}

func (m *ElfInfo) GetAbi() string {
	if m != nil {
		return m.Abi
	}
	return ""
}

func (m *ElfInfo) GetAbiVersion() int32 {
	if m != nil {
		return m.AbiVersion
	}
	return 0
}

func (m *ElfInfo) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ElfInfo) GetMachine() int32 {
	if m != nil {
		return m.Machine
	}
	return 0
}

func (m *ElfInfo) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ElfInfo) GetEntry() int64 {
	if m != nil {
		return m.Entry
	}
	return 0
}

func (m *ElfInfo) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *ElfInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func init() {
	proto.RegisterType((*ElfInfo)(nil), "schemas.ElfInfo")
}

func init() { proto.RegisterFile("pb/elf_info.proto", fileDescriptor_d824acb616cc1acf) }

var fileDescriptor_d824acb616cc1acf = []byte{
	// 242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x65, 0xd2, 0x34, 0xd4, 0x2c, 0x60, 0x31, 0xdc, 0x46, 0xc4, 0x94, 0x85, 0x06, 0x81,
	0x04, 0x03, 0x1b, 0x12, 0x03, 0x6b, 0x06, 0x06, 0x96, 0xca, 0xb6, 0xec, 0xe4, 0xd4, 0xc4, 0x36,
	0xb1, 0x83, 0x94, 0x57, 0xe5, 0x69, 0x90, 0xed, 0x76, 0xfb, 0xbf, 0xef, 0x7c, 0xbe, 0xd3, 0xd1,
	0x1b, 0x27, 0x5a, 0x35, 0xea, 0x03, 0x1a, 0x6d, 0xf7, 0x6e, 0xb6, 0xc1, 0xb2, 0xca, 0xcb, 0x41,
	0x4d, 0xdc, 0xdf, 0xff, 0x11, 0x5a, 0x7d, 0x8c, 0xfa, 0xd3, 0x68, 0xcb, 0x6e, 0x69, 0x29, 0x47,
	0xee, 0x3d, 0x90, 0x9a, 0x34, 0xbb, 0x2e, 0x03, 0xbb, 0xa6, 0x05, 0x17, 0x08, 0x17, 0xc9, 0xc5,
	0xc8, 0xee, 0xe8, 0x15, 0x17, 0x78, 0xf8, 0x55, 0xb3, 0x47, 0x6b, 0xa0, 0xa8, 0x49, 0x53, 0x76,
	0x94, 0x0b, 0xfc, 0xca, 0x86, 0x31, 0xba, 0x09, 0xab, 0x53, 0xb0, 0x49, 0x3d, 0x29, 0x33, 0xa0,
	0xd5, 0xc4, 0xe5, 0x80, 0x46, 0x41, 0x99, 0x1a, 0xce, 0x18, 0x2b, 0xe7, 0xaf, 0xb6, 0xb9, 0x72,
	0xc2, 0xb8, 0x90, 0x32, 0x61, 0x5e, 0xa1, 0xaa, 0x49, 0x53, 0x74, 0x19, 0xa2, 0xd5, 0x23, 0xef,
	0x3d, 0x5c, 0xa6, 0xd7, 0x19, 0xe2, 0x4c, 0xc7, 0xc3, 0x00, 0xbb, 0x3c, 0x33, 0xe6, 0xf7, 0xa7,
	0xef, 0xc7, 0x1e, 0xc3, 0xb0, 0x88, 0xbd, 0xb4, 0x53, 0x3b, 0xa1, 0x3c, 0x2a, 0xf7, 0xfa, 0xd2,
	0x5a, 0xff, 0xb3, 0xa8, 0x79, 0x7d, 0x48, 0xa7, 0x10, 0x8b, 0x6e, 0xdd, 0xb1, 0x7f, 0x3b, 0x1d,
	0x44, 0x6c, 0x93, 0x7d, 0xfe, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x92, 0x8f, 0x07, 0x2c, 0x35, 0x01,
	0x00, 0x00,
}
