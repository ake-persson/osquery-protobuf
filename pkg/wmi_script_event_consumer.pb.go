// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/wmi_script_event_consumer.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// WMI ActiveScriptEventConsumer, which can be used for persistence on Windows. See https://www.blackhat.com/docs/us-15/materials/us-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build-A-Persistent%20Asynchronous-And-Fileless-Backdoor-wp.pdf for more details.
type WmiScriptEventConsumer struct {
	// Unique identifier for the event consumer.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// Name of the scripting engine to use
	ScriptingEngine string `protobuf:"bytes,2,opt,name=scripting_engine,json=scriptingEngine,proto3" json:"scripting_engine"`
	// Name of the file from which the script text is read
	ScriptFileName string `protobuf:"bytes,3,opt,name=script_file_name,json=scriptFileName,proto3" json:"script_file_name"`
	// Text of the script that is expressed in a language known to the scripting engine. This property must be NULL if the ScriptFileName property is not NULL.
	ScriptText string `protobuf:"bytes,4,opt,name=script_text,json=scriptText,proto3" json:"script_text"`
	// The name of the class.
	Class string `protobuf:"bytes,5,opt,name=class,proto3" json:"class"`
	// Relative path to the class or instance.
	RelativePath         string   `protobuf:"bytes,6,opt,name=relative_path,json=relativePath,proto3" json:"relative_path"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WmiScriptEventConsumer) Reset()         { *m = WmiScriptEventConsumer{} }
func (m *WmiScriptEventConsumer) String() string { return proto.CompactTextString(m) }
func (*WmiScriptEventConsumer) ProtoMessage()    {}
func (*WmiScriptEventConsumer) Descriptor() ([]byte, []int) {
	return fileDescriptor_586e27baac7b20cc, []int{0}
}

func (m *WmiScriptEventConsumer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WmiScriptEventConsumer.Unmarshal(m, b)
}
func (m *WmiScriptEventConsumer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WmiScriptEventConsumer.Marshal(b, m, deterministic)
}
func (m *WmiScriptEventConsumer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WmiScriptEventConsumer.Merge(m, src)
}
func (m *WmiScriptEventConsumer) XXX_Size() int {
	return xxx_messageInfo_WmiScriptEventConsumer.Size(m)
}
func (m *WmiScriptEventConsumer) XXX_DiscardUnknown() {
	xxx_messageInfo_WmiScriptEventConsumer.DiscardUnknown(m)
}

var xxx_messageInfo_WmiScriptEventConsumer proto.InternalMessageInfo

func (m *WmiScriptEventConsumer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WmiScriptEventConsumer) GetScriptingEngine() string {
	if m != nil {
		return m.ScriptingEngine
	}
	return ""
}

func (m *WmiScriptEventConsumer) GetScriptFileName() string {
	if m != nil {
		return m.ScriptFileName
	}
	return ""
}

func (m *WmiScriptEventConsumer) GetScriptText() string {
	if m != nil {
		return m.ScriptText
	}
	return ""
}

func (m *WmiScriptEventConsumer) GetClass() string {
	if m != nil {
		return m.Class
	}
	return ""
}

func (m *WmiScriptEventConsumer) GetRelativePath() string {
	if m != nil {
		return m.RelativePath
	}
	return ""
}

func init() {
	proto.RegisterType((*WmiScriptEventConsumer)(nil), "schemas.WmiScriptEventConsumer")
}

func init() { proto.RegisterFile("pb/wmi_script_event_consumer.proto", fileDescriptor_586e27baac7b20cc) }

var fileDescriptor_586e27baac7b20cc = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x90, 0x4d, 0x4b, 0xf3, 0x40,
	0x14, 0x85, 0xc9, 0xfb, 0xb6, 0x15, 0xc7, 0x4f, 0x06, 0x91, 0xec, 0x94, 0xba, 0xa9, 0x0b, 0x1b,
	0x51, 0xd0, 0x85, 0x3b, 0xa5, 0x2e, 0x45, 0x54, 0x10, 0xdc, 0x0c, 0x93, 0xe1, 0x36, 0xb9, 0x34,
	0xf3, 0xe1, 0xcc, 0x4d, 0xad, 0x3f, 0xd6, 0xff, 0x22, 0xbd, 0x49, 0xdd, 0xdd, 0xfb, 0x9c, 0x87,
	0xb3, 0x38, 0x62, 0x1c, 0xca, 0xe2, 0xcb, 0xa2, 0x4a, 0x26, 0x62, 0x20, 0x05, 0x4b, 0x70, 0xa4,
	0x8c, 0x77, 0xa9, 0xb5, 0x10, 0xa7, 0x21, 0x7a, 0xf2, 0x72, 0x2b, 0x99, 0x1a, 0xac, 0x4e, 0xe3,
	0x9f, 0x4c, 0x1c, 0xbf, 0x5b, 0x7c, 0x65, 0x77, 0xb6, 0x56, 0x1f, 0x7a, 0x53, 0x4a, 0x31, 0x70,
	0xda, 0x42, 0x9e, 0x9d, 0x66, 0x93, 0xed, 0x17, 0xbe, 0xe5, 0xb9, 0x38, 0xec, 0x6a, 0xd1, 0x55,
	0x0a, 0x5c, 0x85, 0x0e, 0xf2, 0x7f, 0x9c, 0x1f, 0xfc, 0xf1, 0x19, 0x63, 0x39, 0xd9, 0xa8, 0x6a,
	0x8e, 0x0d, 0x28, 0xae, 0xfa, 0xcf, 0xea, 0x7e, 0xc7, 0x1f, 0xb1, 0x81, 0xa7, 0x75, 0xe9, 0x89,
	0xd8, 0xe9, 0x4d, 0x82, 0x15, 0xe5, 0x03, 0x96, 0x44, 0x87, 0xde, 0x60, 0x45, 0xf2, 0x48, 0x0c,
	0x4d, 0xa3, 0x53, 0xca, 0x87, 0x1c, 0x75, 0x8f, 0x3c, 0x13, 0x7b, 0x11, 0x1a, 0x4d, 0xb8, 0x04,
	0x15, 0x34, 0xd5, 0xf9, 0x88, 0xd3, 0xdd, 0x0d, 0x7c, 0xd6, 0x54, 0xdf, 0x5f, 0x7d, 0x5c, 0x56,
	0x48, 0x75, 0x5b, 0x4e, 0x8d, 0xb7, 0x85, 0x45, 0xb3, 0x80, 0x70, 0x7b, 0x53, 0xf8, 0xf4, 0xd9,
	0x42, 0xfc, 0xbe, 0xe0, 0x35, 0xca, 0x76, 0x5e, 0x84, 0x45, 0x75, 0xd7, 0x6f, 0x52, 0x8e, 0x98,
	0x5e, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xd9, 0xd8, 0x55, 0xe3, 0x49, 0x01, 0x00, 0x00,
}
