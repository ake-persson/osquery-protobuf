// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/xprotect_entry.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Database of the machine's XProtect signatures.
type XprotectEntry struct {
	// Description of XProtected malware
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// Launch services content type
	LaunchType string `protobuf:"bytes,2,opt,name=launch_type,json=launchType,proto3" json:"launch_type"`
	// XProtect identity (SHA1) of content
	Identity string `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity"`
	// Use this file name to match
	Filename string `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename"`
	// Use this file type to match
	Filetype string `protobuf:"bytes,5,opt,name=filetype,proto3" json:"filetype"`
	// Match any of the identities/patterns for this XProtect name
	Optional int32 `protobuf:"varint,6,opt,name=optional,proto3" json:"optional"`
	// Uses a match pattern instead of identity
	UsesPattern          int32    `protobuf:"varint,7,opt,name=uses_pattern,json=usesPattern,proto3" json:"uses_pattern"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XprotectEntry) Reset()         { *m = XprotectEntry{} }
func (m *XprotectEntry) String() string { return proto.CompactTextString(m) }
func (*XprotectEntry) ProtoMessage()    {}
func (*XprotectEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba8e227ad002f890, []int{0}
}

func (m *XprotectEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XprotectEntry.Unmarshal(m, b)
}
func (m *XprotectEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XprotectEntry.Marshal(b, m, deterministic)
}
func (m *XprotectEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XprotectEntry.Merge(m, src)
}
func (m *XprotectEntry) XXX_Size() int {
	return xxx_messageInfo_XprotectEntry.Size(m)
}
func (m *XprotectEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_XprotectEntry.DiscardUnknown(m)
}

var xxx_messageInfo_XprotectEntry proto.InternalMessageInfo

func (m *XprotectEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *XprotectEntry) GetLaunchType() string {
	if m != nil {
		return m.LaunchType
	}
	return ""
}

func (m *XprotectEntry) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *XprotectEntry) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *XprotectEntry) GetFiletype() string {
	if m != nil {
		return m.Filetype
	}
	return ""
}

func (m *XprotectEntry) GetOptional() int32 {
	if m != nil {
		return m.Optional
	}
	return 0
}

func (m *XprotectEntry) GetUsesPattern() int32 {
	if m != nil {
		return m.UsesPattern
	}
	return 0
}

func init() {
	proto.RegisterType((*XprotectEntry)(nil), "schemas.XprotectEntry")
}

func init() { proto.RegisterFile("pb/xprotect_entry.proto", fileDescriptor_ba8e227ad002f890) }

var fileDescriptor_ba8e227ad002f890 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x15, 0xe8, 0x1f, 0x70, 0x61, 0xf1, 0x82, 0xc5, 0x42, 0x61, 0xea, 0x42, 0x83, 0x40,
	0x82, 0x81, 0x0d, 0x89, 0x1d, 0x55, 0x0c, 0x88, 0x25, 0x72, 0xcc, 0xb5, 0xb1, 0x9a, 0xd8, 0x47,
	0x7c, 0x96, 0xf0, 0x27, 0xe5, 0xeb, 0xa0, 0x5c, 0xd2, 0xb0, 0xdd, 0xfb, 0xfd, 0x4e, 0x6f, 0x78,
	0xe2, 0x02, 0xcb, 0xfc, 0x07, 0x5b, 0x4f, 0x60, 0xa8, 0x00, 0x47, 0x6d, 0x5a, 0x77, 0xc9, 0xcb,
	0x79, 0x30, 0x15, 0x34, 0x3a, 0xdc, 0xfc, 0x66, 0xe2, 0xfc, 0x63, 0xf8, 0x78, 0xed, 0x1e, 0xa4,
	0x14, 0x13, 0xa7, 0x1b, 0x50, 0xd9, 0x32, 0x5b, 0x9d, 0x6e, 0xf8, 0x96, 0x57, 0x62, 0x51, 0xeb,
	0xe8, 0x4c, 0x55, 0x50, 0x42, 0x50, 0x47, 0xac, 0x44, 0x8f, 0xde, 0x13, 0x82, 0xbc, 0x14, 0x27,
	0xf6, 0x0b, 0x1c, 0x59, 0x4a, 0xea, 0x98, 0xed, 0x98, 0x3b, 0xb7, 0xb5, 0x35, 0x70, 0xe9, 0xa4,
	0x77, 0x87, 0x7c, 0x70, 0xdc, 0x3a, 0xfd, 0x77, 0x34, 0x74, 0x7a, 0x24, 0xeb, 0x9d, 0xae, 0xd5,
	0x6c, 0x99, 0xad, 0xa6, 0x9b, 0x31, 0xcb, 0x6b, 0x71, 0x16, 0x03, 0x84, 0x02, 0x35, 0x11, 0xb4,
	0x4e, 0xcd, 0xd9, 0x2f, 0x3a, 0xf6, 0xd6, 0xa3, 0x97, 0xfb, 0xcf, 0xbb, 0x9d, 0xa5, 0x2a, 0x96,
	0x6b, 0xe3, 0x9b, 0xbc, 0xb1, 0x66, 0x0f, 0xf8, 0xf4, 0x98, 0xfb, 0xf0, 0x1d, 0xa1, 0x4d, 0xb7,
	0xbc, 0x43, 0x19, 0xb7, 0x39, 0xee, 0x77, 0xcf, 0xc3, 0x1a, 0xe5, 0x8c, 0xe9, 0xc3, 0x5f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xc1, 0x59, 0xdc, 0x52, 0x38, 0x01, 0x00, 0x00,
}
