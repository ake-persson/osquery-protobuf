// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/signature.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// File (executable, bundle, installer, disk) code signing status.
type Signature struct {
	// If applicable
	Arch string `protobuf:"bytes,1,opt,name=arch,proto3" json:"arch"`
	// 1 If the file is signed else 0
	Signed int32 `protobuf:"varint,2,opt,name=signed,proto3" json:"signed"`
	// The signing identifier sealed into the signature
	Identifier string `protobuf:"bytes,3,opt,name=identifier,proto3" json:"identifier"`
	// Hash of the application Code Directory
	Cdhash string `protobuf:"bytes,4,opt,name=cdhash,proto3" json:"cdhash"`
	// The team signing identifier sealed into the signature
	TeamIdentifier string `protobuf:"bytes,5,opt,name=team_identifier,json=teamIdentifier,proto3" json:"team_identifier"`
	// Certificate Common Name
	Authority            string   `protobuf:"bytes,6,opt,name=authority,proto3" json:"authority"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbd7f0e0b03497ec, []int{0}
}

func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (m *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(m, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

func (m *Signature) GetSigned() int32 {
	if m != nil {
		return m.Signed
	}
	return 0
}

func (m *Signature) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Signature) GetCdhash() string {
	if m != nil {
		return m.Cdhash
	}
	return ""
}

func (m *Signature) GetTeamIdentifier() string {
	if m != nil {
		return m.TeamIdentifier
	}
	return ""
}

func (m *Signature) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func init() {
	proto.RegisterType((*Signature)(nil), "schemas.Signature")
}

func init() { proto.RegisterFile("pb/signature.proto", fileDescriptor_dbd7f0e0b03497ec) }

var fileDescriptor_dbd7f0e0b03497ec = []byte{
	// 214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x3f, 0x4b, 0xc5, 0x30,
	0x14, 0xc5, 0x89, 0xbe, 0x57, 0xe9, 0x1d, 0x14, 0x32, 0x48, 0x06, 0x91, 0x87, 0x8b, 0x6f, 0xf1,
	0x45, 0x14, 0x74, 0x70, 0x73, 0x73, 0xad, 0x9b, 0x8b, 0x24, 0xe9, 0x6d, 0x13, 0x4a, 0x9a, 0x98,
	0x3f, 0x43, 0xbf, 0x98, 0x9f, 0x4f, 0x1a, 0x2a, 0xed, 0x96, 0xfb, 0x3b, 0xe7, 0x17, 0x38, 0x40,
	0xbd, 0xe4, 0xd1, 0xf4, 0xa3, 0x48, 0x39, 0xe0, 0xc9, 0x07, 0x97, 0x1c, 0xbd, 0x88, 0x4a, 0xa3,
	0x15, 0xf1, 0xee, 0x97, 0x40, 0xfd, 0xf9, 0x1f, 0x52, 0x0a, 0x3b, 0x11, 0x94, 0x66, 0xe4, 0x40,
	0x8e, 0x75, 0x53, 0xde, 0xf4, 0x1a, 0xaa, 0xd9, 0xc6, 0x96, 0x9d, 0x1d, 0xc8, 0x71, 0xdf, 0x2c,
	0x17, 0xbd, 0x05, 0x30, 0x2d, 0x8e, 0xc9, 0x74, 0x06, 0x03, 0x3b, 0x2f, 0xc6, 0x86, 0xcc, 0x9e,
	0x6a, 0xb5, 0x88, 0x9a, 0xed, 0x4a, 0xb6, 0x5c, 0xf4, 0x1e, 0xae, 0x12, 0x0a, 0xfb, 0xbd, 0x91,
	0xf7, 0xa5, 0x70, 0x39, 0xe3, 0x8f, 0xf5, 0x83, 0x1b, 0xa8, 0x45, 0x4e, 0xda, 0x05, 0x93, 0x26,
	0x56, 0x95, 0xca, 0x0a, 0xde, 0x9f, 0xbe, 0x1e, 0x7b, 0x93, 0x74, 0x96, 0x27, 0xe5, 0x2c, 0xb7,
	0x46, 0x0d, 0xe8, 0x5f, 0x5f, 0xb8, 0x8b, 0x3f, 0x19, 0xc3, 0xf4, 0x50, 0x66, 0xca, 0xdc, 0x71,
	0x3f, 0xf4, 0x6f, 0xcb, 0x58, 0x59, 0x15, 0xfa, 0xfc, 0x17, 0x00, 0x00, 0xff, 0xff, 0x79, 0x35,
	0x5d, 0xeb, 0x12, 0x01, 0x00, 0x00,
}
