// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/windows_crash.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Extracted information from Windows crash logs (Minidumps).
type WindowsCrash struct {
	// Timestamp (log format) of the crash
	Datetime string `protobuf:"bytes,1,opt,name=datetime,proto3" json:"datetime"`
	// Path of the crashed module within the process
	Module string `protobuf:"bytes,2,opt,name=module,proto3" json:"module"`
	// Path of the executable file for the crashed process
	Path string `protobuf:"bytes,3,opt,name=path,proto3" json:"path"`
	// Process ID of the crashed process
	Pid int64 `protobuf:"varint,4,opt,name=pid,proto3" json:"pid"`
	// Thread ID of the crashed thread
	Tid int64 `protobuf:"varint,5,opt,name=tid,proto3" json:"tid"`
	// File version info of the crashed process
	Version string `protobuf:"bytes,6,opt,name=version,proto3" json:"version"`
	// Uptime of the process in seconds
	ProcessUptime int64 `protobuf:"varint,7,opt,name=process_uptime,json=processUptime,proto3" json:"process_uptime"`
	// Multiple stack frames from the stack trace
	StackTrace string `protobuf:"bytes,8,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace"`
	// The Windows exception code
	ExceptionCode string `protobuf:"bytes,9,opt,name=exception_code,json=exceptionCode,proto3" json:"exception_code"`
	// The NTSTATUS error message associated with the exception code
	ExceptionMessage string `protobuf:"bytes,10,opt,name=exception_message,json=exceptionMessage,proto3" json:"exception_message"`
	// Address (in hex) where the exception occurred
	ExceptionAddress string `protobuf:"bytes,11,opt,name=exception_address,json=exceptionAddress,proto3" json:"exception_address"`
	// The values of the system registers
	Registers string `protobuf:"bytes,12,opt,name=registers,proto3" json:"registers"`
	// Command-line string passed to the crashed process
	CommandLine string `protobuf:"bytes,13,opt,name=command_line,json=commandLine,proto3" json:"command_line"`
	// Current working directory of the crashed process
	CurrentDirectory string `protobuf:"bytes,14,opt,name=current_directory,json=currentDirectory,proto3" json:"current_directory"`
	// Username of the user who ran the crashed process
	Username string `protobuf:"bytes,15,opt,name=username,proto3" json:"username"`
	// Name of the machine where the crash happened
	MachineName string `protobuf:"bytes,16,opt,name=machine_name,json=machineName,proto3" json:"machine_name"`
	// Windows major version of the machine
	MajorVersion int32 `protobuf:"varint,17,opt,name=major_version,json=majorVersion,proto3" json:"major_version"`
	// Windows minor version of the machine
	MinorVersion int32 `protobuf:"varint,18,opt,name=minor_version,json=minorVersion,proto3" json:"minor_version"`
	// Windows build number of the crashing machine
	BuildNumber int32 `protobuf:"varint,19,opt,name=build_number,json=buildNumber,proto3" json:"build_number"`
	// Type of crash log
	Type string `protobuf:"bytes,20,opt,name=type,proto3" json:"type"`
	// Path of the log file
	CrashPath            string   `protobuf:"bytes,21,opt,name=crash_path,json=crashPath,proto3" json:"crash_path"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WindowsCrash) Reset()         { *m = WindowsCrash{} }
func (m *WindowsCrash) String() string { return proto.CompactTextString(m) }
func (*WindowsCrash) ProtoMessage()    {}
func (*WindowsCrash) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2a43623d8901788, []int{0}
}

func (m *WindowsCrash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WindowsCrash.Unmarshal(m, b)
}
func (m *WindowsCrash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WindowsCrash.Marshal(b, m, deterministic)
}
func (m *WindowsCrash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WindowsCrash.Merge(m, src)
}
func (m *WindowsCrash) XXX_Size() int {
	return xxx_messageInfo_WindowsCrash.Size(m)
}
func (m *WindowsCrash) XXX_DiscardUnknown() {
	xxx_messageInfo_WindowsCrash.DiscardUnknown(m)
}

var xxx_messageInfo_WindowsCrash proto.InternalMessageInfo

func (m *WindowsCrash) GetDatetime() string {
	if m != nil {
		return m.Datetime
	}
	return ""
}

func (m *WindowsCrash) GetModule() string {
	if m != nil {
		return m.Module
	}
	return ""
}

func (m *WindowsCrash) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *WindowsCrash) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *WindowsCrash) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *WindowsCrash) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *WindowsCrash) GetProcessUptime() int64 {
	if m != nil {
		return m.ProcessUptime
	}
	return 0
}

func (m *WindowsCrash) GetStackTrace() string {
	if m != nil {
		return m.StackTrace
	}
	return ""
}

func (m *WindowsCrash) GetExceptionCode() string {
	if m != nil {
		return m.ExceptionCode
	}
	return ""
}

func (m *WindowsCrash) GetExceptionMessage() string {
	if m != nil {
		return m.ExceptionMessage
	}
	return ""
}

func (m *WindowsCrash) GetExceptionAddress() string {
	if m != nil {
		return m.ExceptionAddress
	}
	return ""
}

func (m *WindowsCrash) GetRegisters() string {
	if m != nil {
		return m.Registers
	}
	return ""
}

func (m *WindowsCrash) GetCommandLine() string {
	if m != nil {
		return m.CommandLine
	}
	return ""
}

func (m *WindowsCrash) GetCurrentDirectory() string {
	if m != nil {
		return m.CurrentDirectory
	}
	return ""
}

func (m *WindowsCrash) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *WindowsCrash) GetMachineName() string {
	if m != nil {
		return m.MachineName
	}
	return ""
}

func (m *WindowsCrash) GetMajorVersion() int32 {
	if m != nil {
		return m.MajorVersion
	}
	return 0
}

func (m *WindowsCrash) GetMinorVersion() int32 {
	if m != nil {
		return m.MinorVersion
	}
	return 0
}

func (m *WindowsCrash) GetBuildNumber() int32 {
	if m != nil {
		return m.BuildNumber
	}
	return 0
}

func (m *WindowsCrash) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *WindowsCrash) GetCrashPath() string {
	if m != nil {
		return m.CrashPath
	}
	return ""
}

func init() {
	proto.RegisterType((*WindowsCrash)(nil), "schemas.WindowsCrash")
}

func init() { proto.RegisterFile("pb/windows_crash.proto", fileDescriptor_b2a43623d8901788) }

var fileDescriptor_b2a43623d8901788 = []byte{
	// 463 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0x4d, 0x6f, 0x13, 0x31,
	0x10, 0x86, 0x15, 0xd2, 0x24, 0x8d, 0xb3, 0x29, 0xa9, 0x81, 0xca, 0x42, 0x20, 0x52, 0x10, 0x52,
	0x24, 0x44, 0x83, 0x40, 0x82, 0x03, 0x27, 0x28, 0x47, 0xa8, 0x50, 0xc4, 0x87, 0xc4, 0xc5, 0xf2,
	0xda, 0x43, 0xd6, 0x24, 0xfe, 0xc0, 0xf6, 0x52, 0xf2, 0x97, 0xf8, 0x95, 0xc8, 0xb3, 0xbb, 0x29,
	0xf4, 0xe6, 0x79, 0xe6, 0xb1, 0x67, 0xb5, 0xf3, 0x92, 0x13, 0x5f, 0x2e, 0x2f, 0xb5, 0x55, 0xee,
	0x32, 0x72, 0x19, 0x44, 0xac, 0xce, 0x7c, 0x70, 0xc9, 0xd1, 0x51, 0x94, 0x15, 0x18, 0x11, 0x1f,
	0xfe, 0x19, 0x90, 0xe2, 0x6b, 0x23, 0x9c, 0xe7, 0x3e, 0xbd, 0x4b, 0x0e, 0x95, 0x48, 0x90, 0xb4,
	0x01, 0xd6, 0x9b, 0xf7, 0x16, 0xe3, 0xd5, 0xbe, 0xa6, 0x27, 0x64, 0x68, 0x9c, 0xaa, 0xb7, 0xc0,
	0x6e, 0x60, 0xa7, 0xad, 0x28, 0x25, 0x07, 0x5e, 0xa4, 0x8a, 0xf5, 0x91, 0xe2, 0x99, 0xce, 0x48,
	0xdf, 0x6b, 0xc5, 0x0e, 0xe6, 0xbd, 0x45, 0x7f, 0x95, 0x8f, 0x99, 0x24, 0xad, 0xd8, 0xa0, 0x21,
	0x49, 0x2b, 0xca, 0xc8, 0xe8, 0x17, 0x84, 0xa8, 0x9d, 0x65, 0x43, 0xbc, 0xda, 0x95, 0xf4, 0x31,
	0x39, 0xf2, 0xc1, 0x49, 0x88, 0x91, 0xd7, 0x1e, 0xbf, 0x65, 0x84, 0xd7, 0xa6, 0x2d, 0xfd, 0x8c,
	0x90, 0x3e, 0x20, 0x93, 0x98, 0x84, 0xdc, 0xf0, 0x14, 0x84, 0x04, 0x76, 0x88, 0x8f, 0x10, 0x44,
	0x9f, 0x32, 0xc9, 0xef, 0xc0, 0x6f, 0x09, 0x3e, 0x69, 0x67, 0xb9, 0x74, 0x0a, 0xd8, 0x18, 0x9d,
	0xe9, 0x9e, 0x9e, 0x3b, 0x05, 0xf4, 0x09, 0x39, 0xbe, 0xd2, 0x0c, 0xc4, 0x28, 0xd6, 0xc0, 0x08,
	0x9a, 0xb3, 0x7d, 0xe3, 0x43, 0xc3, 0xff, 0x97, 0x85, 0x52, 0x01, 0x62, 0x64, 0x93, 0x6b, 0xf2,
	0x9b, 0x86, 0xd3, 0x7b, 0x64, 0x1c, 0x60, 0xad, 0x63, 0x82, 0x10, 0x59, 0x81, 0xd2, 0x15, 0xa0,
	0xa7, 0xa4, 0x90, 0xce, 0x18, 0x61, 0x15, 0xdf, 0x6a, 0x0b, 0x6c, 0x8a, 0xc2, 0xa4, 0x65, 0xef,
	0xb5, 0xc5, 0x69, 0xb2, 0x0e, 0x01, 0x6c, 0xe2, 0x4a, 0x07, 0x90, 0xc9, 0x85, 0x1d, 0x3b, 0x6a,
	0xa6, 0xb5, 0x8d, 0x77, 0x1d, 0xcf, 0xcb, 0xab, 0x23, 0x04, 0x2b, 0x0c, 0xb0, 0x9b, 0xcd, 0xf2,
	0xba, 0x3a, 0xcf, 0x32, 0x42, 0x56, 0xda, 0x02, 0xc7, 0xfe, 0xac, 0x99, 0xd5, 0xb2, 0x8b, 0xac,
	0x3c, 0x22, 0x53, 0x23, 0x7e, 0xb8, 0xc0, 0xbb, 0xad, 0x1c, 0xcf, 0x7b, 0x8b, 0xc1, 0xaa, 0x40,
	0xf8, 0xa5, 0x5d, 0x4d, 0x96, 0xb4, 0xfd, 0x47, 0xa2, 0xad, 0x94, 0x61, 0x27, 0x9d, 0x92, 0xa2,
	0xac, 0xf5, 0x56, 0x71, 0x5b, 0x9b, 0x12, 0x02, 0xbb, 0x85, 0xce, 0x04, 0xd9, 0x05, 0xa2, 0x1c,
	0x9a, 0xb4, 0xf3, 0xc0, 0x6e, 0x37, 0xa1, 0xc9, 0x67, 0x7a, 0x9f, 0x10, 0x4c, 0x29, 0xc7, 0x38,
	0xdd, 0x69, 0x7e, 0x17, 0x92, 0x8f, 0x22, 0x55, 0x6f, 0x9f, 0x7f, 0x7b, 0xb6, 0xd6, 0xa9, 0xaa,
	0xcb, 0x33, 0xe9, 0xcc, 0xd2, 0x68, 0xb9, 0x01, 0xff, 0xea, 0xe5, 0xd2, 0xc5, 0x9f, 0x35, 0x84,
	0xdd, 0x53, 0x8c, 0x76, 0x59, 0x7f, 0x5f, 0xfa, 0xcd, 0xfa, 0x75, 0x1b, 0xf0, 0x72, 0x88, 0xf4,
	0xc5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3c, 0xae, 0xb1, 0xee, 0x0a, 0x03, 0x00, 0x00,
}
