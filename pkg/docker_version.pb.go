// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/docker_version.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Docker version information.
type DockerVersion struct {
	// Docker version
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version"`
	// API version
	ApiVersion string `protobuf:"bytes,2,opt,name=api_version,json=apiVersion,proto3" json:"api_version"`
	// Minimum API version supported
	MinApiVersion string `protobuf:"bytes,3,opt,name=min_api_version,json=minApiVersion,proto3" json:"min_api_version"`
	// Docker build git commit
	GitCommit string `protobuf:"bytes,4,opt,name=git_commit,json=gitCommit,proto3" json:"git_commit"`
	// Go version
	GoVersion string `protobuf:"bytes,5,opt,name=go_version,json=goVersion,proto3" json:"go_version"`
	// Operating system
	Os string `protobuf:"bytes,6,opt,name=os,proto3" json:"os"`
	// Hardware architecture
	Arch string `protobuf:"bytes,7,opt,name=arch,proto3" json:"arch"`
	// Kernel version
	KernelVersion string `protobuf:"bytes,8,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version"`
	// Build time
	BuildTime            string   `protobuf:"bytes,9,opt,name=build_time,json=buildTime,proto3" json:"build_time"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DockerVersion) Reset()         { *m = DockerVersion{} }
func (m *DockerVersion) String() string { return proto.CompactTextString(m) }
func (*DockerVersion) ProtoMessage()    {}
func (*DockerVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cfd84d192f75600, []int{0}
}

func (m *DockerVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DockerVersion.Unmarshal(m, b)
}
func (m *DockerVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DockerVersion.Marshal(b, m, deterministic)
}
func (m *DockerVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DockerVersion.Merge(m, src)
}
func (m *DockerVersion) XXX_Size() int {
	return xxx_messageInfo_DockerVersion.Size(m)
}
func (m *DockerVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_DockerVersion.DiscardUnknown(m)
}

var xxx_messageInfo_DockerVersion proto.InternalMessageInfo

func (m *DockerVersion) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *DockerVersion) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *DockerVersion) GetMinApiVersion() string {
	if m != nil {
		return m.MinApiVersion
	}
	return ""
}

func (m *DockerVersion) GetGitCommit() string {
	if m != nil {
		return m.GitCommit
	}
	return ""
}

func (m *DockerVersion) GetGoVersion() string {
	if m != nil {
		return m.GoVersion
	}
	return ""
}

func (m *DockerVersion) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *DockerVersion) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

func (m *DockerVersion) GetKernelVersion() string {
	if m != nil {
		return m.KernelVersion
	}
	return ""
}

func (m *DockerVersion) GetBuildTime() string {
	if m != nil {
		return m.BuildTime
	}
	return ""
}

func init() {
	proto.RegisterType((*DockerVersion)(nil), "schemas.DockerVersion")
}

func init() { proto.RegisterFile("pb/docker_version.proto", fileDescriptor_8cfd84d192f75600) }

var fileDescriptor_8cfd84d192f75600 = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x69, 0xac, 0x8d, 0x19, 0x69, 0x85, 0xbd, 0xb8, 0x17, 0x51, 0x04, 0xc5, 0x8b, 0x8d,
	0x28, 0xe8, 0xc1, 0x93, 0x7f, 0x9e, 0x40, 0xc4, 0x83, 0x97, 0x90, 0xdd, 0xae, 0xc9, 0x90, 0x6e,
	0x66, 0xdd, 0xdd, 0x08, 0xbe, 0x8a, 0x4f, 0x2b, 0x4c, 0x92, 0xb6, 0xb7, 0xe4, 0xf7, 0xfd, 0xe6,
	0xdb, 0x61, 0xe0, 0xd8, 0xa9, 0x7c, 0x45, 0xba, 0x31, 0xbe, 0xf8, 0x31, 0x3e, 0x20, 0xb5, 0x4b,
	0xe7, 0x29, 0x92, 0x48, 0x83, 0xae, 0x8d, 0x2d, 0xc3, 0xf9, 0x5f, 0x02, 0xf3, 0x57, 0x36, 0x3e,
	0x7a, 0x41, 0x48, 0x48, 0x07, 0x57, 0x4e, 0xce, 0x26, 0x57, 0xd9, 0xdb, 0xf8, 0x2b, 0x4e, 0xe1,
	0xb0, 0x74, 0x38, 0x36, 0xc9, 0x84, 0x53, 0x28, 0x1d, 0x8e, 0xa3, 0x97, 0x70, 0x64, 0xb1, 0x2d,
	0x76, 0xa5, 0x3d, 0x96, 0xe6, 0x16, 0xdb, 0xa7, 0xad, 0x77, 0x02, 0x50, 0x61, 0x2c, 0x34, 0x59,
	0x8b, 0x51, 0x4e, 0x59, 0xc9, 0x2a, 0x8c, 0x2f, 0x0c, 0x38, 0xa6, 0x4d, 0xc3, 0xfe, 0x10, 0xd3,
	0x38, 0xbd, 0x80, 0x84, 0x82, 0x9c, 0x31, 0x4e, 0x28, 0x08, 0x01, 0xd3, 0xd2, 0xeb, 0x5a, 0xa6,
	0x4c, 0xf8, 0x5b, 0x5c, 0xc0, 0xa2, 0x31, 0xbe, 0x35, 0xeb, 0x4d, 0xcd, 0x41, 0xbf, 0x48, 0x4f,
	0x77, 0x16, 0x51, 0x1d, 0xae, 0x57, 0x45, 0x44, 0x6b, 0x64, 0xd6, 0xbf, 0xc4, 0xe4, 0x1d, 0xad,
	0x79, 0xbe, 0xfd, 0xbc, 0xa9, 0x30, 0xd6, 0x9d, 0x5a, 0x6a, 0xb2, 0xb9, 0x45, 0xdd, 0x18, 0xf7,
	0x70, 0x9f, 0x53, 0xf8, 0xee, 0x8c, 0xff, 0xbd, 0xe6, 0x53, 0xaa, 0xee, 0x2b, 0x77, 0x4d, 0xf5,
	0x38, 0x1c, 0x54, 0xcd, 0x98, 0xde, 0xfd, 0x07, 0x00, 0x00, 0xff, 0xff, 0x42, 0x35, 0x20, 0x37,
	0x7b, 0x01, 0x00, 0x00,
}
