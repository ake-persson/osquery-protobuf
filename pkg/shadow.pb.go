// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/shadow.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Local system users encrypted passwords and related information. Please note, that you usually need superuser rights to access `/etc/shadow`.
type Shadow struct {
	// Password status
	PasswordStatus string `protobuf:"bytes,1,opt,name=password_status,json=passwordStatus,proto3" json:"password_status"`
	// Password hashing algorithm
	HashAlg string `protobuf:"bytes,2,opt,name=hash_alg,json=hashAlg,proto3" json:"hash_alg"`
	// Date of last password change (starting from UNIX epoch date)
	LastChange int64 `protobuf:"varint,3,opt,name=last_change,json=lastChange,proto3" json:"last_change"`
	// Minimal number of days between password changes
	Min int64 `protobuf:"varint,4,opt,name=min,proto3" json:"min"`
	// Maximum number of days between password changes
	Max int64 `protobuf:"varint,5,opt,name=max,proto3" json:"max"`
	// Number of days before password expires to warn user about it
	Warning int64 `protobuf:"varint,6,opt,name=warning,proto3" json:"warning"`
	// Number of days after password expires until account is blocked
	Inactive int64 `protobuf:"varint,7,opt,name=inactive,proto3" json:"inactive"`
	// Number of days since UNIX epoch date until account is disabled
	Expire int64 `protobuf:"varint,8,opt,name=expire,proto3" json:"expire"`
	// Reserved
	Flag int64 `protobuf:"varint,9,opt,name=flag,proto3" json:"flag"`
	// Username
	Username             string   `protobuf:"bytes,10,opt,name=username,proto3" json:"username"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Shadow) Reset()         { *m = Shadow{} }
func (m *Shadow) String() string { return proto.CompactTextString(m) }
func (*Shadow) ProtoMessage()    {}
func (*Shadow) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb093c663bfdc1e4, []int{0}
}

func (m *Shadow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shadow.Unmarshal(m, b)
}
func (m *Shadow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shadow.Marshal(b, m, deterministic)
}
func (m *Shadow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shadow.Merge(m, src)
}
func (m *Shadow) XXX_Size() int {
	return xxx_messageInfo_Shadow.Size(m)
}
func (m *Shadow) XXX_DiscardUnknown() {
	xxx_messageInfo_Shadow.DiscardUnknown(m)
}

var xxx_messageInfo_Shadow proto.InternalMessageInfo

func (m *Shadow) GetPasswordStatus() string {
	if m != nil {
		return m.PasswordStatus
	}
	return ""
}

func (m *Shadow) GetHashAlg() string {
	if m != nil {
		return m.HashAlg
	}
	return ""
}

func (m *Shadow) GetLastChange() int64 {
	if m != nil {
		return m.LastChange
	}
	return 0
}

func (m *Shadow) GetMin() int64 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *Shadow) GetMax() int64 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *Shadow) GetWarning() int64 {
	if m != nil {
		return m.Warning
	}
	return 0
}

func (m *Shadow) GetInactive() int64 {
	if m != nil {
		return m.Inactive
	}
	return 0
}

func (m *Shadow) GetExpire() int64 {
	if m != nil {
		return m.Expire
	}
	return 0
}

func (m *Shadow) GetFlag() int64 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *Shadow) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func init() {
	proto.RegisterType((*Shadow)(nil), "schemas.Shadow")
}

func init() { proto.RegisterFile("pb/shadow.proto", fileDescriptor_bb093c663bfdc1e4) }

var fileDescriptor_bb093c663bfdc1e4 = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0xd0, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0x06, 0x70, 0xf5, 0x0f, 0x49, 0x7b, 0x48, 0x14, 0x79, 0x40, 0x86, 0x85, 0x8a, 0x85, 0x2e,
	0x34, 0x08, 0x24, 0x18, 0x98, 0x80, 0x37, 0x68, 0x37, 0x96, 0xe8, 0x92, 0xba, 0xb6, 0xd5, 0xc4,
	0x36, 0xb6, 0x43, 0xc2, 0x53, 0xf0, 0xca, 0x28, 0xa7, 0xb4, 0xdb, 0x7d, 0xbf, 0xcf, 0xb2, 0x74,
	0x07, 0x0b, 0x57, 0x64, 0x41, 0xe1, 0xce, 0xb6, 0x6b, 0xe7, 0x6d, 0xb4, 0x2c, 0x0d, 0xa5, 0x12,
	0x35, 0x86, 0xbb, 0xbf, 0x31, 0x24, 0x5b, 0x6a, 0xd8, 0x3d, 0x2c, 0x1c, 0x86, 0xd0, 0x5a, 0xbf,
	0xcb, 0x43, 0xc4, 0xd8, 0x04, 0x3e, 0x5a, 0x8e, 0x56, 0xf3, 0xcd, 0xc5, 0x91, 0xb7, 0xa4, 0xec,
	0x1a, 0x66, 0x0a, 0x83, 0xca, 0xb1, 0x92, 0x7c, 0x4c, 0x2f, 0xd2, 0x3e, 0xbf, 0x57, 0x92, 0xdd,
	0xc2, 0x79, 0x85, 0x21, 0xe6, 0xa5, 0x42, 0x23, 0x05, 0x9f, 0x2c, 0x47, 0xab, 0xc9, 0x06, 0x7a,
	0xfa, 0x24, 0x61, 0x97, 0x30, 0xa9, 0xb5, 0xe1, 0x53, 0x2a, 0xfa, 0x91, 0x04, 0x3b, 0x7e, 0x36,
	0x08, 0x76, 0x8c, 0x43, 0xda, 0xa2, 0x37, 0xda, 0x48, 0x9e, 0x90, 0x1e, 0x23, 0xbb, 0x81, 0x99,
	0x36, 0x58, 0x46, 0xfd, 0x23, 0x78, 0x4a, 0xd5, 0x29, 0xb3, 0x2b, 0x48, 0x44, 0xe7, 0xb4, 0x17,
	0x7c, 0x46, 0xcd, 0x90, 0x18, 0x83, 0xe9, 0xbe, 0x42, 0xc9, 0xe7, 0xa4, 0x34, 0xf7, 0xff, 0x34,
	0x41, 0x78, 0x83, 0xb5, 0xe0, 0x40, 0x1b, 0x9c, 0xf2, 0xc7, 0xd3, 0xd7, 0xa3, 0xd4, 0x51, 0x35,
	0xc5, 0xba, 0xb4, 0x75, 0x56, 0xeb, 0xf2, 0x20, 0xdc, 0xeb, 0x4b, 0x66, 0xc3, 0x77, 0x23, 0xfc,
	0xef, 0x03, 0xdd, 0xaf, 0x68, 0xf6, 0x99, 0x3b, 0xc8, 0xb7, 0xe1, 0x8a, 0x45, 0x42, 0xfa, 0xfc,
	0x1f, 0x00, 0x00, 0xff, 0xff, 0x63, 0x3e, 0x9a, 0xb8, 0x68, 0x01, 0x00, 0x00,
}
