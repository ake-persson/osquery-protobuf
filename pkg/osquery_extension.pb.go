// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/osquery_extension.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// List of active osquery extensions.
type OsqueryExtension struct {
	// The transient ID assigned for communication
	Uuid int64 `protobuf:"varint,1,opt,name=uuid,proto3" json:"uuid"`
	// Extension's name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// Extension's version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version"`
	// osquery SDK version used to build the extension
	SdkVersion string `protobuf:"bytes,4,opt,name=sdk_version,json=sdkVersion,proto3" json:"sdk_version"`
	// Path of the extenion's domain socket or library path
	Path string `protobuf:"bytes,5,opt,name=path,proto3" json:"path"`
	// SDK extension type: extension or module
	Type                 string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OsqueryExtension) Reset()         { *m = OsqueryExtension{} }
func (m *OsqueryExtension) String() string { return proto.CompactTextString(m) }
func (*OsqueryExtension) ProtoMessage()    {}
func (*OsqueryExtension) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf26c5430e3b9cfb, []int{0}
}

func (m *OsqueryExtension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OsqueryExtension.Unmarshal(m, b)
}
func (m *OsqueryExtension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OsqueryExtension.Marshal(b, m, deterministic)
}
func (m *OsqueryExtension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OsqueryExtension.Merge(m, src)
}
func (m *OsqueryExtension) XXX_Size() int {
	return xxx_messageInfo_OsqueryExtension.Size(m)
}
func (m *OsqueryExtension) XXX_DiscardUnknown() {
	xxx_messageInfo_OsqueryExtension.DiscardUnknown(m)
}

var xxx_messageInfo_OsqueryExtension proto.InternalMessageInfo

func (m *OsqueryExtension) GetUuid() int64 {
	if m != nil {
		return m.Uuid
	}
	return 0
}

func (m *OsqueryExtension) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OsqueryExtension) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *OsqueryExtension) GetSdkVersion() string {
	if m != nil {
		return m.SdkVersion
	}
	return ""
}

func (m *OsqueryExtension) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *OsqueryExtension) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func init() {
	proto.RegisterType((*OsqueryExtension)(nil), "schemas.OsqueryExtension")
}

func init() { proto.RegisterFile("pb/osquery_extension.proto", fileDescriptor_cf26c5430e3b9cfb) }

var fileDescriptor_cf26c5430e3b9cfb = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2a, 0x48, 0xd2, 0xcf,
	0x2f, 0x2e, 0x2c, 0x4d, 0x2d, 0xaa, 0x8c, 0x4f, 0xad, 0x28, 0x49, 0xcd, 0x2b, 0xce, 0xcc, 0xcf,
	0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x4e, 0xce, 0x48, 0xcd, 0x4d, 0x2c, 0x56,
	0x9a, 0xcb, 0xc8, 0x25, 0xe0, 0x0f, 0x51, 0xe4, 0x0a, 0x53, 0x23, 0x24, 0xc4, 0xc5, 0x52, 0x5a,
	0x9a, 0x99, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x1c, 0x04, 0x66, 0x83, 0xc4, 0xf2, 0x12, 0x73,
	0x53, 0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x21, 0x09, 0x2e, 0xf6, 0xb2, 0xd4,
	0x22, 0x90, 0x16, 0x09, 0x66, 0xb0, 0x30, 0x8c, 0x2b, 0x24, 0xcf, 0xc5, 0x5d, 0x9c, 0x92, 0x1d,
	0x0f, 0x93, 0x65, 0x01, 0xcb, 0x72, 0x15, 0xa7, 0x64, 0x87, 0x41, 0x15, 0x08, 0x71, 0xb1, 0x14,
	0x24, 0x96, 0x64, 0x48, 0xb0, 0x42, 0x8c, 0x03, 0xb1, 0x41, 0x62, 0x25, 0x95, 0x05, 0xa9, 0x12,
	0x6c, 0x10, 0x31, 0x10, 0xdb, 0xc9, 0x28, 0xca, 0x20, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f,
	0x39, 0x3f, 0x57, 0x3f, 0x37, 0x33, 0x39, 0x3b, 0xb5, 0xc0, 0xdc, 0x0c, 0xe6, 0x2f, 0x5d, 0xb0,
	0x6f, 0x92, 0x4a, 0xd3, 0xf4, 0x0b, 0xb2, 0xd3, 0xad, 0xa1, 0x7e, 0x4a, 0x62, 0x03, 0x8b, 0x1a,
	0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xea, 0x0d, 0xc7, 0x60, 0x01, 0x01, 0x00, 0x00,
}
