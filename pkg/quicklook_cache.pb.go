// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/quicklook_cache.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Files and thumbnails within OS X's Quicklook Cache.
type QuicklookCache struct {
	// Path of file
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path"`
	// Quicklook file rowid key
	Rowid int32 `protobuf:"varint,2,opt,name=rowid,proto3" json:"rowid"`
	// Quicklook file fs_id key
	FsId string `protobuf:"bytes,3,opt,name=fs_id,json=fsId,proto3" json:"fs_id"`
	// Parsed volume ID from fs_id
	VolumeId int32 `protobuf:"varint,4,opt,name=volume_id,json=volumeId,proto3" json:"volume_id"`
	// Parsed file ID (inode) from fs_id
	Inode int32 `protobuf:"varint,5,opt,name=inode,proto3" json:"inode"`
	// Parsed version date field
	Mtime int32 `protobuf:"varint,6,opt,name=mtime,proto3" json:"mtime"`
	// Parsed version size field
	Size int64 `protobuf:"varint,7,opt,name=size,proto3" json:"size"`
	// Parsed version 'gen' field
	Label string `protobuf:"bytes,8,opt,name=label,proto3" json:"label"`
	// Number of cache hits on thumbnail
	HitCount string `protobuf:"bytes,9,opt,name=hit_count,json=hitCount,proto3" json:"hit_count"`
	// Thumbnail icon mode
	IconMode int64 `protobuf:"varint,10,opt,name=icon_mode,json=iconMode,proto3" json:"icon_mode"`
	// Path to cache data
	CachePath            string   `protobuf:"bytes,11,opt,name=cache_path,json=cachePath,proto3" json:"cache_path"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuicklookCache) Reset()         { *m = QuicklookCache{} }
func (m *QuicklookCache) String() string { return proto.CompactTextString(m) }
func (*QuicklookCache) ProtoMessage()    {}
func (*QuicklookCache) Descriptor() ([]byte, []int) {
	return fileDescriptor_051ecf563c305fde, []int{0}
}

func (m *QuicklookCache) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuicklookCache.Unmarshal(m, b)
}
func (m *QuicklookCache) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuicklookCache.Marshal(b, m, deterministic)
}
func (m *QuicklookCache) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuicklookCache.Merge(m, src)
}
func (m *QuicklookCache) XXX_Size() int {
	return xxx_messageInfo_QuicklookCache.Size(m)
}
func (m *QuicklookCache) XXX_DiscardUnknown() {
	xxx_messageInfo_QuicklookCache.DiscardUnknown(m)
}

var xxx_messageInfo_QuicklookCache proto.InternalMessageInfo

func (m *QuicklookCache) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *QuicklookCache) GetRowid() int32 {
	if m != nil {
		return m.Rowid
	}
	return 0
}

func (m *QuicklookCache) GetFsId() string {
	if m != nil {
		return m.FsId
	}
	return ""
}

func (m *QuicklookCache) GetVolumeId() int32 {
	if m != nil {
		return m.VolumeId
	}
	return 0
}

func (m *QuicklookCache) GetInode() int32 {
	if m != nil {
		return m.Inode
	}
	return 0
}

func (m *QuicklookCache) GetMtime() int32 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func (m *QuicklookCache) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *QuicklookCache) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *QuicklookCache) GetHitCount() string {
	if m != nil {
		return m.HitCount
	}
	return ""
}

func (m *QuicklookCache) GetIconMode() int64 {
	if m != nil {
		return m.IconMode
	}
	return 0
}

func (m *QuicklookCache) GetCachePath() string {
	if m != nil {
		return m.CachePath
	}
	return ""
}

func init() {
	proto.RegisterType((*QuicklookCache)(nil), "schemas.QuicklookCache")
}

func init() { proto.RegisterFile("pb/quicklook_cache.proto", fileDescriptor_051ecf563c305fde) }

var fileDescriptor_051ecf563c305fde = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x95, 0xb6, 0x69, 0x13, 0x23, 0x31, 0x18, 0x06, 0x4b, 0x08, 0x29, 0x62, 0xca, 0x42,
	0x83, 0x40, 0x82, 0x81, 0x8d, 0x4e, 0x1d, 0x90, 0x20, 0x23, 0x4b, 0x94, 0x38, 0x4e, 0x6d, 0x25,
	0x8e, 0xd3, 0xd8, 0x06, 0xc1, 0x5f, 0xe1, 0xcf, 0xa2, 0x3b, 0xd3, 0xed, 0xde, 0x77, 0x2f, 0xf7,
	0xe2, 0x47, 0xd8, 0xd4, 0x14, 0x47, 0xaf, 0x78, 0x3f, 0x18, 0xd3, 0x57, 0xbc, 0xe6, 0x52, 0x6c,
	0xa7, 0xd9, 0x38, 0x43, 0x37, 0x96, 0x4b, 0xa1, 0x6b, 0x7b, 0xf3, 0xbb, 0x20, 0xe7, 0xef, 0x27,
	0xcb, 0x0e, 0x1c, 0x94, 0x92, 0xd5, 0x54, 0x3b, 0xc9, 0xa2, 0x2c, 0xca, 0xd3, 0x12, 0x67, 0x7a,
	0x49, 0xe2, 0xd9, 0x7c, 0xa9, 0x96, 0x2d, 0xb2, 0x28, 0x8f, 0xcb, 0x20, 0xe8, 0x05, 0x89, 0x3b,
	0x5b, 0xa9, 0x96, 0x2d, 0x83, 0xb5, 0xb3, 0xfb, 0x96, 0x5e, 0x91, 0xf4, 0xd3, 0x0c, 0x5e, 0x0b,
	0x58, 0xac, 0xd0, 0x9e, 0x04, 0xb0, 0x6f, 0xe1, 0x8e, 0x1a, 0x4d, 0x2b, 0x58, 0x1c, 0xee, 0xa0,
	0x00, 0xaa, 0x9d, 0xd2, 0x82, 0xad, 0x03, 0x45, 0x01, 0xff, 0x61, 0xd5, 0x8f, 0x60, 0x9b, 0x2c,
	0xca, 0x97, 0x25, 0xce, 0xe0, 0x1c, 0xea, 0x46, 0x0c, 0x2c, 0xc1, 0xc4, 0x20, 0x20, 0x52, 0x2a,
	0x57, 0x71, 0xe3, 0x47, 0xc7, 0x52, 0xdc, 0x24, 0x52, 0xb9, 0x1d, 0x68, 0x58, 0x2a, 0x6e, 0xc6,
	0x4a, 0x43, 0x2c, 0xc1, 0x5b, 0x09, 0x80, 0x57, 0x48, 0xbe, 0x26, 0x04, 0x6b, 0xa9, 0xf0, 0xc5,
	0x67, 0xf8, 0x69, 0x8a, 0xe4, 0xad, 0x76, 0xf2, 0xe5, 0xfe, 0xe3, 0xee, 0xa0, 0x9c, 0xf4, 0xcd,
	0x96, 0x1b, 0x5d, 0x68, 0xc5, 0x7b, 0x31, 0x3d, 0x3d, 0x16, 0xc6, 0x1e, 0xbd, 0x98, 0xbf, 0x6f,
	0xb1, 0xcb, 0xc6, 0x77, 0xc5, 0xd4, 0x1f, 0x9e, 0xff, 0x1b, 0x6d, 0xd6, 0x48, 0x1f, 0xfe, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x8c, 0x81, 0xf6, 0x1b, 0x7d, 0x01, 0x00, 0x00,
}
