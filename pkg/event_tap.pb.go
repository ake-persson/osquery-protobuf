// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/event_tap.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Returns information about installed event taps.
type EventTap struct {
	// Is the Event Tap enabled
	Enabled int32 `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled"`
	// Unique ID for the Tap
	EventTapId int32 `protobuf:"varint,2,opt,name=event_tap_id,json=eventTapId,proto3" json:"event_tap_id"`
	// The mask that identifies the set of events to be observed.
	EventTapped string `protobuf:"bytes,3,opt,name=event_tapped,json=eventTapped,proto3" json:"event_tapped"`
	// The process ID of the target application
	ProcessBeingTapped int32 `protobuf:"varint,4,opt,name=process_being_tapped,json=processBeingTapped,proto3" json:"process_being_tapped"`
	// The process ID of the application that created the event tap.
	TappingProcess       int32    `protobuf:"varint,5,opt,name=tapping_process,json=tappingProcess,proto3" json:"tapping_process"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventTap) Reset()         { *m = EventTap{} }
func (m *EventTap) String() string { return proto.CompactTextString(m) }
func (*EventTap) ProtoMessage()    {}
func (*EventTap) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e1967e5afe4bc2a, []int{0}
}

func (m *EventTap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventTap.Unmarshal(m, b)
}
func (m *EventTap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventTap.Marshal(b, m, deterministic)
}
func (m *EventTap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventTap.Merge(m, src)
}
func (m *EventTap) XXX_Size() int {
	return xxx_messageInfo_EventTap.Size(m)
}
func (m *EventTap) XXX_DiscardUnknown() {
	xxx_messageInfo_EventTap.DiscardUnknown(m)
}

var xxx_messageInfo_EventTap proto.InternalMessageInfo

func (m *EventTap) GetEnabled() int32 {
	if m != nil {
		return m.Enabled
	}
	return 0
}

func (m *EventTap) GetEventTapId() int32 {
	if m != nil {
		return m.EventTapId
	}
	return 0
}

func (m *EventTap) GetEventTapped() string {
	if m != nil {
		return m.EventTapped
	}
	return ""
}

func (m *EventTap) GetProcessBeingTapped() int32 {
	if m != nil {
		return m.ProcessBeingTapped
	}
	return 0
}

func (m *EventTap) GetTappingProcess() int32 {
	if m != nil {
		return m.TappingProcess
	}
	return 0
}

func init() {
	proto.RegisterType((*EventTap)(nil), "schemas.EventTap")
}

func init() { proto.RegisterFile("pb/event_tap.proto", fileDescriptor_2e1967e5afe4bc2a) }

var fileDescriptor_2e1967e5afe4bc2a = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x3f, 0x4b, 0xc5, 0x30,
	0x14, 0xc5, 0x89, 0xfa, 0x7c, 0x1a, 0x45, 0x21, 0x38, 0x64, 0xac, 0x2e, 0x76, 0xb1, 0x29, 0x0a,
	0x3a, 0xb8, 0x09, 0x0e, 0x6e, 0x52, 0x9c, 0x5c, 0x4a, 0xfe, 0x5c, 0xdb, 0x50, 0xdb, 0x5c, 0x9b,
	0x54, 0xf0, 0xfb, 0xf9, 0xc1, 0x24, 0x21, 0x95, 0x37, 0xde, 0xfb, 0xfb, 0x9d, 0x03, 0x87, 0x32,
	0x54, 0x02, 0xbe, 0x61, 0x0a, 0x6d, 0x90, 0x58, 0xe1, 0xec, 0x82, 0x63, 0x5b, 0xaf, 0x7b, 0x18,
	0xa5, 0xbf, 0xfa, 0x25, 0xf4, 0xe8, 0x39, 0xc2, 0x37, 0x89, 0x8c, 0xd3, 0x2d, 0x4c, 0x52, 0x7d,
	0x82, 0xe1, 0xa4, 0x20, 0xe5, 0xa6, 0x59, 0x4f, 0x56, 0xd0, 0xd3, 0xff, 0x8a, 0xd6, 0x1a, 0xbe,
	0x97, 0x30, 0x85, 0x9c, 0x7c, 0x31, 0xec, 0x72, 0xc7, 0x40, 0x30, 0x7c, 0xbf, 0x20, 0xe5, 0x71,
	0x73, 0xb2, 0x1a, 0x08, 0x86, 0xd5, 0xf4, 0x02, 0x67, 0xa7, 0xc1, 0xfb, 0x56, 0x81, 0x9d, 0xba,
	0x55, 0x3d, 0x48, 0x65, 0x2c, 0xb3, 0xa7, 0x88, 0x72, 0xe2, 0x9a, 0x9e, 0x47, 0x27, 0xba, 0x99,
	0xf2, 0x4d, 0x92, 0xcf, 0xf2, 0xfb, 0x35, 0x67, 0x6e, 0xdf, 0xeb, 0xce, 0x86, 0x7e, 0x51, 0x95,
	0x76, 0xa3, 0x18, 0xad, 0x1e, 0x00, 0x1f, 0xee, 0x85, 0xf3, 0x5f, 0x0b, 0xcc, 0x3f, 0x37, 0x69,
	0xb4, 0x5a, 0x3e, 0x04, 0x0e, 0xdd, 0x63, 0x9e, 0xae, 0x0e, 0xd3, 0xf7, 0xee, 0x2f, 0x00, 0x00,
	0xff, 0xff, 0x0a, 0x3e, 0x7a, 0x0e, 0x20, 0x01, 0x00, 0x00,
}
