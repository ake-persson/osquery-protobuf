// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/video_info.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Retrieve video card information of the machine.
type VideoInfo struct {
	// The amount of bits per pixel to represent color.
	ColorDepth int32 `protobuf:"varint,1,opt,name=color_depth,json=colorDepth,proto3" json:"color_depth"`
	// The driver of the device.
	Driver string `protobuf:"bytes,2,opt,name=driver,proto3" json:"driver"`
	// The date listed on the installed driver.
	DriverDate string `protobuf:"bytes,3,opt,name=driver_date,json=driverDate,proto3" json:"driver_date"`
	// The version of the installed driver.
	DriverVersion string `protobuf:"bytes,4,opt,name=driver_version,json=driverVersion,proto3" json:"driver_version"`
	// The manufaturer of the gpu.
	Manufacturer string `protobuf:"bytes,5,opt,name=manufacturer,proto3" json:"manufacturer"`
	// The model of the gpu.
	Model string `protobuf:"bytes,6,opt,name=model,proto3" json:"model"`
	// The series of the gpu.
	Series string `protobuf:"bytes,7,opt,name=series,proto3" json:"series"`
	// The current resolution of the display.
	VideoMode            string   `protobuf:"bytes,8,opt,name=video_mode,json=videoMode,proto3" json:"video_mode"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoInfo) Reset()         { *m = VideoInfo{} }
func (m *VideoInfo) String() string { return proto.CompactTextString(m) }
func (*VideoInfo) ProtoMessage()    {}
func (*VideoInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_72de4cef7c7e92e5, []int{0}
}

func (m *VideoInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoInfo.Unmarshal(m, b)
}
func (m *VideoInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoInfo.Marshal(b, m, deterministic)
}
func (m *VideoInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoInfo.Merge(m, src)
}
func (m *VideoInfo) XXX_Size() int {
	return xxx_messageInfo_VideoInfo.Size(m)
}
func (m *VideoInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VideoInfo proto.InternalMessageInfo

func (m *VideoInfo) GetColorDepth() int32 {
	if m != nil {
		return m.ColorDepth
	}
	return 0
}

func (m *VideoInfo) GetDriver() string {
	if m != nil {
		return m.Driver
	}
	return ""
}

func (m *VideoInfo) GetDriverDate() string {
	if m != nil {
		return m.DriverDate
	}
	return ""
}

func (m *VideoInfo) GetDriverVersion() string {
	if m != nil {
		return m.DriverVersion
	}
	return ""
}

func (m *VideoInfo) GetManufacturer() string {
	if m != nil {
		return m.Manufacturer
	}
	return ""
}

func (m *VideoInfo) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *VideoInfo) GetSeries() string {
	if m != nil {
		return m.Series
	}
	return ""
}

func (m *VideoInfo) GetVideoMode() string {
	if m != nil {
		return m.VideoMode
	}
	return ""
}

func init() {
	proto.RegisterType((*VideoInfo)(nil), "schemas.VideoInfo")
}

func init() { proto.RegisterFile("pb/video_info.proto", fileDescriptor_72de4cef7c7e92e5) }

var fileDescriptor_72de4cef7c7e92e5 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x3d, 0x4b, 0xc4, 0x40,
	0x10, 0x86, 0x89, 0x9a, 0x9c, 0x19, 0x3f, 0x8a, 0x55, 0x64, 0x1b, 0xf1, 0x38, 0x10, 0xae, 0xf1,
	0x22, 0x0a, 0x5a, 0xd8, 0xc9, 0x35, 0x16, 0x36, 0x57, 0x5c, 0x61, 0x13, 0x92, 0xec, 0xe4, 0xb2,
	0xdc, 0x25, 0xb3, 0xee, 0x47, 0xc0, 0x1f, 0x2f, 0xc8, 0xee, 0xa6, 0xb1, 0xdb, 0xf7, 0x79, 0x9f,
	0x85, 0x99, 0x81, 0x2b, 0x55, 0x17, 0xa3, 0x14, 0x48, 0xa5, 0x1c, 0x5a, 0x5a, 0x29, 0x4d, 0x96,
	0xd8, 0xcc, 0x34, 0x1d, 0xf6, 0x95, 0x59, 0xfc, 0x26, 0x90, 0x6f, 0x7d, 0xfb, 0x31, 0xb4, 0xc4,
	0xee, 0xe0, 0xac, 0xa1, 0x03, 0xe9, 0x52, 0xa0, 0xb2, 0x1d, 0x4f, 0xe6, 0xc9, 0x32, 0xdd, 0x40,
	0x40, 0x6b, 0x4f, 0xd8, 0x0d, 0x64, 0x42, 0xcb, 0x11, 0x35, 0x3f, 0x9a, 0x27, 0xcb, 0x7c, 0x33,
	0x25, 0xff, 0x31, 0xbe, 0x4a, 0x51, 0x59, 0xe4, 0xc7, 0xa1, 0x84, 0x88, 0xd6, 0x95, 0x45, 0x76,
	0x0f, 0x97, 0x93, 0x30, 0xa2, 0x36, 0x92, 0x06, 0x7e, 0x12, 0x9c, 0x8b, 0x48, 0xb7, 0x11, 0xb2,
	0x05, 0x9c, 0xf7, 0xd5, 0xe0, 0xda, 0xaa, 0xb1, 0x4e, 0xa3, 0xe6, 0x69, 0x90, 0xfe, 0x31, 0x76,
	0x0d, 0x69, 0x4f, 0x02, 0x0f, 0x3c, 0x0b, 0x65, 0x0c, 0x7e, 0x32, 0x83, 0x5a, 0xa2, 0xe1, 0xb3,
	0x38, 0x59, 0x4c, 0xec, 0x16, 0x20, 0x6e, 0xef, 0x35, 0x7e, 0x1a, 0xba, 0x3c, 0x90, 0x4f, 0x12,
	0xf8, 0xfe, 0xf4, 0xf5, 0xb8, 0x93, 0xb6, 0x73, 0xf5, 0xaa, 0xa1, 0xbe, 0xe8, 0x65, 0xb3, 0x47,
	0xf5, 0xfa, 0x52, 0x90, 0xf9, 0x76, 0xa8, 0x7f, 0x1e, 0xc2, 0xb5, 0x6a, 0xd7, 0x16, 0x6a, 0xbf,
	0x7b, 0x9b, 0x6e, 0x56, 0x67, 0x81, 0x3e, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x39, 0x62, 0xcd,
	0xb2, 0x5a, 0x01, 0x00, 0x00,
}
