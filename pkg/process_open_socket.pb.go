// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/process_open_socket.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Processes which have open network sockets on the system.
type ProcessOpenSocket struct {
	// Process (or thread) ID
	Pid int32 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid"`
	// Socket file descriptor number
	Fd int64 `protobuf:"varint,2,opt,name=fd,proto3" json:"fd"`
	// Socket handle or inode number
	Socket int64 `protobuf:"varint,3,opt,name=socket,proto3" json:"socket"`
	// Network protocol (IPv4
	Family int32 `protobuf:"varint,4,opt,name=family,proto3" json:"family"`
	// Transport protocol (TCP/UDP)
	Protocol int32 `protobuf:"varint,5,opt,name=protocol,proto3" json:"protocol"`
	// Socket local address
	LocalAddress string `protobuf:"bytes,6,opt,name=local_address,json=localAddress,proto3" json:"local_address"`
	// Socket remote address
	RemoteAddress string `protobuf:"bytes,7,opt,name=remote_address,json=remoteAddress,proto3" json:"remote_address"`
	// Socket local port
	LocalPort int32 `protobuf:"varint,8,opt,name=local_port,json=localPort,proto3" json:"local_port"`
	// Socket remote port
	RemotePort int32 `protobuf:"varint,9,opt,name=remote_port,json=remotePort,proto3" json:"remote_port"`
	// For UNIX sockets (family=AF_UNIX)
	Path string `protobuf:"bytes,10,opt,name=path,proto3" json:"path"`
	// TCP socket state
	State string `protobuf:"bytes,11,opt,name=state,proto3" json:"state"`
	// The inode number of the network namespace
	NetNamespace         string   `protobuf:"bytes,12,opt,name=net_namespace,json=netNamespace,proto3" json:"net_namespace"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcessOpenSocket) Reset()         { *m = ProcessOpenSocket{} }
func (m *ProcessOpenSocket) String() string { return proto.CompactTextString(m) }
func (*ProcessOpenSocket) ProtoMessage()    {}
func (*ProcessOpenSocket) Descriptor() ([]byte, []int) {
	return fileDescriptor_f62e4403e997c3db, []int{0}
}

func (m *ProcessOpenSocket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessOpenSocket.Unmarshal(m, b)
}
func (m *ProcessOpenSocket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessOpenSocket.Marshal(b, m, deterministic)
}
func (m *ProcessOpenSocket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessOpenSocket.Merge(m, src)
}
func (m *ProcessOpenSocket) XXX_Size() int {
	return xxx_messageInfo_ProcessOpenSocket.Size(m)
}
func (m *ProcessOpenSocket) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessOpenSocket.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessOpenSocket proto.InternalMessageInfo

func (m *ProcessOpenSocket) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *ProcessOpenSocket) GetFd() int64 {
	if m != nil {
		return m.Fd
	}
	return 0
}

func (m *ProcessOpenSocket) GetSocket() int64 {
	if m != nil {
		return m.Socket
	}
	return 0
}

func (m *ProcessOpenSocket) GetFamily() int32 {
	if m != nil {
		return m.Family
	}
	return 0
}

func (m *ProcessOpenSocket) GetProtocol() int32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *ProcessOpenSocket) GetLocalAddress() string {
	if m != nil {
		return m.LocalAddress
	}
	return ""
}

func (m *ProcessOpenSocket) GetRemoteAddress() string {
	if m != nil {
		return m.RemoteAddress
	}
	return ""
}

func (m *ProcessOpenSocket) GetLocalPort() int32 {
	if m != nil {
		return m.LocalPort
	}
	return 0
}

func (m *ProcessOpenSocket) GetRemotePort() int32 {
	if m != nil {
		return m.RemotePort
	}
	return 0
}

func (m *ProcessOpenSocket) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ProcessOpenSocket) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *ProcessOpenSocket) GetNetNamespace() string {
	if m != nil {
		return m.NetNamespace
	}
	return ""
}

func init() {
	proto.RegisterType((*ProcessOpenSocket)(nil), "schemas.ProcessOpenSocket")
}

func init() { proto.RegisterFile("pb/process_open_socket.proto", fileDescriptor_f62e4403e997c3db) }

var fileDescriptor_f62e4403e997c3db = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x91, 0xcb, 0x4e, 0xf3, 0x30,
	0x10, 0x85, 0x95, 0xf4, 0x3e, 0xbd, 0xe8, 0xff, 0x2d, 0x84, 0x2c, 0x04, 0xa2, 0x02, 0x21, 0x75,
	0x43, 0x83, 0x40, 0x82, 0x05, 0x2b, 0x78, 0x00, 0xa8, 0xca, 0x8e, 0x4d, 0xe4, 0x38, 0x93, 0x36,
	0x6a, 0x1c, 0x1b, 0xdb, 0x5d, 0xf4, 0x5d, 0x79, 0x18, 0x94, 0x71, 0xda, 0xdd, 0x9c, 0xef, 0x9c,
	0x9c, 0x19, 0xc5, 0x70, 0x69, 0xb2, 0xc4, 0x58, 0x2d, 0xd1, 0xb9, 0x54, 0x1b, 0xac, 0x53, 0xa7,
	0xe5, 0x0e, 0xfd, 0xd2, 0x58, 0xed, 0x35, 0x1b, 0x38, 0xb9, 0x45, 0x25, 0xdc, 0xcd, 0x6f, 0x0c,
	0xff, 0x57, 0x21, 0xf6, 0x69, 0xb0, 0xfe, 0xa2, 0x10, 0xfb, 0x07, 0x1d, 0x53, 0xe6, 0x3c, 0x9a,
	0x47, 0x8b, 0xde, 0xba, 0x19, 0xd9, 0x0c, 0xe2, 0x22, 0xe7, 0xf1, 0x3c, 0x5a, 0x74, 0xd6, 0x71,
	0x91, 0xb3, 0x73, 0xe8, 0x87, 0x42, 0xde, 0x21, 0xd6, 0xaa, 0x86, 0x17, 0x42, 0x95, 0xd5, 0x81,
	0x77, 0xe9, 0xe3, 0x56, 0xb1, 0x0b, 0x18, 0xd2, 0x66, 0xa9, 0x2b, 0xde, 0x23, 0xe7, 0xa4, 0xd9,
	0x2d, 0x4c, 0x2b, 0x2d, 0x45, 0x95, 0x8a, 0x3c, 0xb7, 0xe8, 0x1c, 0xef, 0xcf, 0xa3, 0xc5, 0x68,
	0x3d, 0x21, 0xf8, 0x16, 0x18, 0xbb, 0x83, 0x99, 0x45, 0xa5, 0x3d, 0x9e, 0x52, 0x03, 0x4a, 0x4d,
	0x03, 0x3d, 0xc6, 0xae, 0x00, 0x42, 0x97, 0xd1, 0xd6, 0xf3, 0x21, 0x6d, 0x1a, 0x11, 0x59, 0x69,
	0xeb, 0xd9, 0x35, 0x8c, 0xdb, 0x16, 0xf2, 0x47, 0xe4, 0x43, 0x40, 0x14, 0x60, 0xd0, 0x35, 0xc2,
	0x6f, 0x39, 0x50, 0x39, 0xcd, 0xec, 0x0c, 0x7a, 0xce, 0x0b, 0x8f, 0x7c, 0x4c, 0x30, 0x88, 0xe6,
	0xea, 0x1a, 0x7d, 0x5a, 0x0b, 0x85, 0xce, 0x08, 0x89, 0x7c, 0x12, 0xae, 0xae, 0xd1, 0x7f, 0x1c,
	0xd9, 0xfb, 0xe3, 0xf7, 0xc3, 0xa6, 0xf4, 0xdb, 0x7d, 0xb6, 0x94, 0x5a, 0x25, 0xaa, 0x94, 0x3b,
	0x34, 0x2f, 0xcf, 0x89, 0x76, 0x3f, 0x7b, 0xb4, 0x87, 0x7b, 0xfa, 0x05, 0xd9, 0xbe, 0x48, 0xcc,
	0x6e, 0xf3, 0xda, 0x3e, 0x49, 0xd6, 0x27, 0xfa, 0xf4, 0x17, 0x00, 0x00, 0xff, 0xff, 0x91, 0xad,
	0xff, 0x1c, 0xc2, 0x01, 0x00, 0x00,
}
