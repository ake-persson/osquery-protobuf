// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/memory_array.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Data associated with collection of memory devices that operate to form a memory address.
type MemoryArray struct {
	// Handle
	Handle string `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle"`
	// Physical location of the memory array
	Location string `protobuf:"bytes,2,opt,name=location,proto3" json:"location"`
	// Function for which the array is used
	Use string `protobuf:"bytes,3,opt,name=use,proto3" json:"use"`
	// Maximum capacity of array in gigabytes
	MaxCapacity int32 `protobuf:"varint,4,opt,name=max_capacity,json=maxCapacity,proto3" json:"max_capacity"`
	// Number of memory devices on array
	NumberMemoryDevices  int32    `protobuf:"varint,5,opt,name=number_memory_devices,json=numberMemoryDevices,proto3" json:"number_memory_devices"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemoryArray) Reset()         { *m = MemoryArray{} }
func (m *MemoryArray) String() string { return proto.CompactTextString(m) }
func (*MemoryArray) ProtoMessage()    {}
func (*MemoryArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_486777f68515fbec, []int{0}
}

func (m *MemoryArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemoryArray.Unmarshal(m, b)
}
func (m *MemoryArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemoryArray.Marshal(b, m, deterministic)
}
func (m *MemoryArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemoryArray.Merge(m, src)
}
func (m *MemoryArray) XXX_Size() int {
	return xxx_messageInfo_MemoryArray.Size(m)
}
func (m *MemoryArray) XXX_DiscardUnknown() {
	xxx_messageInfo_MemoryArray.DiscardUnknown(m)
}

var xxx_messageInfo_MemoryArray proto.InternalMessageInfo

func (m *MemoryArray) GetHandle() string {
	if m != nil {
		return m.Handle
	}
	return ""
}

func (m *MemoryArray) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *MemoryArray) GetUse() string {
	if m != nil {
		return m.Use
	}
	return ""
}

func (m *MemoryArray) GetMaxCapacity() int32 {
	if m != nil {
		return m.MaxCapacity
	}
	return 0
}

func (m *MemoryArray) GetNumberMemoryDevices() int32 {
	if m != nil {
		return m.NumberMemoryDevices
	}
	return 0
}

func init() {
	proto.RegisterType((*MemoryArray)(nil), "schemas.MemoryArray")
}

func init() { proto.RegisterFile("pb/memory_array.proto", fileDescriptor_486777f68515fbec) }

var fileDescriptor_486777f68515fbec = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8f, 0xbb, 0x4e, 0x03, 0x31,
	0x10, 0x45, 0xb5, 0x84, 0x04, 0x70, 0x28, 0x90, 0x51, 0x90, 0x45, 0x15, 0xa8, 0xd2, 0x90, 0x45,
	0x41, 0x82, 0x82, 0x8a, 0x47, 0x4b, 0x93, 0x92, 0x66, 0x35, 0x76, 0x86, 0xac, 0x95, 0xcc, 0xda,
	0xf8, 0x81, 0xe2, 0x5f, 0xe2, 0x2b, 0xd1, 0x7a, 0x2d, 0xba, 0xb9, 0xe7, 0x4c, 0x71, 0x2f, 0x9b,
	0x59, 0x59, 0x13, 0x92, 0x71, 0xa9, 0x01, 0xe7, 0x20, 0x2d, 0xad, 0x33, 0xc1, 0xf0, 0x13, 0xaf,
	0x5a, 0x24, 0xf0, 0xb7, 0xbf, 0x15, 0x9b, 0x7e, 0x64, 0xff, 0xd2, 0x6b, 0x7e, 0xc5, 0x26, 0x2d,
	0x74, 0x9b, 0x3d, 0x8a, 0x6a, 0x5e, 0x2d, 0xce, 0xd6, 0x25, 0xf1, 0x6b, 0x76, 0xba, 0x37, 0x0a,
	0x82, 0x36, 0x9d, 0x38, 0xca, 0xe6, 0x3f, 0xf3, 0x0b, 0x36, 0x8a, 0x1e, 0xc5, 0x28, 0xe3, 0xfe,
	0xe4, 0x37, 0xec, 0x9c, 0xe0, 0xd0, 0x28, 0xb0, 0xa0, 0x74, 0x48, 0xe2, 0x78, 0x5e, 0x2d, 0xc6,
	0xeb, 0x29, 0xc1, 0xe1, 0xad, 0x20, 0xbe, 0x62, 0xb3, 0x2e, 0x92, 0x44, 0xd7, 0x94, 0x7a, 0x1b,
	0xfc, 0xd1, 0x0a, 0xbd, 0x18, 0xe7, 0xdf, 0xcb, 0x41, 0x0e, 0xd5, 0xde, 0x07, 0xf5, 0xba, 0xfa,
	0xbc, 0xdf, 0xea, 0xd0, 0x46, 0xb9, 0x54, 0x86, 0x6a, 0xd2, 0x6a, 0x87, 0xf6, 0xe9, 0xb1, 0x36,
	0xfe, 0x3b, 0xa2, 0x4b, 0x77, 0x79, 0x9a, 0x8c, 0x5f, 0xb5, 0xdd, 0x6d, 0x9f, 0xcb, 0x40, 0x39,
	0xc9, 0xf4, 0xe1, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x6f, 0x7d, 0x3b, 0xe2, 0x09, 0x01, 0x00, 0x00,
}
