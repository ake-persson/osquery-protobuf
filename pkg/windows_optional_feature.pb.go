// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/windows_optional_feature.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Lists names and installation states of windows features. Maps to Win32_OptionalFeature WMI class.
type WindowsOptionalFeature struct {
	// Name of the feature
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// Caption of feature in settings UI
	Caption string `protobuf:"bytes,2,opt,name=caption,proto3" json:"caption"`
	// Installation state value. 1 == Enabled
	State int32 `protobuf:"varint,3,opt,name=state,proto3" json:"state"`
	// Installation state name. 'Enabled'
	Statename            string   `protobuf:"bytes,4,opt,name=statename,proto3" json:"statename"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WindowsOptionalFeature) Reset()         { *m = WindowsOptionalFeature{} }
func (m *WindowsOptionalFeature) String() string { return proto.CompactTextString(m) }
func (*WindowsOptionalFeature) ProtoMessage()    {}
func (*WindowsOptionalFeature) Descriptor() ([]byte, []int) {
	return fileDescriptor_36add6bf59ef5797, []int{0}
}

func (m *WindowsOptionalFeature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WindowsOptionalFeature.Unmarshal(m, b)
}
func (m *WindowsOptionalFeature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WindowsOptionalFeature.Marshal(b, m, deterministic)
}
func (m *WindowsOptionalFeature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WindowsOptionalFeature.Merge(m, src)
}
func (m *WindowsOptionalFeature) XXX_Size() int {
	return xxx_messageInfo_WindowsOptionalFeature.Size(m)
}
func (m *WindowsOptionalFeature) XXX_DiscardUnknown() {
	xxx_messageInfo_WindowsOptionalFeature.DiscardUnknown(m)
}

var xxx_messageInfo_WindowsOptionalFeature proto.InternalMessageInfo

func (m *WindowsOptionalFeature) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WindowsOptionalFeature) GetCaption() string {
	if m != nil {
		return m.Caption
	}
	return ""
}

func (m *WindowsOptionalFeature) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *WindowsOptionalFeature) GetStatename() string {
	if m != nil {
		return m.Statename
	}
	return ""
}

func init() {
	proto.RegisterType((*WindowsOptionalFeature)(nil), "schemas.WindowsOptionalFeature")
}

func init() { proto.RegisterFile("pb/windows_optional_feature.proto", fileDescriptor_36add6bf59ef5797) }

var fileDescriptor_36add6bf59ef5797 = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2c, 0x48, 0xd2, 0x2f,
	0xcf, 0xcc, 0x4b, 0xc9, 0x2f, 0x2f, 0x8e, 0xcf, 0x2f, 0x28, 0xc9, 0xcc, 0xcf, 0x4b, 0xcc, 0x89,
	0x4f, 0x4b, 0x4d, 0x2c, 0x29, 0x2d, 0x4a, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f,
	0x4e, 0xce, 0x48, 0xcd, 0x4d, 0x2c, 0x56, 0xaa, 0xe2, 0x12, 0x0b, 0x87, 0x28, 0xf5, 0x87, 0xaa,
	0x74, 0x83, 0x28, 0x14, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4,
	0xe0, 0x0c, 0x02, 0xb3, 0x85, 0x24, 0xb8, 0xd8, 0x93, 0x13, 0xc1, 0xea, 0x24, 0x98, 0xc0, 0xc2,
	0x30, 0xae, 0x90, 0x08, 0x17, 0x6b, 0x71, 0x49, 0x62, 0x49, 0xaa, 0x04, 0xb3, 0x02, 0xa3, 0x06,
	0x6b, 0x10, 0x84, 0x23, 0x24, 0xc3, 0xc5, 0x09, 0x66, 0x80, 0x0d, 0x62, 0x01, 0xeb, 0x40, 0x08,
	0x38, 0x19, 0x45, 0x19, 0xa4, 0x67, 0x96, 0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0xe7,
	0x66, 0x26, 0x67, 0xa7, 0x16, 0x98, 0x9b, 0xe9, 0xe7, 0x17, 0x17, 0x96, 0xa6, 0x16, 0x55, 0xea,
	0x82, 0x5d, 0x9a, 0x54, 0x9a, 0xa6, 0x5f, 0x90, 0x9d, 0x6e, 0x0d, 0x75, 0x6f, 0x12, 0x1b, 0x58,
	0xd4, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xb8, 0xcf, 0x91, 0x1f, 0xe4, 0x00, 0x00, 0x00,
}
