// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/mount.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// System mounted devices and filesystems (not process specific).
type Mount struct {
	// Mounted device
	Device string `protobuf:"bytes,1,opt,name=device,proto3" json:"device"`
	// Mounted device alias
	DeviceAlias string `protobuf:"bytes,2,opt,name=device_alias,json=deviceAlias,proto3" json:"device_alias"`
	// Mounted device path
	Path string `protobuf:"bytes,3,opt,name=path,proto3" json:"path"`
	// Mounted device type
	Type string `protobuf:"bytes,4,opt,name=type,proto3" json:"type"`
	// Block size in bytes
	BlocksSize int64 `protobuf:"varint,5,opt,name=blocks_size,json=blocksSize,proto3" json:"blocks_size"`
	// Mounted device used blocks
	Blocks int64 `protobuf:"varint,6,opt,name=blocks,proto3" json:"blocks"`
	// Mounted device free blocks
	BlocksFree int64 `protobuf:"varint,7,opt,name=blocks_free,json=blocksFree,proto3" json:"blocks_free"`
	// Mounted device available blocks
	BlocksAvailable int64 `protobuf:"varint,8,opt,name=blocks_available,json=blocksAvailable,proto3" json:"blocks_available"`
	// Mounted device used inodes
	Inodes int64 `protobuf:"varint,9,opt,name=inodes,proto3" json:"inodes"`
	// Mounted device free inodes
	InodesFree int64 `protobuf:"varint,10,opt,name=inodes_free,json=inodesFree,proto3" json:"inodes_free"`
	// Mounted device flags
	Flags                string   `protobuf:"bytes,11,opt,name=flags,proto3" json:"flags"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mount) Reset()         { *m = Mount{} }
func (m *Mount) String() string { return proto.CompactTextString(m) }
func (*Mount) ProtoMessage()    {}
func (*Mount) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b8a17cbc0807f1, []int{0}
}

func (m *Mount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mount.Unmarshal(m, b)
}
func (m *Mount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mount.Marshal(b, m, deterministic)
}
func (m *Mount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mount.Merge(m, src)
}
func (m *Mount) XXX_Size() int {
	return xxx_messageInfo_Mount.Size(m)
}
func (m *Mount) XXX_DiscardUnknown() {
	xxx_messageInfo_Mount.DiscardUnknown(m)
}

var xxx_messageInfo_Mount proto.InternalMessageInfo

func (m *Mount) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *Mount) GetDeviceAlias() string {
	if m != nil {
		return m.DeviceAlias
	}
	return ""
}

func (m *Mount) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Mount) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Mount) GetBlocksSize() int64 {
	if m != nil {
		return m.BlocksSize
	}
	return 0
}

func (m *Mount) GetBlocks() int64 {
	if m != nil {
		return m.Blocks
	}
	return 0
}

func (m *Mount) GetBlocksFree() int64 {
	if m != nil {
		return m.BlocksFree
	}
	return 0
}

func (m *Mount) GetBlocksAvailable() int64 {
	if m != nil {
		return m.BlocksAvailable
	}
	return 0
}

func (m *Mount) GetInodes() int64 {
	if m != nil {
		return m.Inodes
	}
	return 0
}

func (m *Mount) GetInodesFree() int64 {
	if m != nil {
		return m.InodesFree
	}
	return 0
}

func (m *Mount) GetFlags() string {
	if m != nil {
		return m.Flags
	}
	return ""
}

func init() {
	proto.RegisterType((*Mount)(nil), "schemas.Mount")
}

func init() { proto.RegisterFile("pb/mount.proto", fileDescriptor_b2b8a17cbc0807f1) }

var fileDescriptor_b2b8a17cbc0807f1 = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x31, 0x4f, 0xfb, 0x30,
	0x10, 0xc5, 0x95, 0xb6, 0x49, 0xff, 0x75, 0xfe, 0x02, 0x64, 0x21, 0x74, 0x1b, 0x85, 0xa9, 0x0c,
	0x34, 0x08, 0x24, 0x18, 0x98, 0xca, 0xc0, 0xc6, 0x52, 0x36, 0x96, 0xca, 0x4e, 0x2f, 0x89, 0x95,
	0xa4, 0x36, 0xb1, 0x53, 0xa9, 0xfd, 0x70, 0x7c, 0x36, 0x64, 0x5f, 0x90, 0xba, 0xbd, 0xf7, 0x7b,
	0x77, 0x7a, 0xf6, 0xb1, 0x33, 0x23, 0xb3, 0x56, 0xf7, 0x3b, 0xb7, 0x34, 0x9d, 0x76, 0x9a, 0x4f,
	0x6d, 0x5e, 0x61, 0x2b, 0xec, 0xed, 0xcf, 0x88, 0xc5, 0x1f, 0x3e, 0xe0, 0x57, 0x2c, 0xd9, 0xe2,
	0x5e, 0xe5, 0x08, 0xd1, 0x3c, 0x5a, 0xcc, 0xd6, 0x83, 0xe3, 0x37, 0xec, 0x3f, 0xa9, 0x8d, 0x68,
	0x94, 0xb0, 0x30, 0x0a, 0x69, 0x4a, 0x6c, 0xe5, 0x11, 0xe7, 0x6c, 0x62, 0x84, 0xab, 0x60, 0x1c,
	0xa2, 0xa0, 0x3d, 0x73, 0x07, 0x83, 0x30, 0x21, 0xe6, 0x35, 0xbf, 0x66, 0xa9, 0x6c, 0x74, 0x5e,
	0xdb, 0x8d, 0x55, 0x47, 0x84, 0x78, 0x1e, 0x2d, 0xc6, 0x6b, 0x46, 0xe8, 0x53, 0x1d, 0xd1, 0xbf,
	0x81, 0x1c, 0x24, 0x21, 0x1b, 0xdc, 0xc9, 0x62, 0xd1, 0x21, 0xc2, 0xf4, 0x74, 0xf1, 0xbd, 0x43,
	0xe4, 0x77, 0xec, 0x62, 0x18, 0x10, 0x7b, 0xa1, 0x1a, 0x21, 0x1b, 0x84, 0x7f, 0x61, 0xea, 0x9c,
	0xf8, 0xea, 0x0f, 0xfb, 0x0e, 0xb5, 0xd3, 0x5b, 0xb4, 0x30, 0xa3, 0x0e, 0x72, 0xbe, 0x83, 0x14,
	0x75, 0x30, 0xea, 0x20, 0x14, 0x3a, 0x2e, 0x59, 0x5c, 0x34, 0xa2, 0xb4, 0x90, 0x86, 0x2f, 0x91,
	0x79, 0x7b, 0xfc, 0x7a, 0x28, 0x95, 0xab, 0x7a, 0xb9, 0xcc, 0x75, 0x9b, 0xb5, 0x2a, 0xaf, 0xd1,
	0xbc, 0x3c, 0x67, 0xda, 0x7e, 0xf7, 0xd8, 0x1d, 0xee, 0xc3, 0xb9, 0x65, 0x5f, 0x64, 0xa6, 0x2e,
	0x5f, 0x87, 0xa3, 0xcb, 0x24, 0xd0, 0xa7, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf1, 0x9b, 0x30,
	0x8c, 0x96, 0x01, 0x00, 0x00,
}
