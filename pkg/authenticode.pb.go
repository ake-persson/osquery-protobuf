// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/authenticode.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// File (executable, bundle, installer, disk) code signing status.
type Authenticode struct {
	// Must provide a path or directory
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path"`
	// The original program name that the publisher has signed
	OriginalProgramName string `protobuf:"bytes,2,opt,name=original_program_name,json=originalProgramName,proto3" json:"original_program_name"`
	// The certificate serial number
	SerialNumber string `protobuf:"bytes,3,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number"`
	// The certificate issuer name
	IssuerName string `protobuf:"bytes,4,opt,name=issuer_name,json=issuerName,proto3" json:"issuer_name"`
	// The certificate subject name
	SubjectName string `protobuf:"bytes,5,opt,name=subject_name,json=subjectName,proto3" json:"subject_name"`
	// The signature check result
	Result               string   `protobuf:"bytes,6,opt,name=result,proto3" json:"result"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Authenticode) Reset()         { *m = Authenticode{} }
func (m *Authenticode) String() string { return proto.CompactTextString(m) }
func (*Authenticode) ProtoMessage()    {}
func (*Authenticode) Descriptor() ([]byte, []int) {
	return fileDescriptor_4309116b3affb512, []int{0}
}

func (m *Authenticode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Authenticode.Unmarshal(m, b)
}
func (m *Authenticode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Authenticode.Marshal(b, m, deterministic)
}
func (m *Authenticode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Authenticode.Merge(m, src)
}
func (m *Authenticode) XXX_Size() int {
	return xxx_messageInfo_Authenticode.Size(m)
}
func (m *Authenticode) XXX_DiscardUnknown() {
	xxx_messageInfo_Authenticode.DiscardUnknown(m)
}

var xxx_messageInfo_Authenticode proto.InternalMessageInfo

func (m *Authenticode) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Authenticode) GetOriginalProgramName() string {
	if m != nil {
		return m.OriginalProgramName
	}
	return ""
}

func (m *Authenticode) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *Authenticode) GetIssuerName() string {
	if m != nil {
		return m.IssuerName
	}
	return ""
}

func (m *Authenticode) GetSubjectName() string {
	if m != nil {
		return m.SubjectName
	}
	return ""
}

func (m *Authenticode) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*Authenticode)(nil), "schemas.Authenticode")
}

func init() { proto.RegisterFile("pb/authenticode.proto", fileDescriptor_4309116b3affb512) }

var fileDescriptor_4309116b3affb512 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x3d, 0x4e, 0xc4, 0x30,
	0x10, 0x46, 0x15, 0x58, 0x82, 0x98, 0x0d, 0x8d, 0xd1, 0xa2, 0x74, 0xfc, 0x35, 0x34, 0x6c, 0xd0,
	0x22, 0x41, 0x41, 0x05, 0x07, 0x58, 0x21, 0x4a, 0x9a, 0xc8, 0x36, 0x43, 0x62, 0x36, 0xfe, 0x61,
	0x6c, 0x17, 0x9c, 0x94, 0xeb, 0x20, 0x8d, 0x83, 0x44, 0x67, 0xbf, 0xf7, 0x34, 0xc5, 0x07, 0xab,
	0xa0, 0x3a, 0x99, 0xd3, 0x88, 0x2e, 0x19, 0xed, 0xdf, 0x71, 0x1d, 0xc8, 0x27, 0x2f, 0x0e, 0xa3,
	0x1e, 0xd1, 0xca, 0x78, 0xf9, 0x53, 0x41, 0xf3, 0xf4, 0xcf, 0x0b, 0x01, 0x8b, 0x20, 0xd3, 0xd8,
	0x56, 0xe7, 0xd5, 0xf5, 0xd1, 0x2b, 0xbf, 0xc5, 0x06, 0x56, 0x9e, 0xcc, 0x60, 0x9c, 0x9c, 0xfa,
	0x40, 0x7e, 0x20, 0x69, 0x7b, 0x27, 0x2d, 0xb6, 0x7b, 0x1c, 0x9d, 0xfc, 0xc9, 0x97, 0xe2, 0xb6,
	0xd2, 0xa2, 0xb8, 0x82, 0xe3, 0x88, 0x64, 0xe4, 0xd4, 0xbb, 0x6c, 0x15, 0x52, 0xbb, 0xcf, 0x6d,
	0x53, 0xe0, 0x96, 0x99, 0x38, 0x83, 0xa5, 0x89, 0x31, 0x23, 0x95, 0x73, 0x0b, 0x4e, 0xa0, 0x20,
	0xbe, 0x72, 0x01, 0x4d, 0xcc, 0xea, 0x13, 0x75, 0x2a, 0xc5, 0x01, 0x17, 0xcb, 0x99, 0x71, 0x72,
	0x0a, 0x35, 0x61, 0xcc, 0x53, 0x6a, 0x6b, 0x96, 0xf3, 0xef, 0x79, 0xf3, 0x76, 0x3b, 0x98, 0x34,
	0x66, 0xb5, 0xd6, 0xde, 0x76, 0xd6, 0xe8, 0x1d, 0x86, 0x87, 0xfb, 0xce, 0xc7, 0xaf, 0x8c, 0xf4,
	0x7d, 0xc3, 0x3b, 0xa8, 0xfc, 0xd1, 0x85, 0xdd, 0xf0, 0x38, 0xaf, 0xa1, 0x6a, 0xa6, 0x77, 0xbf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x3f, 0xf3, 0x1d, 0x08, 0x36, 0x01, 0x00, 0x00,
}
