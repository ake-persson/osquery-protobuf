// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/keychain_acl.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Applications that have ACL entries in the keychain.
type KeychainAcl struct {
	// The path of the keychain
	KeychainPath string `protobuf:"bytes,1,opt,name=keychain_path,json=keychainPath,proto3" json:"keychain_path"`
	// A space delimited set of authorization attributes
	Authorizations string `protobuf:"bytes,2,opt,name=authorizations,proto3" json:"authorizations"`
	// The path of the authorized application
	Path string `protobuf:"bytes,3,opt,name=path,proto3" json:"path"`
	// The description included with the ACL entry
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description"`
	// An optional label tag that may be included with the keychain entry
	Label                string   `protobuf:"bytes,5,opt,name=label,proto3" json:"label"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeychainAcl) Reset()         { *m = KeychainAcl{} }
func (m *KeychainAcl) String() string { return proto.CompactTextString(m) }
func (*KeychainAcl) ProtoMessage()    {}
func (*KeychainAcl) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eeb9c323b0331c6, []int{0}
}

func (m *KeychainAcl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeychainAcl.Unmarshal(m, b)
}
func (m *KeychainAcl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeychainAcl.Marshal(b, m, deterministic)
}
func (m *KeychainAcl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeychainAcl.Merge(m, src)
}
func (m *KeychainAcl) XXX_Size() int {
	return xxx_messageInfo_KeychainAcl.Size(m)
}
func (m *KeychainAcl) XXX_DiscardUnknown() {
	xxx_messageInfo_KeychainAcl.DiscardUnknown(m)
}

var xxx_messageInfo_KeychainAcl proto.InternalMessageInfo

func (m *KeychainAcl) GetKeychainPath() string {
	if m != nil {
		return m.KeychainPath
	}
	return ""
}

func (m *KeychainAcl) GetAuthorizations() string {
	if m != nil {
		return m.Authorizations
	}
	return ""
}

func (m *KeychainAcl) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *KeychainAcl) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *KeychainAcl) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func init() {
	proto.RegisterType((*KeychainAcl)(nil), "schemas.KeychainAcl")
}

func init() { proto.RegisterFile("pb/keychain_acl.proto", fileDescriptor_9eeb9c323b0331c6) }

var fileDescriptor_9eeb9c323b0331c6 = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x48, 0xd2, 0xcf,
	0x4e, 0xad, 0x4c, 0xce, 0x48, 0xcc, 0xcc, 0x8b, 0x4f, 0x4c, 0xce, 0xd1, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x62, 0x2f, 0x4e, 0xce, 0x48, 0xcd, 0x4d, 0x2c, 0x56, 0x5a, 0xc6, 0xc8, 0xc5, 0xed,
	0x0d, 0x95, 0x77, 0x4c, 0xce, 0x11, 0x52, 0xe6, 0xe2, 0x85, 0x2b, 0x2f, 0x48, 0x2c, 0xc9, 0x90,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0xe2, 0x81, 0x09, 0x06, 0x24, 0x96, 0x64, 0x08, 0xa9, 0x71,
	0xf1, 0x25, 0x96, 0x96, 0x64, 0xe4, 0x17, 0x65, 0x56, 0x25, 0x96, 0x64, 0xe6, 0xe7, 0x15, 0x4b,
	0x30, 0x81, 0x55, 0xa1, 0x89, 0x0a, 0x09, 0x71, 0xb1, 0x80, 0xcd, 0x60, 0x06, 0xcb, 0x82, 0xd9,
	0x42, 0x0a, 0x5c, 0xdc, 0x29, 0xa9, 0xc5, 0xc9, 0x45, 0x99, 0x05, 0x20, 0x35, 0x12, 0x2c, 0x60,
	0x29, 0x64, 0x21, 0x21, 0x11, 0x2e, 0xd6, 0x9c, 0xc4, 0xa4, 0xd4, 0x1c, 0x09, 0x56, 0xb0, 0x1c,
	0x84, 0xe3, 0x64, 0x14, 0x65, 0x90, 0x9e, 0x59, 0x92, 0x51, 0x9a, 0xa4, 0x97, 0x9c, 0x9f, 0xab,
	0x9f, 0x9b, 0x99, 0x9c, 0x9d, 0x5a, 0x60, 0x6e, 0xa6, 0x9f, 0x5f, 0x5c, 0x58, 0x9a, 0x5a, 0x54,
	0xa9, 0x0b, 0xf6, 0x56, 0x52, 0x69, 0x9a, 0x7e, 0x41, 0x76, 0xba, 0x35, 0xd4, 0x73, 0x49, 0x6c,
	0x60, 0x51, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x65, 0x18, 0x0e, 0x98, 0x05, 0x01, 0x00,
	0x00,
}
