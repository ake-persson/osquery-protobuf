// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/etc_service.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Line-parsed /etc/services.
type EtcService struct {
	// Service name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// Service port number
	Port int32 `protobuf:"varint,2,opt,name=port,proto3" json:"port"`
	// Transport protocol (TCP/UDP)
	Protocol string `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol"`
	// Optional space separated list of other names for a service
	Aliases string `protobuf:"bytes,4,opt,name=aliases,proto3" json:"aliases"`
	// Optional comment for a service.
	Comment              string   `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EtcService) Reset()         { *m = EtcService{} }
func (m *EtcService) String() string { return proto.CompactTextString(m) }
func (*EtcService) ProtoMessage()    {}
func (*EtcService) Descriptor() ([]byte, []int) {
	return fileDescriptor_e538703de78d5623, []int{0}
}

func (m *EtcService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EtcService.Unmarshal(m, b)
}
func (m *EtcService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EtcService.Marshal(b, m, deterministic)
}
func (m *EtcService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EtcService.Merge(m, src)
}
func (m *EtcService) XXX_Size() int {
	return xxx_messageInfo_EtcService.Size(m)
}
func (m *EtcService) XXX_DiscardUnknown() {
	xxx_messageInfo_EtcService.DiscardUnknown(m)
}

var xxx_messageInfo_EtcService proto.InternalMessageInfo

func (m *EtcService) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EtcService) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *EtcService) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *EtcService) GetAliases() string {
	if m != nil {
		return m.Aliases
	}
	return ""
}

func (m *EtcService) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func init() {
	proto.RegisterType((*EtcService)(nil), "schemas.EtcService")
}

func init() { proto.RegisterFile("pb/etc_service.proto", fileDescriptor_e538703de78d5623) }

var fileDescriptor_e538703de78d5623 = []byte{
	// 193 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x48, 0xd2, 0x4f,
	0x2d, 0x49, 0x8e, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0x62, 0x2f, 0x4e, 0xce, 0x48, 0xcd, 0x4d, 0x2c, 0x56, 0x6a, 0x61, 0xe4, 0xe2, 0x72, 0x2d,
	0x49, 0x0e, 0x86, 0xc8, 0x0a, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30,
	0x6a, 0x70, 0x06, 0x81, 0xd9, 0x20, 0xb1, 0x82, 0xfc, 0xa2, 0x12, 0x09, 0x26, 0x05, 0x46, 0x0d,
	0xd6, 0x20, 0x30, 0x5b, 0x48, 0x8a, 0x8b, 0x03, 0x6c, 0x50, 0x72, 0x7e, 0x8e, 0x04, 0x33, 0x58,
	0x2d, 0x9c, 0x2f, 0x24, 0xc1, 0xc5, 0x9e, 0x98, 0x93, 0x99, 0x58, 0x9c, 0x5a, 0x2c, 0xc1, 0x02,
	0x96, 0x82, 0x71, 0x41, 0x32, 0xc9, 0xf9, 0xb9, 0xb9, 0xa9, 0x79, 0x25, 0x12, 0xac, 0x10, 0x19,
	0x28, 0xd7, 0xc9, 0x28, 0xca, 0x20, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57,
	0x3f, 0x37, 0x33, 0x39, 0x3b, 0xb5, 0xc0, 0xdc, 0x4c, 0x3f, 0xbf, 0xb8, 0xb0, 0x34, 0xb5, 0xa8,
	0x52, 0x17, 0x6c, 0x76, 0x52, 0x69, 0x9a, 0x7e, 0x41, 0x76, 0xba, 0x35, 0xd4, 0xe9, 0x49, 0x6c,
	0x60, 0x51, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5e, 0x85, 0xfc, 0x92, 0xe2, 0x00, 0x00,
	0x00,
}
