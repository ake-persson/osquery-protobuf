// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/alf.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// OS X application layer firewall (ALF) service details.
type Alf struct {
	// 1 If allow signed mode is enabled else 0
	AllowSignedEnabled int32 `protobuf:"varint,1,opt,name=allow_signed_enabled,json=allowSignedEnabled,proto3" json:"allow_signed_enabled"`
	// 1 If firewall unloading enabled else 0
	FirewallUnload int32 `protobuf:"varint,2,opt,name=firewall_unload,json=firewallUnload,proto3" json:"firewall_unload"`
	// 1 If the firewall is enabled with exceptions
	GlobalState int32 `protobuf:"varint,3,opt,name=global_state,json=globalState,proto3" json:"global_state"`
	// 1 If logging mode is enabled else 0
	LoggingEnabled int32 `protobuf:"varint,4,opt,name=logging_enabled,json=loggingEnabled,proto3" json:"logging_enabled"`
	// Firewall logging option
	LoggingOption int32 `protobuf:"varint,5,opt,name=logging_option,json=loggingOption,proto3" json:"logging_option"`
	// 1 If stealth mode is enabled else 0
	StealthEnabled int32 `protobuf:"varint,6,opt,name=stealth_enabled,json=stealthEnabled,proto3" json:"stealth_enabled"`
	// Application Layer Firewall version
	Version              string   `protobuf:"bytes,7,opt,name=version,proto3" json:"version"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Alf) Reset()         { *m = Alf{} }
func (m *Alf) String() string { return proto.CompactTextString(m) }
func (*Alf) ProtoMessage()    {}
func (*Alf) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfeaa07292b34d7, []int{0}
}

func (m *Alf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alf.Unmarshal(m, b)
}
func (m *Alf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alf.Marshal(b, m, deterministic)
}
func (m *Alf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alf.Merge(m, src)
}
func (m *Alf) XXX_Size() int {
	return xxx_messageInfo_Alf.Size(m)
}
func (m *Alf) XXX_DiscardUnknown() {
	xxx_messageInfo_Alf.DiscardUnknown(m)
}

var xxx_messageInfo_Alf proto.InternalMessageInfo

func (m *Alf) GetAllowSignedEnabled() int32 {
	if m != nil {
		return m.AllowSignedEnabled
	}
	return 0
}

func (m *Alf) GetFirewallUnload() int32 {
	if m != nil {
		return m.FirewallUnload
	}
	return 0
}

func (m *Alf) GetGlobalState() int32 {
	if m != nil {
		return m.GlobalState
	}
	return 0
}

func (m *Alf) GetLoggingEnabled() int32 {
	if m != nil {
		return m.LoggingEnabled
	}
	return 0
}

func (m *Alf) GetLoggingOption() int32 {
	if m != nil {
		return m.LoggingOption
	}
	return 0
}

func (m *Alf) GetStealthEnabled() int32 {
	if m != nil {
		return m.StealthEnabled
	}
	return 0
}

func (m *Alf) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterType((*Alf)(nil), "schemas.Alf")
}

func init() { proto.RegisterFile("pb/alf.proto", fileDescriptor_3cfeaa07292b34d7) }

var fileDescriptor_3cfeaa07292b34d7 = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x49, 0x6b, 0x1b, 0x5c, 0xab, 0x42, 0xf0, 0x90, 0x63, 0x15, 0xc4, 0x5e, 0x6c, 0x8a,
	0x82, 0x1e, 0x3c, 0x29, 0x78, 0x16, 0x5a, 0xbc, 0x78, 0x09, 0xbb, 0xc9, 0x64, 0xb3, 0x74, 0xb2,
	0xb3, 0x66, 0x37, 0x16, 0xff, 0x88, 0xbf, 0x57, 0xb2, 0xc9, 0xf6, 0x38, 0xdf, 0x7b, 0x7c, 0x03,
	0x8f, 0x2d, 0x8c, 0xc8, 0x38, 0x56, 0x6b, 0xd3, 0x92, 0xa3, 0x24, 0xb6, 0x45, 0x0d, 0x0d, 0xb7,
	0x37, 0x7f, 0x13, 0x36, 0x7d, 0xc5, 0x2a, 0xd9, 0xb0, 0x2b, 0x8e, 0x48, 0x87, 0xdc, 0x2a, 0xa9,
	0xa1, 0xcc, 0x41, 0x73, 0x81, 0x50, 0xa6, 0xd1, 0x32, 0x5a, 0xcd, 0xb6, 0x89, 0xcf, 0x76, 0x3e,
	0x7a, 0x1f, 0x92, 0xe4, 0x8e, 0x5d, 0x56, 0xaa, 0x85, 0x03, 0x47, 0xcc, 0x3b, 0x8d, 0xc4, 0xcb,
	0x74, 0xe2, 0xcb, 0x17, 0x01, 0x7f, 0x7a, 0x9a, 0x5c, 0xb3, 0x85, 0x44, 0x12, 0x1c, 0x73, 0xeb,
	0xb8, 0x83, 0x74, 0xea, 0x5b, 0x67, 0x03, 0xdb, 0xf5, 0xa8, 0x77, 0x21, 0x49, 0xa9, 0xb4, 0x3c,
	0x3e, 0x3e, 0x19, 0x5c, 0x23, 0x0e, 0x4f, 0x6f, 0x59, 0x20, 0x39, 0x19, 0xa7, 0x48, 0xa7, 0x33,
	0xdf, 0x3b, 0x1f, 0xe9, 0x87, 0x87, 0xbd, 0xcf, 0x3a, 0xe0, 0xe8, 0xea, 0xa3, 0x6f, 0x3e, 0xf8,
	0x46, 0x1c, 0x7c, 0x29, 0x8b, 0x7f, 0xa0, 0xb5, 0xbd, 0x28, 0x5e, 0x46, 0xab, 0xd3, 0x6d, 0x38,
	0xdf, 0x1e, 0xbe, 0x36, 0x52, 0xb9, 0xba, 0x13, 0xeb, 0x82, 0x9a, 0xac, 0x51, 0xc5, 0x1e, 0xcc,
	0xf3, 0x53, 0x46, 0xf6, 0xbb, 0x83, 0xf6, 0xf7, 0xde, 0xcf, 0x28, 0xba, 0x2a, 0x33, 0x7b, 0xf9,
	0x32, 0x8e, 0x29, 0xe6, 0x9e, 0x3e, 0xfe, 0x07, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x05, 0x5b, 0x93,
	0x6c, 0x01, 0x00, 0x00,
}
