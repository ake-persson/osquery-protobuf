// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/patch.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Lists all the patches applied. Note: This does not include patches applied via MSI or downloaded from Windows Update (e.g. Service Packs).
type Patch struct {
	// The name of the host the patch is installed on.
	Csname string `protobuf:"bytes,1,opt,name=csname,proto3" json:"csname"`
	// The KB ID of the patch.
	HotfixId string `protobuf:"bytes,2,opt,name=hotfix_id,json=hotfixId,proto3" json:"hotfix_id"`
	// Short description of the patch.
	Caption string `protobuf:"bytes,3,opt,name=caption,proto3" json:"caption"`
	// Fuller description of the patch.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description"`
	// Additional comments about the patch.
	FixComments string `protobuf:"bytes,5,opt,name=fix_comments,json=fixComments,proto3" json:"fix_comments"`
	// The system context in which the patch as installed.
	InstalledBy string `protobuf:"bytes,6,opt,name=installed_by,json=installedBy,proto3" json:"installed_by"`
	// Indicates when the patch was installed. Lack of a value does not indicate that the patch was not installed.
	InstallDate string `protobuf:"bytes,7,opt,name=install_date,json=installDate,proto3" json:"install_date"`
	// The date when the patch was installed.
	InstalledOn          string   `protobuf:"bytes,8,opt,name=installed_on,json=installedOn,proto3" json:"installed_on"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Patch) Reset()         { *m = Patch{} }
func (m *Patch) String() string { return proto.CompactTextString(m) }
func (*Patch) ProtoMessage()    {}
func (*Patch) Descriptor() ([]byte, []int) {
	return fileDescriptor_91db6dadee3fc1cd, []int{0}
}

func (m *Patch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Patch.Unmarshal(m, b)
}
func (m *Patch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Patch.Marshal(b, m, deterministic)
}
func (m *Patch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Patch.Merge(m, src)
}
func (m *Patch) XXX_Size() int {
	return xxx_messageInfo_Patch.Size(m)
}
func (m *Patch) XXX_DiscardUnknown() {
	xxx_messageInfo_Patch.DiscardUnknown(m)
}

var xxx_messageInfo_Patch proto.InternalMessageInfo

func (m *Patch) GetCsname() string {
	if m != nil {
		return m.Csname
	}
	return ""
}

func (m *Patch) GetHotfixId() string {
	if m != nil {
		return m.HotfixId
	}
	return ""
}

func (m *Patch) GetCaption() string {
	if m != nil {
		return m.Caption
	}
	return ""
}

func (m *Patch) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Patch) GetFixComments() string {
	if m != nil {
		return m.FixComments
	}
	return ""
}

func (m *Patch) GetInstalledBy() string {
	if m != nil {
		return m.InstalledBy
	}
	return ""
}

func (m *Patch) GetInstallDate() string {
	if m != nil {
		return m.InstallDate
	}
	return ""
}

func (m *Patch) GetInstalledOn() string {
	if m != nil {
		return m.InstalledOn
	}
	return ""
}

func init() {
	proto.RegisterType((*Patch)(nil), "schemas.Patch")
}

func init() { proto.RegisterFile("pb/patch.proto", fileDescriptor_91db6dadee3fc1cd) }

var fileDescriptor_91db6dadee3fc1cd = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xbd, 0x4f, 0xc3, 0x30,
	0x10, 0x47, 0xd5, 0x42, 0x93, 0xd6, 0x20, 0x06, 0x0f, 0xc8, 0x12, 0x4b, 0x61, 0x62, 0xa1, 0x41,
	0x20, 0xc1, 0xc0, 0x56, 0x58, 0x98, 0x40, 0x8c, 0x2c, 0x91, 0x3f, 0x2e, 0x8d, 0xd5, 0xfa, 0x83,
	0xf8, 0x22, 0x35, 0x3b, 0x7f, 0x38, 0x8a, 0x1d, 0x50, 0xc3, 0x78, 0xef, 0x3d, 0xfd, 0x86, 0x23,
	0x67, 0x5e, 0x14, 0x9e, 0xa3, 0xac, 0x57, 0xbe, 0x71, 0xe8, 0x68, 0x1e, 0x64, 0x0d, 0x86, 0x87,
	0xab, 0xef, 0x29, 0x99, 0xbd, 0xf7, 0x82, 0x9e, 0x93, 0x4c, 0x06, 0xcb, 0x0d, 0xb0, 0xc9, 0x72,
	0x72, 0xbd, 0xf8, 0x18, 0x2e, 0x7a, 0x41, 0x16, 0xb5, 0xc3, 0x4a, 0xef, 0x4b, 0xad, 0xd8, 0x34,
	0xaa, 0x79, 0x02, 0xaf, 0x8a, 0x32, 0x92, 0x4b, 0xee, 0x51, 0x3b, 0xcb, 0x8e, 0xa2, 0xfa, 0x3d,
	0xe9, 0x92, 0x9c, 0x28, 0x08, 0xb2, 0xd1, 0xc9, 0x1e, 0x47, 0x7b, 0x88, 0xe8, 0x25, 0x39, 0xed,
	0x57, 0xa5, 0x33, 0x06, 0x2c, 0x06, 0x36, 0x4b, 0x49, 0xa5, 0xf7, 0xcf, 0x03, 0xea, 0x13, 0x6d,
	0x03, 0xf2, 0xdd, 0x0e, 0x54, 0x29, 0x3a, 0x96, 0xa5, 0xe4, 0x8f, 0xad, 0xbb, 0x83, 0xa4, 0x54,
	0x1c, 0x81, 0xe5, 0xa3, 0xe4, 0x85, 0x23, 0x8c, 0x57, 0x9c, 0x65, 0xf3, 0x7f, 0x2b, 0x6f, 0x76,
	0x7d, 0xf7, 0x79, 0xbb, 0xd1, 0x58, 0xb7, 0x62, 0x25, 0x9d, 0x29, 0x8c, 0x96, 0x5b, 0xf0, 0x8f,
	0x0f, 0x85, 0x0b, 0x5f, 0x2d, 0x34, 0xdd, 0x4d, 0x7c, 0x9a, 0x68, 0xab, 0xc2, 0x6f, 0x37, 0x4f,
	0xc3, 0xeb, 0x44, 0x16, 0xe9, 0xfd, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x60, 0x36, 0xb3,
	0x5c, 0x01, 0x00, 0x00,
}
