// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/managed_policy.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The managed configuration policies from AD, MDM, MCX, etc.
type ManagedPolicy struct {
	// System or manager-chosen domain key
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain"`
	// Optional UUID assigned to policy set
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid"`
	// Policy key name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	// Policy value
	Value string `protobuf:"bytes,4,opt,name=value,proto3" json:"value"`
	// Policy applies only this user
	Username string `protobuf:"bytes,5,opt,name=username,proto3" json:"username"`
	// 1 if policy was loaded manually
	Manual               int32    `protobuf:"varint,6,opt,name=manual,proto3" json:"manual"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManagedPolicy) Reset()         { *m = ManagedPolicy{} }
func (m *ManagedPolicy) String() string { return proto.CompactTextString(m) }
func (*ManagedPolicy) ProtoMessage()    {}
func (*ManagedPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_477d0497a419dd46, []int{0}
}

func (m *ManagedPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManagedPolicy.Unmarshal(m, b)
}
func (m *ManagedPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManagedPolicy.Marshal(b, m, deterministic)
}
func (m *ManagedPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedPolicy.Merge(m, src)
}
func (m *ManagedPolicy) XXX_Size() int {
	return xxx_messageInfo_ManagedPolicy.Size(m)
}
func (m *ManagedPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedPolicy proto.InternalMessageInfo

func (m *ManagedPolicy) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *ManagedPolicy) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ManagedPolicy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ManagedPolicy) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ManagedPolicy) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ManagedPolicy) GetManual() int32 {
	if m != nil {
		return m.Manual
	}
	return 0
}

func init() {
	proto.RegisterType((*ManagedPolicy)(nil), "schemas.ManagedPolicy")
}

func init() { proto.RegisterFile("pb/managed_policy.proto", fileDescriptor_477d0497a419dd46) }

var fileDescriptor_477d0497a419dd46 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8f, 0x3f, 0x4b, 0xc5, 0x30,
	0x14, 0xc5, 0x89, 0xbe, 0x56, 0x0d, 0xb8, 0x04, 0xd1, 0xe0, 0xf4, 0x70, 0x7a, 0x8b, 0x8d, 0x28,
	0xe8, 0xe0, 0xe6, 0x2e, 0x48, 0x47, 0x17, 0xb9, 0x49, 0x63, 0x1b, 0xda, 0xfc, 0xb1, 0xe9, 0x15,
	0xfa, 0x51, 0xfc, 0xb6, 0xd2, 0xdb, 0xf2, 0xb6, 0xf3, 0xfb, 0xdd, 0x03, 0x97, 0xc3, 0x6f, 0x92,
	0x56, 0x1e, 0x02, 0xb4, 0xb6, 0xf9, 0x4a, 0x71, 0x70, 0x66, 0xae, 0xd2, 0x18, 0xa7, 0x28, 0xce,
	0xb2, 0xe9, 0xac, 0x87, 0x7c, 0xf7, 0xc7, 0xf8, 0xe5, 0xfb, 0xda, 0xf8, 0xa0, 0x82, 0xb8, 0xe6,
	0x65, 0x13, 0x3d, 0xb8, 0x20, 0xd9, 0x9e, 0x1d, 0x2e, 0xea, 0x8d, 0x84, 0xe0, 0x3b, 0x44, 0xd7,
	0xc8, 0x13, 0xb2, 0x94, 0x17, 0x17, 0xc0, 0x5b, 0x79, 0xba, 0xba, 0x25, 0x8b, 0x2b, 0x5e, 0xfc,
	0xc2, 0x80, 0x56, 0xee, 0x48, 0xae, 0x20, 0x6e, 0xf9, 0x39, 0x66, 0x3b, 0x52, 0xbb, 0xa0, 0xc3,
	0x91, 0x97, 0x8f, 0x1e, 0x02, 0xc2, 0x20, 0xcb, 0x3d, 0x3b, 0x14, 0xf5, 0x46, 0x6f, 0x8f, 0x9f,
	0x0f, 0xad, 0x9b, 0x3a, 0xd4, 0x95, 0x89, 0x5e, 0x79, 0x67, 0x7a, 0x9b, 0x5e, 0x9e, 0x55, 0xcc,
	0x3f, 0x68, 0xc7, 0xf9, 0x9e, 0x96, 0x68, 0xfc, 0x56, 0xa9, 0x6f, 0x5f, 0xb7, 0x3d, 0xba, 0x24,
	0xfb, 0xf4, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x8c, 0x2a, 0x07, 0x38, 0xfa, 0x00, 0x00, 0x00,
}
