// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/rpm_package.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// RPM packages that are currently installed on the host system.
type RpmPackage struct {
	// RPM package name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// Package version
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version"`
	// Package release
	Release string `protobuf:"bytes,3,opt,name=release,proto3" json:"release"`
	// Source RPM package name (optional)
	Source string `protobuf:"bytes,4,opt,name=source,proto3" json:"source"`
	// Package size in bytes
	Size int64 `protobuf:"varint,5,opt,name=size,proto3" json:"size"`
	// SHA1 hash of the package contents
	Sha1 string `protobuf:"bytes,6,opt,name=sha1,proto3" json:"sha1"`
	// Architecture(s) supported
	Arch string `protobuf:"bytes,7,opt,name=arch,proto3" json:"arch"`
	// Package epoch value
	Epoch int32 `protobuf:"varint,8,opt,name=epoch,proto3" json:"epoch"`
	// When the package was installed
	InstallTime          int32    `protobuf:"varint,9,opt,name=install_time,json=installTime,proto3" json:"install_time"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpmPackage) Reset()         { *m = RpmPackage{} }
func (m *RpmPackage) String() string { return proto.CompactTextString(m) }
func (*RpmPackage) ProtoMessage()    {}
func (*RpmPackage) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c9dfdb5b9d76230, []int{0}
}

func (m *RpmPackage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpmPackage.Unmarshal(m, b)
}
func (m *RpmPackage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpmPackage.Marshal(b, m, deterministic)
}
func (m *RpmPackage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpmPackage.Merge(m, src)
}
func (m *RpmPackage) XXX_Size() int {
	return xxx_messageInfo_RpmPackage.Size(m)
}
func (m *RpmPackage) XXX_DiscardUnknown() {
	xxx_messageInfo_RpmPackage.DiscardUnknown(m)
}

var xxx_messageInfo_RpmPackage proto.InternalMessageInfo

func (m *RpmPackage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RpmPackage) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *RpmPackage) GetRelease() string {
	if m != nil {
		return m.Release
	}
	return ""
}

func (m *RpmPackage) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *RpmPackage) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *RpmPackage) GetSha1() string {
	if m != nil {
		return m.Sha1
	}
	return ""
}

func (m *RpmPackage) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

func (m *RpmPackage) GetEpoch() int32 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *RpmPackage) GetInstallTime() int32 {
	if m != nil {
		return m.InstallTime
	}
	return 0
}

func init() {
	proto.RegisterType((*RpmPackage)(nil), "schemas.RpmPackage")
}

func init() { proto.RegisterFile("pb/rpm_package.proto", fileDescriptor_6c9dfdb5b9d76230) }

var fileDescriptor_6c9dfdb5b9d76230 = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x90, 0xcd, 0x4a, 0xc4, 0x30,
	0x14, 0x46, 0x89, 0x33, 0x6d, 0x9d, 0xe8, 0x2a, 0x0c, 0x72, 0x97, 0xd5, 0x55, 0x37, 0x4e, 0xfd,
	0x01, 0x5d, 0xb8, 0xf3, 0x09, 0xa4, 0xb8, 0x72, 0x33, 0xa4, 0xe1, 0xda, 0x84, 0x36, 0x4d, 0x4c,
	0x5a, 0x41, 0xdf, 0xd6, 0x37, 0x91, 0xfc, 0xcc, 0xee, 0x3b, 0xe7, 0x40, 0x02, 0x97, 0xee, 0x6d,
	0xdf, 0x3a, 0xab, 0x8f, 0x96, 0x8b, 0x91, 0x0f, 0x78, 0xb0, 0xce, 0x2c, 0x86, 0x55, 0x5e, 0x48,
	0xd4, 0xdc, 0xdf, 0xfc, 0x11, 0x4a, 0x3b, 0xab, 0xdf, 0x52, 0x65, 0x8c, 0x6e, 0x67, 0xae, 0x11,
	0x48, 0x4d, 0x9a, 0x5d, 0x17, 0x37, 0x03, 0x5a, 0x7d, 0xa3, 0xf3, 0xca, 0xcc, 0x70, 0x16, 0xf5,
	0x09, 0x43, 0x71, 0x38, 0x21, 0xf7, 0x08, 0x9b, 0x54, 0x32, 0xb2, 0x2b, 0x5a, 0x7a, 0xb3, 0x3a,
	0x81, 0xb0, 0x8d, 0x21, 0x53, 0x78, 0xdf, 0xab, 0x5f, 0x84, 0xa2, 0x26, 0xcd, 0xa6, 0x8b, 0x3b,
	0x3a, 0xc9, 0xef, 0xa1, 0x4c, 0x7f, 0x86, 0x1d, 0x1c, 0x77, 0x42, 0x42, 0x95, 0x5c, 0xd8, 0x6c,
	0x4f, 0x0b, 0xb4, 0x46, 0x48, 0x38, 0xaf, 0x49, 0x53, 0x74, 0x09, 0xd8, 0x35, 0xbd, 0x54, 0xb3,
	0x5f, 0xf8, 0x34, 0x1d, 0x17, 0xa5, 0x11, 0x76, 0x31, 0x5e, 0x64, 0xf7, 0xae, 0x34, 0xbe, 0x3e,
	0x7c, 0xdc, 0x0d, 0x6a, 0x91, 0x6b, 0x7f, 0x10, 0x46, 0xb7, 0x5a, 0x89, 0x11, 0xed, 0xf3, 0x53,
	0x6b, 0xfc, 0xd7, 0x8a, 0xee, 0xe7, 0x36, 0x5e, 0xa4, 0x5f, 0x3f, 0x5b, 0x3b, 0x0e, 0x2f, 0xf9,
	0x2e, 0x7d, 0x19, 0xed, 0xe3, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6c, 0xf6, 0x65, 0xbd, 0x3f,
	0x01, 0x00, 0x00,
}
