// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/docker_container_stat.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Docker container statistics. Queries on this table take at least one second.
type DockerContainerStat struct {
	// Container ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// Container name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// Number of processes
	Pids int32 `protobuf:"varint,3,opt,name=pids,proto3" json:"pids"`
	// UNIX time when stats were read
	Read int64 `protobuf:"varint,4,opt,name=read,proto3" json:"read"`
	// UNIX time when stats were last read
	Preread int64 `protobuf:"varint,5,opt,name=preread,proto3" json:"preread"`
	// Difference between read and preread in nano-seconds
	Interval int64 `protobuf:"varint,6,opt,name=interval,proto3" json:"interval"`
	// Total disk read bytes
	DiskRead int64 `protobuf:"varint,7,opt,name=disk_read,json=diskRead,proto3" json:"disk_read"`
	// Total disk write bytes
	DiskWrite int64 `protobuf:"varint,8,opt,name=disk_write,json=diskWrite,proto3" json:"disk_write"`
	// Number of processors
	NumProcs int32 `protobuf:"varint,9,opt,name=num_procs,json=numProcs,proto3" json:"num_procs"`
	// Total CPU usage
	CpuTotalUsage int64 `protobuf:"varint,10,opt,name=cpu_total_usage,json=cpuTotalUsage,proto3" json:"cpu_total_usage"`
	// CPU kernel mode usage
	CpuKernelmodeUsage int64 `protobuf:"varint,11,opt,name=cpu_kernelmode_usage,json=cpuKernelmodeUsage,proto3" json:"cpu_kernelmode_usage"`
	// CPU user mode usage
	CpuUsermodeUsage int64 `protobuf:"varint,12,opt,name=cpu_usermode_usage,json=cpuUsermodeUsage,proto3" json:"cpu_usermode_usage"`
	// CPU system usage
	SystemCpuUsage int64 `protobuf:"varint,13,opt,name=system_cpu_usage,json=systemCpuUsage,proto3" json:"system_cpu_usage"`
	// Online CPUs
	OnlineCpus int32 `protobuf:"varint,14,opt,name=online_cpus,json=onlineCpus,proto3" json:"online_cpus"`
	// Last read total CPU usage
	PreCpuTotalUsage int64 `protobuf:"varint,15,opt,name=pre_cpu_total_usage,json=preCpuTotalUsage,proto3" json:"pre_cpu_total_usage"`
	// Last read CPU kernel mode usage
	PreCpuKernelmodeUsage int64 `protobuf:"varint,16,opt,name=pre_cpu_kernelmode_usage,json=preCpuKernelmodeUsage,proto3" json:"pre_cpu_kernelmode_usage"`
	// Last read CPU user mode usage
	PreCpuUsermodeUsage int64 `protobuf:"varint,17,opt,name=pre_cpu_usermode_usage,json=preCpuUsermodeUsage,proto3" json:"pre_cpu_usermode_usage"`
	// Last read CPU system usage
	PreSystemCpuUsage int64 `protobuf:"varint,18,opt,name=pre_system_cpu_usage,json=preSystemCpuUsage,proto3" json:"pre_system_cpu_usage"`
	// Last read online CPUs
	PreOnlineCpus int32 `protobuf:"varint,19,opt,name=pre_online_cpus,json=preOnlineCpus,proto3" json:"pre_online_cpus"`
	// Memory usage
	MemoryUsage int64 `protobuf:"varint,20,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage"`
	// Memory maximum usage
	MemoryMaxUsage int64 `protobuf:"varint,21,opt,name=memory_max_usage,json=memoryMaxUsage,proto3" json:"memory_max_usage"`
	// Memory limit
	MemoryLimit int64 `protobuf:"varint,22,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit"`
	// Total network bytes read
	NetworkRxBytes int64 `protobuf:"varint,23,opt,name=network_rx_bytes,json=networkRxBytes,proto3" json:"network_rx_bytes"`
	// Total network bytes transmitted
	NetworkTxBytes       int64    `protobuf:"varint,24,opt,name=network_tx_bytes,json=networkTxBytes,proto3" json:"network_tx_bytes"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DockerContainerStat) Reset()         { *m = DockerContainerStat{} }
func (m *DockerContainerStat) String() string { return proto.CompactTextString(m) }
func (*DockerContainerStat) ProtoMessage()    {}
func (*DockerContainerStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_76569e2a427a21e8, []int{0}
}

func (m *DockerContainerStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DockerContainerStat.Unmarshal(m, b)
}
func (m *DockerContainerStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DockerContainerStat.Marshal(b, m, deterministic)
}
func (m *DockerContainerStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DockerContainerStat.Merge(m, src)
}
func (m *DockerContainerStat) XXX_Size() int {
	return xxx_messageInfo_DockerContainerStat.Size(m)
}
func (m *DockerContainerStat) XXX_DiscardUnknown() {
	xxx_messageInfo_DockerContainerStat.DiscardUnknown(m)
}

var xxx_messageInfo_DockerContainerStat proto.InternalMessageInfo

func (m *DockerContainerStat) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DockerContainerStat) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DockerContainerStat) GetPids() int32 {
	if m != nil {
		return m.Pids
	}
	return 0
}

func (m *DockerContainerStat) GetRead() int64 {
	if m != nil {
		return m.Read
	}
	return 0
}

func (m *DockerContainerStat) GetPreread() int64 {
	if m != nil {
		return m.Preread
	}
	return 0
}

func (m *DockerContainerStat) GetInterval() int64 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *DockerContainerStat) GetDiskRead() int64 {
	if m != nil {
		return m.DiskRead
	}
	return 0
}

func (m *DockerContainerStat) GetDiskWrite() int64 {
	if m != nil {
		return m.DiskWrite
	}
	return 0
}

func (m *DockerContainerStat) GetNumProcs() int32 {
	if m != nil {
		return m.NumProcs
	}
	return 0
}

func (m *DockerContainerStat) GetCpuTotalUsage() int64 {
	if m != nil {
		return m.CpuTotalUsage
	}
	return 0
}

func (m *DockerContainerStat) GetCpuKernelmodeUsage() int64 {
	if m != nil {
		return m.CpuKernelmodeUsage
	}
	return 0
}

func (m *DockerContainerStat) GetCpuUsermodeUsage() int64 {
	if m != nil {
		return m.CpuUsermodeUsage
	}
	return 0
}

func (m *DockerContainerStat) GetSystemCpuUsage() int64 {
	if m != nil {
		return m.SystemCpuUsage
	}
	return 0
}

func (m *DockerContainerStat) GetOnlineCpus() int32 {
	if m != nil {
		return m.OnlineCpus
	}
	return 0
}

func (m *DockerContainerStat) GetPreCpuTotalUsage() int64 {
	if m != nil {
		return m.PreCpuTotalUsage
	}
	return 0
}

func (m *DockerContainerStat) GetPreCpuKernelmodeUsage() int64 {
	if m != nil {
		return m.PreCpuKernelmodeUsage
	}
	return 0
}

func (m *DockerContainerStat) GetPreCpuUsermodeUsage() int64 {
	if m != nil {
		return m.PreCpuUsermodeUsage
	}
	return 0
}

func (m *DockerContainerStat) GetPreSystemCpuUsage() int64 {
	if m != nil {
		return m.PreSystemCpuUsage
	}
	return 0
}

func (m *DockerContainerStat) GetPreOnlineCpus() int32 {
	if m != nil {
		return m.PreOnlineCpus
	}
	return 0
}

func (m *DockerContainerStat) GetMemoryUsage() int64 {
	if m != nil {
		return m.MemoryUsage
	}
	return 0
}

func (m *DockerContainerStat) GetMemoryMaxUsage() int64 {
	if m != nil {
		return m.MemoryMaxUsage
	}
	return 0
}

func (m *DockerContainerStat) GetMemoryLimit() int64 {
	if m != nil {
		return m.MemoryLimit
	}
	return 0
}

func (m *DockerContainerStat) GetNetworkRxBytes() int64 {
	if m != nil {
		return m.NetworkRxBytes
	}
	return 0
}

func (m *DockerContainerStat) GetNetworkTxBytes() int64 {
	if m != nil {
		return m.NetworkTxBytes
	}
	return 0
}

func init() {
	proto.RegisterType((*DockerContainerStat)(nil), "schemas.DockerContainerStat")
}

func init() { proto.RegisterFile("pb/docker_container_stat.proto", fileDescriptor_76569e2a427a21e8) }

var fileDescriptor_76569e2a427a21e8 = []byte{
	// 521 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x93, 0x4b, 0x6f, 0x13, 0x3d,
	0x14, 0x86, 0x95, 0xb4, 0xcd, 0xc5, 0x69, 0x2e, 0x75, 0xd2, 0x7e, 0xd6, 0x87, 0x80, 0xc0, 0xa2,
	0xca, 0x82, 0x36, 0x15, 0x95, 0xe8, 0x82, 0x5d, 0xc3, 0x0e, 0x10, 0x28, 0x6d, 0x85, 0xc4, 0x66,
	0xe4, 0xcc, 0x1c, 0x52, 0x6b, 0xe2, 0xb1, 0xf1, 0x85, 0x26, 0x3f, 0x1e, 0x09, 0xf9, 0x78, 0x92,
	0x26, 0xed, 0xce, 0x7e, 0xce, 0xf3, 0x9e, 0xe4, 0x1d, 0xc9, 0xe4, 0x95, 0x9e, 0x8d, 0x33, 0x95,
	0xe6, 0x60, 0x92, 0x54, 0x15, 0x8e, 0x8b, 0x02, 0x4c, 0x62, 0x1d, 0x77, 0xe7, 0xda, 0x28, 0xa7,
	0x68, 0xdd, 0xa6, 0xf7, 0x20, 0xb9, 0x7d, 0xfb, 0xb7, 0x46, 0xfa, 0x9f, 0x50, 0x9c, 0xac, 0xbd,
	0x1b, 0xc7, 0x1d, 0xed, 0x90, 0xaa, 0xc8, 0x58, 0x65, 0x58, 0x19, 0x35, 0xa7, 0x55, 0x91, 0x51,
	0x4a, 0xf6, 0x0b, 0x2e, 0x81, 0x55, 0x91, 0xe0, 0x39, 0x30, 0x2d, 0x32, 0xcb, 0xf6, 0x86, 0x95,
	0xd1, 0xc1, 0x14, 0xcf, 0x81, 0x19, 0xe0, 0x19, 0xdb, 0x1f, 0x56, 0x46, 0x7b, 0x53, 0x3c, 0x53,
	0x46, 0xea, 0xda, 0x00, 0xe2, 0x03, 0xc4, 0xeb, 0x2b, 0xfd, 0x9f, 0x34, 0x44, 0xe1, 0xc0, 0xfc,
	0xe1, 0x0b, 0x56, 0xc3, 0xd1, 0xe6, 0x4e, 0x5f, 0x90, 0x66, 0x26, 0x6c, 0x9e, 0x60, 0xae, 0x1e,
	0x87, 0x01, 0x4c, 0x43, 0xf0, 0x25, 0x21, 0x38, 0x7c, 0x30, 0xc2, 0x01, 0x6b, 0xe0, 0x14, 0xf5,
	0x1f, 0x01, 0x84, 0x6c, 0xe1, 0x65, 0xa2, 0x8d, 0x4a, 0x2d, 0x6b, 0xe2, 0xdf, 0x6b, 0x14, 0x5e,
	0x7e, 0x0f, 0x77, 0x7a, 0x4a, 0xba, 0xa9, 0xf6, 0x89, 0x53, 0x8e, 0x2f, 0x12, 0x6f, 0xf9, 0x1c,
	0x18, 0xc1, 0x05, 0xed, 0x54, 0xfb, 0xdb, 0x40, 0xef, 0x02, 0xa4, 0x17, 0x64, 0x10, 0xbc, 0x1c,
	0x4c, 0x01, 0x0b, 0xa9, 0x32, 0x28, 0xe5, 0x16, 0xca, 0x34, 0xd5, 0xfe, 0xf3, 0x66, 0x14, 0x13,
	0xef, 0x48, 0xa0, 0x89, 0xb7, 0x60, 0xb6, 0xfc, 0x43, 0xf4, 0x7b, 0xa9, 0xf6, 0x77, 0xe5, 0x20,
	0xda, 0x23, 0xd2, 0xb3, 0x2b, 0xeb, 0x40, 0x26, 0x31, 0x14, 0xdc, 0x36, 0xba, 0x9d, 0xc8, 0x27,
	0x21, 0x11, 0xcc, 0xd7, 0xa4, 0xa5, 0x8a, 0x85, 0x28, 0x20, 0x98, 0x96, 0x75, 0xb0, 0x10, 0x89,
	0x68, 0xa2, 0xbd, 0xa5, 0x67, 0xa4, 0xaf, 0x0d, 0x4e, 0x77, 0x6a, 0x75, 0xe3, 0x2f, 0x6b, 0x13,
	0xac, 0xad, 0x66, 0x57, 0x84, 0xad, 0xf5, 0x67, 0xed, 0x7a, 0x98, 0x39, 0x8e, 0x99, 0xa7, 0x05,
	0x2f, 0xc9, 0xc9, 0x3a, 0xf8, 0xa4, 0xe4, 0x11, 0xc6, 0xfa, 0x31, 0xb6, 0xdb, 0x73, 0x4c, 0x06,
	0x21, 0xf4, 0xac, 0x2b, 0xc5, 0xc8, 0x91, 0x36, 0x70, 0xb3, 0x5b, 0xf7, 0x94, 0x74, 0x43, 0x60,
	0xbb, 0x72, 0x1f, 0x2b, 0xb7, 0xb5, 0x81, 0x6f, 0x8f, 0xad, 0xdf, 0x90, 0x43, 0x09, 0x52, 0x99,
	0x55, 0xb9, 0x70, 0x80, 0x0b, 0x5b, 0x91, 0x6d, 0xbe, 0x71, 0xa9, 0x48, 0xbe, 0x2c, 0xb5, 0xe3,
	0xf8, 0x8d, 0x23, 0xff, 0xca, 0x97, 0xd1, 0x7c, 0x5c, 0xb6, 0x10, 0x52, 0x38, 0x76, 0xb2, 0xbd,
	0xec, 0x4b, 0x40, 0x61, 0x59, 0x01, 0xee, 0x41, 0x99, 0x3c, 0x31, 0xcb, 0x64, 0xb6, 0x72, 0x60,
	0xd9, 0x7f, 0x71, 0x59, 0xc9, 0xa7, 0xcb, 0xeb, 0x40, 0xb7, 0x4d, 0xb7, 0x36, 0xd9, 0x8e, 0x79,
	0x1b, 0xcd, 0xeb, 0xf7, 0x3f, 0x2f, 0xe6, 0xc2, 0xdd, 0xfb, 0xd9, 0x79, 0xaa, 0xe4, 0x58, 0x8a,
	0x34, 0x07, 0x7d, 0xf5, 0x61, 0xac, 0xec, 0x6f, 0x0f, 0x66, 0x75, 0x86, 0xaf, 0x75, 0xe6, 0x7f,
	0x8d, 0x75, 0x3e, 0xff, 0x58, 0xbe, 0xd9, 0x59, 0x0d, 0xe9, 0xe5, 0xbf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xe0, 0x45, 0xea, 0xe5, 0xe5, 0x03, 0x00, 0x00,
}
