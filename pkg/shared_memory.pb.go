// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/shared_memory.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// OS shared memory regions.
type SharedMemory struct {
	// Shared memory segment ID
	Shmid int32 `protobuf:"varint,1,opt,name=shmid,proto3" json:"shmid"`
	// User ID of owning process
	OwnerUid int64 `protobuf:"varint,2,opt,name=owner_uid,json=ownerUid,proto3" json:"owner_uid"`
	// User ID of creator process
	CreatorUid int64 `protobuf:"varint,3,opt,name=creator_uid,json=creatorUid,proto3" json:"creator_uid"`
	// Process ID to last use the segment
	Pid int64 `protobuf:"varint,4,opt,name=pid,proto3" json:"pid"`
	// Process ID that created the segment
	CreatorPid int64 `protobuf:"varint,5,opt,name=creator_pid,json=creatorPid,proto3" json:"creator_pid"`
	// Attached time
	Atime int64 `protobuf:"varint,6,opt,name=atime,proto3" json:"atime"`
	// Detached time
	Dtime int64 `protobuf:"varint,7,opt,name=dtime,proto3" json:"dtime"`
	// Changed time
	Ctime int64 `protobuf:"varint,8,opt,name=ctime,proto3" json:"ctime"`
	// Memory segment permissions
	Permissions string `protobuf:"bytes,9,opt,name=permissions,proto3" json:"permissions"`
	// Size in bytes
	Size int64 `protobuf:"varint,10,opt,name=size,proto3" json:"size"`
	// Number of attached processes
	Attached int32 `protobuf:"varint,11,opt,name=attached,proto3" json:"attached"`
	// Destination/attach status
	Status string `protobuf:"bytes,12,opt,name=status,proto3" json:"status"`
	// 1 if segment is locked else 0
	Locked               int32    `protobuf:"varint,13,opt,name=locked,proto3" json:"locked"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SharedMemory) Reset()         { *m = SharedMemory{} }
func (m *SharedMemory) String() string { return proto.CompactTextString(m) }
func (*SharedMemory) ProtoMessage()    {}
func (*SharedMemory) Descriptor() ([]byte, []int) {
	return fileDescriptor_345f701657ca856e, []int{0}
}

func (m *SharedMemory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SharedMemory.Unmarshal(m, b)
}
func (m *SharedMemory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SharedMemory.Marshal(b, m, deterministic)
}
func (m *SharedMemory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SharedMemory.Merge(m, src)
}
func (m *SharedMemory) XXX_Size() int {
	return xxx_messageInfo_SharedMemory.Size(m)
}
func (m *SharedMemory) XXX_DiscardUnknown() {
	xxx_messageInfo_SharedMemory.DiscardUnknown(m)
}

var xxx_messageInfo_SharedMemory proto.InternalMessageInfo

func (m *SharedMemory) GetShmid() int32 {
	if m != nil {
		return m.Shmid
	}
	return 0
}

func (m *SharedMemory) GetOwnerUid() int64 {
	if m != nil {
		return m.OwnerUid
	}
	return 0
}

func (m *SharedMemory) GetCreatorUid() int64 {
	if m != nil {
		return m.CreatorUid
	}
	return 0
}

func (m *SharedMemory) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *SharedMemory) GetCreatorPid() int64 {
	if m != nil {
		return m.CreatorPid
	}
	return 0
}

func (m *SharedMemory) GetAtime() int64 {
	if m != nil {
		return m.Atime
	}
	return 0
}

func (m *SharedMemory) GetDtime() int64 {
	if m != nil {
		return m.Dtime
	}
	return 0
}

func (m *SharedMemory) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *SharedMemory) GetPermissions() string {
	if m != nil {
		return m.Permissions
	}
	return ""
}

func (m *SharedMemory) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *SharedMemory) GetAttached() int32 {
	if m != nil {
		return m.Attached
	}
	return 0
}

func (m *SharedMemory) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *SharedMemory) GetLocked() int32 {
	if m != nil {
		return m.Locked
	}
	return 0
}

func init() {
	proto.RegisterType((*SharedMemory)(nil), "schemas.SharedMemory")
}

func init() { proto.RegisterFile("pb/shared_memory.proto", fileDescriptor_345f701657ca856e) }

var fileDescriptor_345f701657ca856e = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x4d, 0x4b, 0x03, 0x31,
	0x10, 0x86, 0xd9, 0x7e, 0x77, 0x5a, 0x41, 0x82, 0x94, 0xa0, 0x07, 0x17, 0x4f, 0xbd, 0xd8, 0x15,
	0x05, 0x3d, 0x78, 0xf3, 0x2e, 0x48, 0xc5, 0x8b, 0x97, 0x92, 0x4d, 0xc6, 0x6e, 0x58, 0xd3, 0xc4,
	0x24, 0x8b, 0xd4, 0x7f, 0xea, 0xbf, 0x91, 0xcc, 0xae, 0x52, 0x6f, 0xf3, 0x3e, 0xcf, 0xbc, 0xcb,
	0x92, 0x81, 0x85, 0x2b, 0x8b, 0x50, 0x09, 0x8f, 0x6a, 0x63, 0xd0, 0x58, 0xbf, 0x5f, 0x39, 0x6f,
	0xa3, 0x65, 0xe3, 0x20, 0x2b, 0x34, 0x22, 0x5c, 0x7c, 0xf7, 0x60, 0xfe, 0x4c, 0x0b, 0x8f, 0xe4,
	0xd9, 0x09, 0x0c, 0x43, 0x65, 0xb4, 0xe2, 0x59, 0x9e, 0x2d, 0x87, 0xeb, 0x36, 0xb0, 0x33, 0x98,
	0xda, 0xcf, 0x1d, 0xfa, 0x4d, 0xa3, 0x15, 0xef, 0xe5, 0xd9, 0xb2, 0xbf, 0x9e, 0x10, 0x78, 0xd1,
	0x8a, 0x9d, 0xc3, 0x4c, 0x7a, 0x14, 0xd1, 0xb6, 0xba, 0x4f, 0x1a, 0x3a, 0x94, 0x16, 0x8e, 0xa1,
	0xef, 0xb4, 0xe2, 0x03, 0x12, 0x69, 0x3c, 0xac, 0x24, 0x33, 0xfc, 0x57, 0x79, 0xd2, 0x2a, 0xfd,
	0x86, 0x88, 0xda, 0x20, 0x1f, 0x91, 0x6a, 0x43, 0xa2, 0x8a, 0xe8, 0xb8, 0xa5, 0xea, 0x97, 0x4a,
	0xa2, 0x93, 0x96, 0x52, 0x60, 0x39, 0xcc, 0x1c, 0x7a, 0xa3, 0x43, 0xd0, 0x76, 0x17, 0xf8, 0x34,
	0xcf, 0x96, 0xd3, 0xf5, 0x21, 0x62, 0x0c, 0x06, 0x41, 0x7f, 0x21, 0x07, 0xaa, 0xd1, 0xcc, 0x4e,
	0x61, 0x22, 0x62, 0x14, 0xb2, 0x42, 0xc5, 0x67, 0xf4, 0x02, 0x7f, 0x99, 0x2d, 0x60, 0x14, 0xa2,
	0x88, 0x4d, 0xe0, 0x73, 0xfa, 0x58, 0x97, 0x12, 0x7f, 0xb7, 0xb2, 0x46, 0xc5, 0x8f, 0xa8, 0xd1,
	0xa5, 0x87, 0xeb, 0xd7, 0xab, 0xad, 0x8e, 0x55, 0x53, 0xae, 0xa4, 0x35, 0x85, 0xd1, 0xb2, 0x46,
	0x77, 0x77, 0x5b, 0xd8, 0xf0, 0xd1, 0xa0, 0xdf, 0x5f, 0xd2, 0x25, 0xca, 0xe6, 0xad, 0x70, 0xf5,
	0xf6, 0xbe, 0xbb, 0x47, 0x39, 0x22, 0x7a, 0xf3, 0x13, 0x00, 0x00, 0xff, 0xff, 0xa6, 0x39, 0xf7,
	0xbd, 0xb9, 0x01, 0x00, 0x00,
}
