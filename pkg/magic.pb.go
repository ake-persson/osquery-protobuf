// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/magic.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Magic number recognition library table.
type Magic struct {
	// Absolute path to target file
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path"`
	// Colon(:) separated list of files where the magic db file can be found. By default one of the following is used: /usr/share/file/magic/magic
	MagicDbFiles string `protobuf:"bytes,2,opt,name=magic_db_files,json=magicDbFiles,proto3" json:"magic_db_files"`
	// Magic number data from libmagic
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
	// MIME type data from libmagic
	MimeType string `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type"`
	// MIME encoding data from libmagic
	MimeEncoding         string   `protobuf:"bytes,5,opt,name=mime_encoding,json=mimeEncoding,proto3" json:"mime_encoding"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Magic) Reset()         { *m = Magic{} }
func (m *Magic) String() string { return proto.CompactTextString(m) }
func (*Magic) ProtoMessage()    {}
func (*Magic) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c5bb47955c63c95, []int{0}
}

func (m *Magic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Magic.Unmarshal(m, b)
}
func (m *Magic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Magic.Marshal(b, m, deterministic)
}
func (m *Magic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Magic.Merge(m, src)
}
func (m *Magic) XXX_Size() int {
	return xxx_messageInfo_Magic.Size(m)
}
func (m *Magic) XXX_DiscardUnknown() {
	xxx_messageInfo_Magic.DiscardUnknown(m)
}

var xxx_messageInfo_Magic proto.InternalMessageInfo

func (m *Magic) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Magic) GetMagicDbFiles() string {
	if m != nil {
		return m.MagicDbFiles
	}
	return ""
}

func (m *Magic) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Magic) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *Magic) GetMimeEncoding() string {
	if m != nil {
		return m.MimeEncoding
	}
	return ""
}

func init() {
	proto.RegisterType((*Magic)(nil), "schemas.Magic")
}

func init() { proto.RegisterFile("pb/magic.proto", fileDescriptor_9c5bb47955c63c95) }

var fileDescriptor_9c5bb47955c63c95 = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x8f, 0xb1, 0x4b, 0xc4, 0x30,
	0x14, 0x87, 0xa9, 0xb6, 0x6a, 0x83, 0x76, 0xc8, 0x14, 0x70, 0x11, 0x75, 0x70, 0xb1, 0x11, 0x05,
	0x1d, 0xdc, 0x44, 0xdd, 0x5c, 0xe4, 0xa6, 0x5b, 0x4a, 0x92, 0xbe, 0xa6, 0xa1, 0x97, 0x26, 0xd7,
	0xa4, 0x43, 0xff, 0x92, 0xfb, 0x77, 0x8f, 0xbc, 0xeb, 0xf6, 0xf8, 0x3e, 0xbe, 0x07, 0x3f, 0x52,
	0x79, 0xc9, 0xad, 0xd0, 0x46, 0xd5, 0x7e, 0x72, 0xd1, 0xd1, 0xcb, 0xa0, 0x7a, 0xb0, 0x22, 0xdc,
	0x1f, 0x32, 0x52, 0xfc, 0x25, 0x41, 0x29, 0xc9, 0xbd, 0x88, 0x3d, 0xcb, 0xee, 0xb2, 0xa7, 0xf2,
	0x1f, 0x6f, 0xfa, 0x48, 0x2a, 0xac, 0x9a, 0x56, 0x36, 0x9d, 0xd9, 0x41, 0x60, 0x67, 0x68, 0xaf,
	0x91, 0x7e, 0xcb, 0xdf, 0xc4, 0x52, 0xd9, 0x8a, 0x28, 0xd8, 0xf9, 0xa9, 0x4c, 0x37, 0xbd, 0x25,
	0xa5, 0x35, 0x16, 0x9a, 0xb8, 0x78, 0x60, 0x39, 0x8a, 0xab, 0x04, 0x36, 0x8b, 0x07, 0xfa, 0x40,
	0x6e, 0x50, 0xc2, 0xa8, 0x5c, 0x6b, 0x46, 0xcd, 0x8a, 0xf5, 0xab, 0xb1, 0xf0, 0xb3, 0xb2, 0xaf,
	0xd7, 0xed, 0x8b, 0x36, 0xb1, 0x9f, 0x65, 0xad, 0x9c, 0xe5, 0xd6, 0xa8, 0x01, 0xfc, 0xc7, 0x3b,
	0x77, 0x61, 0x3f, 0xc3, 0xb4, 0x3c, 0xe3, 0x0e, 0x39, 0x77, 0xdc, 0x0f, 0xfa, 0x73, 0x5d, 0x23,
	0x2f, 0x90, 0xbe, 0x1d, 0x03, 0x00, 0x00, 0xff, 0xff, 0x31, 0xba, 0x62, 0xb7, 0xef, 0x00, 0x00,
	0x00,
}
