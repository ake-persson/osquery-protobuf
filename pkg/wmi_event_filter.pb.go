// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/wmi_event_filter.proto

package schemas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Lists WMI event filters.
type WmiEventFilter struct {
	// Unique identifier of an event filter.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// Windows Management Instrumentation Query Language (WQL) event query that specifies the set of events for consumer notification
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query"`
	// Query language that the query is written in.
	QueryLanguage string `protobuf:"bytes,3,opt,name=query_language,json=queryLanguage,proto3" json:"query_language"`
	// The name of the class.
	Class string `protobuf:"bytes,4,opt,name=class,proto3" json:"class"`
	// Relative path to the class or instance.
	RelativePath         string   `protobuf:"bytes,5,opt,name=relative_path,json=relativePath,proto3" json:"relative_path"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WmiEventFilter) Reset()         { *m = WmiEventFilter{} }
func (m *WmiEventFilter) String() string { return proto.CompactTextString(m) }
func (*WmiEventFilter) ProtoMessage()    {}
func (*WmiEventFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_82d94dc22d106757, []int{0}
}

func (m *WmiEventFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WmiEventFilter.Unmarshal(m, b)
}
func (m *WmiEventFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WmiEventFilter.Marshal(b, m, deterministic)
}
func (m *WmiEventFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WmiEventFilter.Merge(m, src)
}
func (m *WmiEventFilter) XXX_Size() int {
	return xxx_messageInfo_WmiEventFilter.Size(m)
}
func (m *WmiEventFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_WmiEventFilter.DiscardUnknown(m)
}

var xxx_messageInfo_WmiEventFilter proto.InternalMessageInfo

func (m *WmiEventFilter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WmiEventFilter) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *WmiEventFilter) GetQueryLanguage() string {
	if m != nil {
		return m.QueryLanguage
	}
	return ""
}

func (m *WmiEventFilter) GetClass() string {
	if m != nil {
		return m.Class
	}
	return ""
}

func (m *WmiEventFilter) GetRelativePath() string {
	if m != nil {
		return m.RelativePath
	}
	return ""
}

func init() {
	proto.RegisterType((*WmiEventFilter)(nil), "schemas.WmiEventFilter")
}

func init() { proto.RegisterFile("pb/wmi_event_filter.proto", fileDescriptor_82d94dc22d106757) }

var fileDescriptor_82d94dc22d106757 = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8f, 0xbf, 0x4a, 0x83, 0x31,
	0x14, 0xc5, 0xf9, 0xb4, 0x55, 0x0c, 0xb6, 0x43, 0x70, 0x88, 0x9b, 0x28, 0x82, 0x8b, 0x8d, 0x28,
	0xe8, 0xe0, 0x26, 0xe8, 0xe4, 0x20, 0x2e, 0x82, 0x4b, 0xb8, 0x09, 0xb7, 0x49, 0x68, 0xf2, 0x25,
	0xe6, 0x4f, 0xc5, 0x77, 0xf1, 0x61, 0xa5, 0xb7, 0x75, 0xbb, 0xe7, 0x77, 0xce, 0xe1, 0x72, 0xd8,
	0x69, 0xd6, 0xf2, 0x3b, 0x7a, 0x85, 0x6b, 0x1c, 0x9b, 0x5a, 0xfa, 0xd0, 0xb0, 0x2c, 0x72, 0x49,
	0x2d, 0xf1, 0xc3, 0x6a, 0x1c, 0x46, 0xa8, 0xe7, 0xbf, 0x03, 0x9b, 0x7f, 0x44, 0xff, 0xbc, 0x89,
	0xbc, 0x50, 0x82, 0x73, 0x36, 0x19, 0x21, 0xa2, 0x18, 0xce, 0x86, 0xab, 0xa3, 0x77, 0xba, 0xf9,
	0x09, 0x9b, 0x7e, 0x75, 0x2c, 0x3f, 0x62, 0x8f, 0xe0, 0x56, 0xf0, 0x4b, 0x36, 0xa7, 0x43, 0x05,
	0x18, 0x6d, 0x07, 0x8b, 0x62, 0x9f, 0xec, 0x19, 0xd1, 0xd7, 0x1d, 0xdc, 0x94, 0x4d, 0x80, 0x5a,
	0xc5, 0x64, 0x5b, 0x26, 0xc1, 0x2f, 0xd8, 0xac, 0x60, 0x80, 0xe6, 0xd7, 0xa8, 0x32, 0x34, 0x27,
	0xa6, 0xe4, 0x1e, 0xff, 0xc3, 0x37, 0x68, 0xee, 0xe9, 0xf6, 0xf3, 0xc6, 0xfa, 0xe6, 0xba, 0x5e,
	0x98, 0x14, 0x65, 0xf4, 0x66, 0x85, 0xf9, 0xe1, 0x5e, 0xa6, 0x4a, 0x1f, 0xae, 0x69, 0x8c, 0xee,
	0x4b, 0x99, 0x57, 0xf6, 0x71, 0x37, 0x49, 0x1f, 0x10, 0xbd, 0xfb, 0x0b, 0x00, 0x00, 0xff, 0xff,
	0x49, 0x5f, 0x14, 0x85, 0xff, 0x00, 0x00, 0x00,
}
